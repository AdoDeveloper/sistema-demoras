
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `ParosEnv` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model ParosEnv
 * 
 */
export type ParosEnvModel = runtime.Types.Result.DefaultSelection<Prisma.$ParosEnvPayload>

export type AggregateParosEnv = {
  _count: ParosEnvCountAggregateOutputType | null
  _avg: ParosEnvAvgAggregateOutputType | null
  _sum: ParosEnvSumAggregateOutputType | null
  _min: ParosEnvMinAggregateOutputType | null
  _max: ParosEnvMaxAggregateOutputType | null
}

export type ParosEnvAvgAggregateOutputType = {
  id: number | null
  segundoProcesoEnvId: number | null
}

export type ParosEnvSumAggregateOutputType = {
  id: number | null
  segundoProcesoEnvId: number | null
}

export type ParosEnvMinAggregateOutputType = {
  id: number | null
  segundoProcesoEnvId: number | null
  inicio: string | null
  fin: string | null
  razon: string | null
  diffCargaInicio: string | null
  duracionParo: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ParosEnvMaxAggregateOutputType = {
  id: number | null
  segundoProcesoEnvId: number | null
  inicio: string | null
  fin: string | null
  razon: string | null
  diffCargaInicio: string | null
  duracionParo: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ParosEnvCountAggregateOutputType = {
  id: number
  segundoProcesoEnvId: number
  inicio: number
  fin: number
  razon: number
  diffCargaInicio: number
  duracionParo: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ParosEnvAvgAggregateInputType = {
  id?: true
  segundoProcesoEnvId?: true
}

export type ParosEnvSumAggregateInputType = {
  id?: true
  segundoProcesoEnvId?: true
}

export type ParosEnvMinAggregateInputType = {
  id?: true
  segundoProcesoEnvId?: true
  inicio?: true
  fin?: true
  razon?: true
  diffCargaInicio?: true
  duracionParo?: true
  createdAt?: true
  updatedAt?: true
}

export type ParosEnvMaxAggregateInputType = {
  id?: true
  segundoProcesoEnvId?: true
  inicio?: true
  fin?: true
  razon?: true
  diffCargaInicio?: true
  duracionParo?: true
  createdAt?: true
  updatedAt?: true
}

export type ParosEnvCountAggregateInputType = {
  id?: true
  segundoProcesoEnvId?: true
  inicio?: true
  fin?: true
  razon?: true
  diffCargaInicio?: true
  duracionParo?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ParosEnvAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ParosEnv to aggregate.
   */
  where?: Prisma.ParosEnvWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosEnvs to fetch.
   */
  orderBy?: Prisma.ParosEnvOrderByWithRelationInput | Prisma.ParosEnvOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ParosEnvWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosEnvs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosEnvs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ParosEnvs
  **/
  _count?: true | ParosEnvCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ParosEnvAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ParosEnvSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ParosEnvMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ParosEnvMaxAggregateInputType
}

export type GetParosEnvAggregateType<T extends ParosEnvAggregateArgs> = {
      [P in keyof T & keyof AggregateParosEnv]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateParosEnv[P]>
    : Prisma.GetScalarType<T[P], AggregateParosEnv[P]>
}




export type ParosEnvGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ParosEnvWhereInput
  orderBy?: Prisma.ParosEnvOrderByWithAggregationInput | Prisma.ParosEnvOrderByWithAggregationInput[]
  by: Prisma.ParosEnvScalarFieldEnum[] | Prisma.ParosEnvScalarFieldEnum
  having?: Prisma.ParosEnvScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ParosEnvCountAggregateInputType | true
  _avg?: ParosEnvAvgAggregateInputType
  _sum?: ParosEnvSumAggregateInputType
  _min?: ParosEnvMinAggregateInputType
  _max?: ParosEnvMaxAggregateInputType
}

export type ParosEnvGroupByOutputType = {
  id: number
  segundoProcesoEnvId: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt: Date
  updatedAt: Date
  _count: ParosEnvCountAggregateOutputType | null
  _avg: ParosEnvAvgAggregateOutputType | null
  _sum: ParosEnvSumAggregateOutputType | null
  _min: ParosEnvMinAggregateOutputType | null
  _max: ParosEnvMaxAggregateOutputType | null
}

type GetParosEnvGroupByPayload<T extends ParosEnvGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ParosEnvGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ParosEnvGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ParosEnvGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ParosEnvGroupByOutputType[P]>
      }
    >
  > 



export type ParosEnvWhereInput = {
  AND?: Prisma.ParosEnvWhereInput | Prisma.ParosEnvWhereInput[]
  OR?: Prisma.ParosEnvWhereInput[]
  NOT?: Prisma.ParosEnvWhereInput | Prisma.ParosEnvWhereInput[]
  id?: Prisma.IntFilter<"ParosEnv"> | number
  segundoProcesoEnvId?: Prisma.IntFilter<"ParosEnv"> | number
  inicio?: Prisma.StringFilter<"ParosEnv"> | string
  fin?: Prisma.StringFilter<"ParosEnv"> | string
  razon?: Prisma.StringFilter<"ParosEnv"> | string
  diffCargaInicio?: Prisma.StringFilter<"ParosEnv"> | string
  duracionParo?: Prisma.StringFilter<"ParosEnv"> | string
  createdAt?: Prisma.DateTimeFilter<"ParosEnv"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ParosEnv"> | Date | string
  segundoProcesoEnv?: Prisma.XOR<Prisma.SegundoProcesoEnvScalarRelationFilter, Prisma.SegundoProcesoEnvWhereInput>
}

export type ParosEnvOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  segundoProcesoEnv?: Prisma.SegundoProcesoEnvOrderByWithRelationInput
  _relevance?: Prisma.ParosEnvOrderByRelevanceInput
}

export type ParosEnvWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ParosEnvWhereInput | Prisma.ParosEnvWhereInput[]
  OR?: Prisma.ParosEnvWhereInput[]
  NOT?: Prisma.ParosEnvWhereInput | Prisma.ParosEnvWhereInput[]
  segundoProcesoEnvId?: Prisma.IntFilter<"ParosEnv"> | number
  inicio?: Prisma.StringFilter<"ParosEnv"> | string
  fin?: Prisma.StringFilter<"ParosEnv"> | string
  razon?: Prisma.StringFilter<"ParosEnv"> | string
  diffCargaInicio?: Prisma.StringFilter<"ParosEnv"> | string
  duracionParo?: Prisma.StringFilter<"ParosEnv"> | string
  createdAt?: Prisma.DateTimeFilter<"ParosEnv"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ParosEnv"> | Date | string
  segundoProcesoEnv?: Prisma.XOR<Prisma.SegundoProcesoEnvScalarRelationFilter, Prisma.SegundoProcesoEnvWhereInput>
}, "id">

export type ParosEnvOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ParosEnvCountOrderByAggregateInput
  _avg?: Prisma.ParosEnvAvgOrderByAggregateInput
  _max?: Prisma.ParosEnvMaxOrderByAggregateInput
  _min?: Prisma.ParosEnvMinOrderByAggregateInput
  _sum?: Prisma.ParosEnvSumOrderByAggregateInput
}

export type ParosEnvScalarWhereWithAggregatesInput = {
  AND?: Prisma.ParosEnvScalarWhereWithAggregatesInput | Prisma.ParosEnvScalarWhereWithAggregatesInput[]
  OR?: Prisma.ParosEnvScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ParosEnvScalarWhereWithAggregatesInput | Prisma.ParosEnvScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ParosEnv"> | number
  segundoProcesoEnvId?: Prisma.IntWithAggregatesFilter<"ParosEnv"> | number
  inicio?: Prisma.StringWithAggregatesFilter<"ParosEnv"> | string
  fin?: Prisma.StringWithAggregatesFilter<"ParosEnv"> | string
  razon?: Prisma.StringWithAggregatesFilter<"ParosEnv"> | string
  diffCargaInicio?: Prisma.StringWithAggregatesFilter<"ParosEnv"> | string
  duracionParo?: Prisma.StringWithAggregatesFilter<"ParosEnv"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ParosEnv"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ParosEnv"> | Date | string
}

export type ParosEnvCreateInput = {
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
  segundoProcesoEnv: Prisma.SegundoProcesoEnvCreateNestedOneWithoutParosEnvInput
}

export type ParosEnvUncheckedCreateInput = {
  id?: number
  segundoProcesoEnvId: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosEnvUpdateInput = {
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  segundoProcesoEnv?: Prisma.SegundoProcesoEnvUpdateOneRequiredWithoutParosEnvNestedInput
}

export type ParosEnvUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  segundoProcesoEnvId?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosEnvCreateManyInput = {
  id?: number
  segundoProcesoEnvId: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosEnvUpdateManyMutationInput = {
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosEnvUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  segundoProcesoEnvId?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosEnvListRelationFilter = {
  every?: Prisma.ParosEnvWhereInput
  some?: Prisma.ParosEnvWhereInput
  none?: Prisma.ParosEnvWhereInput
}

export type ParosEnvOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ParosEnvOrderByRelevanceInput = {
  fields: Prisma.ParosEnvOrderByRelevanceFieldEnum | Prisma.ParosEnvOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type ParosEnvCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ParosEnvAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
}

export type ParosEnvMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ParosEnvMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ParosEnvSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoEnvId?: Prisma.SortOrder
}

export type ParosEnvCreateNestedManyWithoutSegundoProcesoEnvInput = {
  create?: Prisma.XOR<Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput> | Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput[] | Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput[]
  connectOrCreate?: Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput | Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput[]
  createMany?: Prisma.ParosEnvCreateManySegundoProcesoEnvInputEnvelope
  connect?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
}

export type ParosEnvUncheckedCreateNestedManyWithoutSegundoProcesoEnvInput = {
  create?: Prisma.XOR<Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput> | Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput[] | Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput[]
  connectOrCreate?: Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput | Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput[]
  createMany?: Prisma.ParosEnvCreateManySegundoProcesoEnvInputEnvelope
  connect?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
}

export type ParosEnvUpdateManyWithoutSegundoProcesoEnvNestedInput = {
  create?: Prisma.XOR<Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput> | Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput[] | Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput[]
  connectOrCreate?: Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput | Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput[]
  upsert?: Prisma.ParosEnvUpsertWithWhereUniqueWithoutSegundoProcesoEnvInput | Prisma.ParosEnvUpsertWithWhereUniqueWithoutSegundoProcesoEnvInput[]
  createMany?: Prisma.ParosEnvCreateManySegundoProcesoEnvInputEnvelope
  set?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  disconnect?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  delete?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  connect?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  update?: Prisma.ParosEnvUpdateWithWhereUniqueWithoutSegundoProcesoEnvInput | Prisma.ParosEnvUpdateWithWhereUniqueWithoutSegundoProcesoEnvInput[]
  updateMany?: Prisma.ParosEnvUpdateManyWithWhereWithoutSegundoProcesoEnvInput | Prisma.ParosEnvUpdateManyWithWhereWithoutSegundoProcesoEnvInput[]
  deleteMany?: Prisma.ParosEnvScalarWhereInput | Prisma.ParosEnvScalarWhereInput[]
}

export type ParosEnvUncheckedUpdateManyWithoutSegundoProcesoEnvNestedInput = {
  create?: Prisma.XOR<Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput> | Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput[] | Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput[]
  connectOrCreate?: Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput | Prisma.ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput[]
  upsert?: Prisma.ParosEnvUpsertWithWhereUniqueWithoutSegundoProcesoEnvInput | Prisma.ParosEnvUpsertWithWhereUniqueWithoutSegundoProcesoEnvInput[]
  createMany?: Prisma.ParosEnvCreateManySegundoProcesoEnvInputEnvelope
  set?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  disconnect?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  delete?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  connect?: Prisma.ParosEnvWhereUniqueInput | Prisma.ParosEnvWhereUniqueInput[]
  update?: Prisma.ParosEnvUpdateWithWhereUniqueWithoutSegundoProcesoEnvInput | Prisma.ParosEnvUpdateWithWhereUniqueWithoutSegundoProcesoEnvInput[]
  updateMany?: Prisma.ParosEnvUpdateManyWithWhereWithoutSegundoProcesoEnvInput | Prisma.ParosEnvUpdateManyWithWhereWithoutSegundoProcesoEnvInput[]
  deleteMany?: Prisma.ParosEnvScalarWhereInput | Prisma.ParosEnvScalarWhereInput[]
}

export type ParosEnvCreateWithoutSegundoProcesoEnvInput = {
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput = {
  id?: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosEnvCreateOrConnectWithoutSegundoProcesoEnvInput = {
  where: Prisma.ParosEnvWhereUniqueInput
  create: Prisma.XOR<Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput>
}

export type ParosEnvCreateManySegundoProcesoEnvInputEnvelope = {
  data: Prisma.ParosEnvCreateManySegundoProcesoEnvInput | Prisma.ParosEnvCreateManySegundoProcesoEnvInput[]
  skipDuplicates?: boolean
}

export type ParosEnvUpsertWithWhereUniqueWithoutSegundoProcesoEnvInput = {
  where: Prisma.ParosEnvWhereUniqueInput
  update: Prisma.XOR<Prisma.ParosEnvUpdateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedUpdateWithoutSegundoProcesoEnvInput>
  create: Prisma.XOR<Prisma.ParosEnvCreateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedCreateWithoutSegundoProcesoEnvInput>
}

export type ParosEnvUpdateWithWhereUniqueWithoutSegundoProcesoEnvInput = {
  where: Prisma.ParosEnvWhereUniqueInput
  data: Prisma.XOR<Prisma.ParosEnvUpdateWithoutSegundoProcesoEnvInput, Prisma.ParosEnvUncheckedUpdateWithoutSegundoProcesoEnvInput>
}

export type ParosEnvUpdateManyWithWhereWithoutSegundoProcesoEnvInput = {
  where: Prisma.ParosEnvScalarWhereInput
  data: Prisma.XOR<Prisma.ParosEnvUpdateManyMutationInput, Prisma.ParosEnvUncheckedUpdateManyWithoutSegundoProcesoEnvInput>
}

export type ParosEnvScalarWhereInput = {
  AND?: Prisma.ParosEnvScalarWhereInput | Prisma.ParosEnvScalarWhereInput[]
  OR?: Prisma.ParosEnvScalarWhereInput[]
  NOT?: Prisma.ParosEnvScalarWhereInput | Prisma.ParosEnvScalarWhereInput[]
  id?: Prisma.IntFilter<"ParosEnv"> | number
  segundoProcesoEnvId?: Prisma.IntFilter<"ParosEnv"> | number
  inicio?: Prisma.StringFilter<"ParosEnv"> | string
  fin?: Prisma.StringFilter<"ParosEnv"> | string
  razon?: Prisma.StringFilter<"ParosEnv"> | string
  diffCargaInicio?: Prisma.StringFilter<"ParosEnv"> | string
  duracionParo?: Prisma.StringFilter<"ParosEnv"> | string
  createdAt?: Prisma.DateTimeFilter<"ParosEnv"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ParosEnv"> | Date | string
}

export type ParosEnvCreateManySegundoProcesoEnvInput = {
  id?: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosEnvUpdateWithoutSegundoProcesoEnvInput = {
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosEnvUncheckedUpdateWithoutSegundoProcesoEnvInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosEnvUncheckedUpdateManyWithoutSegundoProcesoEnvInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ParosEnvSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  segundoProcesoEnvId?: boolean
  inicio?: boolean
  fin?: boolean
  razon?: boolean
  diffCargaInicio?: boolean
  duracionParo?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  segundoProcesoEnv?: boolean | Prisma.SegundoProcesoEnvDefaultArgs<ExtArgs>
}, ExtArgs["result"]["parosEnv"]>



export type ParosEnvSelectScalar = {
  id?: boolean
  segundoProcesoEnvId?: boolean
  inicio?: boolean
  fin?: boolean
  razon?: boolean
  diffCargaInicio?: boolean
  duracionParo?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ParosEnvOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "segundoProcesoEnvId" | "inicio" | "fin" | "razon" | "diffCargaInicio" | "duracionParo" | "createdAt" | "updatedAt", ExtArgs["result"]["parosEnv"]>
export type ParosEnvInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  segundoProcesoEnv?: boolean | Prisma.SegundoProcesoEnvDefaultArgs<ExtArgs>
}

export type $ParosEnvPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ParosEnv"
  objects: {
    segundoProcesoEnv: Prisma.$SegundoProcesoEnvPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    segundoProcesoEnvId: number
    inicio: string
    fin: string
    razon: string
    diffCargaInicio: string
    duracionParo: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["parosEnv"]>
  composites: {}
}

export type ParosEnvGetPayload<S extends boolean | null | undefined | ParosEnvDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload, S>

export type ParosEnvCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ParosEnvFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ParosEnvCountAggregateInputType | true
  }

export interface ParosEnvDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ParosEnv'], meta: { name: 'ParosEnv' } }
  /**
   * Find zero or one ParosEnv that matches the filter.
   * @param {ParosEnvFindUniqueArgs} args - Arguments to find a ParosEnv
   * @example
   * // Get one ParosEnv
   * const parosEnv = await prisma.parosEnv.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ParosEnvFindUniqueArgs>(args: Prisma.SelectSubset<T, ParosEnvFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ParosEnv that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ParosEnvFindUniqueOrThrowArgs} args - Arguments to find a ParosEnv
   * @example
   * // Get one ParosEnv
   * const parosEnv = await prisma.parosEnv.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ParosEnvFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ParosEnvFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ParosEnv that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvFindFirstArgs} args - Arguments to find a ParosEnv
   * @example
   * // Get one ParosEnv
   * const parosEnv = await prisma.parosEnv.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ParosEnvFindFirstArgs>(args?: Prisma.SelectSubset<T, ParosEnvFindFirstArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ParosEnv that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvFindFirstOrThrowArgs} args - Arguments to find a ParosEnv
   * @example
   * // Get one ParosEnv
   * const parosEnv = await prisma.parosEnv.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ParosEnvFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ParosEnvFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ParosEnvs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ParosEnvs
   * const parosEnvs = await prisma.parosEnv.findMany()
   * 
   * // Get first 10 ParosEnvs
   * const parosEnvs = await prisma.parosEnv.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const parosEnvWithIdOnly = await prisma.parosEnv.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ParosEnvFindManyArgs>(args?: Prisma.SelectSubset<T, ParosEnvFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ParosEnv.
   * @param {ParosEnvCreateArgs} args - Arguments to create a ParosEnv.
   * @example
   * // Create one ParosEnv
   * const ParosEnv = await prisma.parosEnv.create({
   *   data: {
   *     // ... data to create a ParosEnv
   *   }
   * })
   * 
   */
  create<T extends ParosEnvCreateArgs>(args: Prisma.SelectSubset<T, ParosEnvCreateArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ParosEnvs.
   * @param {ParosEnvCreateManyArgs} args - Arguments to create many ParosEnvs.
   * @example
   * // Create many ParosEnvs
   * const parosEnv = await prisma.parosEnv.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ParosEnvCreateManyArgs>(args?: Prisma.SelectSubset<T, ParosEnvCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a ParosEnv.
   * @param {ParosEnvDeleteArgs} args - Arguments to delete one ParosEnv.
   * @example
   * // Delete one ParosEnv
   * const ParosEnv = await prisma.parosEnv.delete({
   *   where: {
   *     // ... filter to delete one ParosEnv
   *   }
   * })
   * 
   */
  delete<T extends ParosEnvDeleteArgs>(args: Prisma.SelectSubset<T, ParosEnvDeleteArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ParosEnv.
   * @param {ParosEnvUpdateArgs} args - Arguments to update one ParosEnv.
   * @example
   * // Update one ParosEnv
   * const parosEnv = await prisma.parosEnv.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ParosEnvUpdateArgs>(args: Prisma.SelectSubset<T, ParosEnvUpdateArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ParosEnvs.
   * @param {ParosEnvDeleteManyArgs} args - Arguments to filter ParosEnvs to delete.
   * @example
   * // Delete a few ParosEnvs
   * const { count } = await prisma.parosEnv.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ParosEnvDeleteManyArgs>(args?: Prisma.SelectSubset<T, ParosEnvDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ParosEnvs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ParosEnvs
   * const parosEnv = await prisma.parosEnv.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ParosEnvUpdateManyArgs>(args: Prisma.SelectSubset<T, ParosEnvUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one ParosEnv.
   * @param {ParosEnvUpsertArgs} args - Arguments to update or create a ParosEnv.
   * @example
   * // Update or create a ParosEnv
   * const parosEnv = await prisma.parosEnv.upsert({
   *   create: {
   *     // ... data to create a ParosEnv
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ParosEnv we want to update
   *   }
   * })
   */
  upsert<T extends ParosEnvUpsertArgs>(args: Prisma.SelectSubset<T, ParosEnvUpsertArgs<ExtArgs>>): Prisma.Prisma__ParosEnvClient<runtime.Types.Result.GetResult<Prisma.$ParosEnvPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ParosEnvs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvCountArgs} args - Arguments to filter ParosEnvs to count.
   * @example
   * // Count the number of ParosEnvs
   * const count = await prisma.parosEnv.count({
   *   where: {
   *     // ... the filter for the ParosEnvs we want to count
   *   }
   * })
  **/
  count<T extends ParosEnvCountArgs>(
    args?: Prisma.Subset<T, ParosEnvCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ParosEnvCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ParosEnv.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ParosEnvAggregateArgs>(args: Prisma.Subset<T, ParosEnvAggregateArgs>): Prisma.PrismaPromise<GetParosEnvAggregateType<T>>

  /**
   * Group by ParosEnv.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosEnvGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ParosEnvGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ParosEnvGroupByArgs['orderBy'] }
      : { orderBy?: ParosEnvGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ParosEnvGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParosEnvGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ParosEnv model
 */
readonly fields: ParosEnvFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ParosEnv.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ParosEnvClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  segundoProcesoEnv<T extends Prisma.SegundoProcesoEnvDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SegundoProcesoEnvDefaultArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoEnvClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoEnvPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ParosEnv model
 */
export interface ParosEnvFieldRefs {
  readonly id: Prisma.FieldRef<"ParosEnv", 'Int'>
  readonly segundoProcesoEnvId: Prisma.FieldRef<"ParosEnv", 'Int'>
  readonly inicio: Prisma.FieldRef<"ParosEnv", 'String'>
  readonly fin: Prisma.FieldRef<"ParosEnv", 'String'>
  readonly razon: Prisma.FieldRef<"ParosEnv", 'String'>
  readonly diffCargaInicio: Prisma.FieldRef<"ParosEnv", 'String'>
  readonly duracionParo: Prisma.FieldRef<"ParosEnv", 'String'>
  readonly createdAt: Prisma.FieldRef<"ParosEnv", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ParosEnv", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ParosEnv findUnique
 */
export type ParosEnvFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * Filter, which ParosEnv to fetch.
   */
  where: Prisma.ParosEnvWhereUniqueInput
}

/**
 * ParosEnv findUniqueOrThrow
 */
export type ParosEnvFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * Filter, which ParosEnv to fetch.
   */
  where: Prisma.ParosEnvWhereUniqueInput
}

/**
 * ParosEnv findFirst
 */
export type ParosEnvFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * Filter, which ParosEnv to fetch.
   */
  where?: Prisma.ParosEnvWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosEnvs to fetch.
   */
  orderBy?: Prisma.ParosEnvOrderByWithRelationInput | Prisma.ParosEnvOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ParosEnvs.
   */
  cursor?: Prisma.ParosEnvWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosEnvs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosEnvs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ParosEnvs.
   */
  distinct?: Prisma.ParosEnvScalarFieldEnum | Prisma.ParosEnvScalarFieldEnum[]
}

/**
 * ParosEnv findFirstOrThrow
 */
export type ParosEnvFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * Filter, which ParosEnv to fetch.
   */
  where?: Prisma.ParosEnvWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosEnvs to fetch.
   */
  orderBy?: Prisma.ParosEnvOrderByWithRelationInput | Prisma.ParosEnvOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ParosEnvs.
   */
  cursor?: Prisma.ParosEnvWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosEnvs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosEnvs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ParosEnvs.
   */
  distinct?: Prisma.ParosEnvScalarFieldEnum | Prisma.ParosEnvScalarFieldEnum[]
}

/**
 * ParosEnv findMany
 */
export type ParosEnvFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * Filter, which ParosEnvs to fetch.
   */
  where?: Prisma.ParosEnvWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosEnvs to fetch.
   */
  orderBy?: Prisma.ParosEnvOrderByWithRelationInput | Prisma.ParosEnvOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ParosEnvs.
   */
  cursor?: Prisma.ParosEnvWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosEnvs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosEnvs.
   */
  skip?: number
  distinct?: Prisma.ParosEnvScalarFieldEnum | Prisma.ParosEnvScalarFieldEnum[]
}

/**
 * ParosEnv create
 */
export type ParosEnvCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * The data needed to create a ParosEnv.
   */
  data: Prisma.XOR<Prisma.ParosEnvCreateInput, Prisma.ParosEnvUncheckedCreateInput>
}

/**
 * ParosEnv createMany
 */
export type ParosEnvCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ParosEnvs.
   */
  data: Prisma.ParosEnvCreateManyInput | Prisma.ParosEnvCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ParosEnv update
 */
export type ParosEnvUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * The data needed to update a ParosEnv.
   */
  data: Prisma.XOR<Prisma.ParosEnvUpdateInput, Prisma.ParosEnvUncheckedUpdateInput>
  /**
   * Choose, which ParosEnv to update.
   */
  where: Prisma.ParosEnvWhereUniqueInput
}

/**
 * ParosEnv updateMany
 */
export type ParosEnvUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ParosEnvs.
   */
  data: Prisma.XOR<Prisma.ParosEnvUpdateManyMutationInput, Prisma.ParosEnvUncheckedUpdateManyInput>
  /**
   * Filter which ParosEnvs to update
   */
  where?: Prisma.ParosEnvWhereInput
  /**
   * Limit how many ParosEnvs to update.
   */
  limit?: number
}

/**
 * ParosEnv upsert
 */
export type ParosEnvUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * The filter to search for the ParosEnv to update in case it exists.
   */
  where: Prisma.ParosEnvWhereUniqueInput
  /**
   * In case the ParosEnv found by the `where` argument doesn't exist, create a new ParosEnv with this data.
   */
  create: Prisma.XOR<Prisma.ParosEnvCreateInput, Prisma.ParosEnvUncheckedCreateInput>
  /**
   * In case the ParosEnv was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ParosEnvUpdateInput, Prisma.ParosEnvUncheckedUpdateInput>
}

/**
 * ParosEnv delete
 */
export type ParosEnvDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
  /**
   * Filter which ParosEnv to delete.
   */
  where: Prisma.ParosEnvWhereUniqueInput
}

/**
 * ParosEnv deleteMany
 */
export type ParosEnvDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ParosEnvs to delete
   */
  where?: Prisma.ParosEnvWhereInput
  /**
   * Limit how many ParosEnvs to delete.
   */
  limit?: number
}

/**
 * ParosEnv without action
 */
export type ParosEnvDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosEnv
   */
  select?: Prisma.ParosEnvSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosEnv
   */
  omit?: Prisma.ParosEnvOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosEnvInclude<ExtArgs> | null
}
