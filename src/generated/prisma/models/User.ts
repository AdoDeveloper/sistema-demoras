
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserAvgAggregateOutputType = {
  id: number | null
  roleId: number | null
}

export type UserSumAggregateOutputType = {
  id: number | null
  roleId: number | null
}

export type UserMinAggregateOutputType = {
  id: number | null
  username: string | null
  nombreCompleto: string | null
  codigo: string | null
  email: string | null
  password: string | null
  eliminado: boolean | null
  activo: boolean | null
  createdAt: Date | null
  roleId: number | null
}

export type UserMaxAggregateOutputType = {
  id: number | null
  username: string | null
  nombreCompleto: string | null
  codigo: string | null
  email: string | null
  password: string | null
  eliminado: boolean | null
  activo: boolean | null
  createdAt: Date | null
  roleId: number | null
}

export type UserCountAggregateOutputType = {
  id: number
  username: number
  nombreCompleto: number
  codigo: number
  email: number
  password: number
  eliminado: number
  activo: number
  createdAt: number
  roleId: number
  _all: number
}


export type UserAvgAggregateInputType = {
  id?: true
  roleId?: true
}

export type UserSumAggregateInputType = {
  id?: true
  roleId?: true
}

export type UserMinAggregateInputType = {
  id?: true
  username?: true
  nombreCompleto?: true
  codigo?: true
  email?: true
  password?: true
  eliminado?: true
  activo?: true
  createdAt?: true
  roleId?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  username?: true
  nombreCompleto?: true
  codigo?: true
  email?: true
  password?: true
  eliminado?: true
  activo?: true
  createdAt?: true
  roleId?: true
}

export type UserCountAggregateInputType = {
  id?: true
  username?: true
  nombreCompleto?: true
  codigo?: true
  email?: true
  password?: true
  eliminado?: true
  activo?: true
  createdAt?: true
  roleId?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _avg?: UserAvgAggregateInputType
  _sum?: UserSumAggregateInputType
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: number
  username: string
  nombreCompleto: string
  codigo: string
  email: string | null
  password: string | null
  eliminado: boolean
  activo: boolean
  createdAt: Date
  roleId: number
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  > 



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.IntFilter<"User"> | number
  username?: Prisma.StringFilter<"User"> | string
  nombreCompleto?: Prisma.StringFilter<"User"> | string
  codigo?: Prisma.StringFilter<"User"> | string
  email?: Prisma.StringNullableFilter<"User"> | string | null
  password?: Prisma.StringNullableFilter<"User"> | string | null
  eliminado?: Prisma.BoolFilter<"User"> | boolean
  activo?: Prisma.BoolFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  roleId?: Prisma.IntFilter<"User"> | number
  demoras?: Prisma.DemoraListRelationFilter
  envasados?: Prisma.EnvasadoListRelationFilter
  molinos?: Prisma.MolinoListRelationFilter
  actividades?: Prisma.ActividadListRelationFilter
  equipos?: Prisma.EquipoListRelationFilter
  sessions?: Prisma.SessionListRelationFilter
  recepcionTraslado?: Prisma.RecepcionTrasladoListRelationFilter
  role?: Prisma.XOR<Prisma.RoleScalarRelationFilter, Prisma.RoleWhereInput>
  tickets?: Prisma.TicketListRelationFilter
  assignedTickets?: Prisma.TicketListRelationFilter
  mensajes?: Prisma.MensajeListRelationFilter
  receivedMessages?: Prisma.MensajeListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  nombreCompleto?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  password?: Prisma.SortOrderInput | Prisma.SortOrder
  eliminado?: Prisma.SortOrder
  activo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  demoras?: Prisma.DemoraOrderByRelationAggregateInput
  envasados?: Prisma.EnvasadoOrderByRelationAggregateInput
  molinos?: Prisma.MolinoOrderByRelationAggregateInput
  actividades?: Prisma.ActividadOrderByRelationAggregateInput
  equipos?: Prisma.EquipoOrderByRelationAggregateInput
  sessions?: Prisma.SessionOrderByRelationAggregateInput
  recepcionTraslado?: Prisma.RecepcionTrasladoOrderByRelationAggregateInput
  role?: Prisma.RoleOrderByWithRelationInput
  tickets?: Prisma.TicketOrderByRelationAggregateInput
  assignedTickets?: Prisma.TicketOrderByRelationAggregateInput
  mensajes?: Prisma.MensajeOrderByRelationAggregateInput
  receivedMessages?: Prisma.MensajeOrderByRelationAggregateInput
  _relevance?: Prisma.UserOrderByRelevanceInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  username?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  nombreCompleto?: Prisma.StringFilter<"User"> | string
  codigo?: Prisma.StringFilter<"User"> | string
  email?: Prisma.StringNullableFilter<"User"> | string | null
  password?: Prisma.StringNullableFilter<"User"> | string | null
  eliminado?: Prisma.BoolFilter<"User"> | boolean
  activo?: Prisma.BoolFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  roleId?: Prisma.IntFilter<"User"> | number
  demoras?: Prisma.DemoraListRelationFilter
  envasados?: Prisma.EnvasadoListRelationFilter
  molinos?: Prisma.MolinoListRelationFilter
  actividades?: Prisma.ActividadListRelationFilter
  equipos?: Prisma.EquipoListRelationFilter
  sessions?: Prisma.SessionListRelationFilter
  recepcionTraslado?: Prisma.RecepcionTrasladoListRelationFilter
  role?: Prisma.XOR<Prisma.RoleScalarRelationFilter, Prisma.RoleWhereInput>
  tickets?: Prisma.TicketListRelationFilter
  assignedTickets?: Prisma.TicketListRelationFilter
  mensajes?: Prisma.MensajeListRelationFilter
  receivedMessages?: Prisma.MensajeListRelationFilter
}, "id" | "username">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  nombreCompleto?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  email?: Prisma.SortOrderInput | Prisma.SortOrder
  password?: Prisma.SortOrderInput | Prisma.SortOrder
  eliminado?: Prisma.SortOrder
  activo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _avg?: Prisma.UserAvgOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
  _sum?: Prisma.UserSumOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"User"> | number
  username?: Prisma.StringWithAggregatesFilter<"User"> | string
  nombreCompleto?: Prisma.StringWithAggregatesFilter<"User"> | string
  codigo?: Prisma.StringWithAggregatesFilter<"User"> | string
  email?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  password?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  eliminado?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  activo?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  roleId?: Prisma.IntWithAggregatesFilter<"User"> | number
}

export type UserCreateInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserUpdateInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateManyInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
}

export type UserUpdateManyMutationInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
}

export type UserOrderByRelevanceInput = {
  fields: Prisma.UserOrderByRelevanceFieldEnum | Prisma.UserOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  nombreCompleto?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  eliminado?: Prisma.SortOrder
  activo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
}

export type UserAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  nombreCompleto?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  eliminado?: Prisma.SortOrder
  activo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  nombreCompleto?: Prisma.SortOrder
  codigo?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  eliminado?: Prisma.SortOrder
  activo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
}

export type UserSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  roleId?: Prisma.SortOrder
}

export type UserListRelationFilter = {
  every?: Prisma.UserWhereInput
  some?: Prisma.UserWhereInput
  none?: Prisma.UserWhereInput
}

export type UserOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type UserCreateNestedManyWithoutRoleInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRoleInput, Prisma.UserUncheckedCreateWithoutRoleInput> | Prisma.UserCreateWithoutRoleInput[] | Prisma.UserUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRoleInput | Prisma.UserCreateOrConnectWithoutRoleInput[]
  createMany?: Prisma.UserCreateManyRoleInputEnvelope
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
}

export type UserUncheckedCreateNestedManyWithoutRoleInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRoleInput, Prisma.UserUncheckedCreateWithoutRoleInput> | Prisma.UserCreateWithoutRoleInput[] | Prisma.UserUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRoleInput | Prisma.UserCreateOrConnectWithoutRoleInput[]
  createMany?: Prisma.UserCreateManyRoleInputEnvelope
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
}

export type UserUpdateManyWithoutRoleNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRoleInput, Prisma.UserUncheckedCreateWithoutRoleInput> | Prisma.UserCreateWithoutRoleInput[] | Prisma.UserUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRoleInput | Prisma.UserCreateOrConnectWithoutRoleInput[]
  upsert?: Prisma.UserUpsertWithWhereUniqueWithoutRoleInput | Prisma.UserUpsertWithWhereUniqueWithoutRoleInput[]
  createMany?: Prisma.UserCreateManyRoleInputEnvelope
  set?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  disconnect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  delete?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  update?: Prisma.UserUpdateWithWhereUniqueWithoutRoleInput | Prisma.UserUpdateWithWhereUniqueWithoutRoleInput[]
  updateMany?: Prisma.UserUpdateManyWithWhereWithoutRoleInput | Prisma.UserUpdateManyWithWhereWithoutRoleInput[]
  deleteMany?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[]
}

export type UserUncheckedUpdateManyWithoutRoleNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRoleInput, Prisma.UserUncheckedCreateWithoutRoleInput> | Prisma.UserCreateWithoutRoleInput[] | Prisma.UserUncheckedCreateWithoutRoleInput[]
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRoleInput | Prisma.UserCreateOrConnectWithoutRoleInput[]
  upsert?: Prisma.UserUpsertWithWhereUniqueWithoutRoleInput | Prisma.UserUpsertWithWhereUniqueWithoutRoleInput[]
  createMany?: Prisma.UserCreateManyRoleInputEnvelope
  set?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  disconnect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  delete?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  connect?: Prisma.UserWhereUniqueInput | Prisma.UserWhereUniqueInput[]
  update?: Prisma.UserUpdateWithWhereUniqueWithoutRoleInput | Prisma.UserUpdateWithWhereUniqueWithoutRoleInput[]
  updateMany?: Prisma.UserUpdateManyWithWhereWithoutRoleInput | Prisma.UserUpdateManyWithWhereWithoutRoleInput[]
  deleteMany?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[]
}

export type UserCreateNestedOneWithoutSessionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput
  upsert?: Prisma.UserUpsertWithoutSessionsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutSessionsInput, Prisma.UserUpdateWithoutSessionsInput>, Prisma.UserUncheckedUpdateWithoutSessionsInput>
}

export type UserCreateNestedOneWithoutDemorasInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutDemorasInput, Prisma.UserUncheckedCreateWithoutDemorasInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDemorasInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutDemorasNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutDemorasInput, Prisma.UserUncheckedCreateWithoutDemorasInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutDemorasInput
  upsert?: Prisma.UserUpsertWithoutDemorasInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutDemorasInput, Prisma.UserUpdateWithoutDemorasInput>, Prisma.UserUncheckedUpdateWithoutDemorasInput>
}

export type UserCreateNestedOneWithoutEnvasadosInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutEnvasadosInput, Prisma.UserUncheckedCreateWithoutEnvasadosInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutEnvasadosInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutEnvasadosNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutEnvasadosInput, Prisma.UserUncheckedCreateWithoutEnvasadosInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutEnvasadosInput
  upsert?: Prisma.UserUpsertWithoutEnvasadosInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutEnvasadosInput, Prisma.UserUpdateWithoutEnvasadosInput>, Prisma.UserUncheckedUpdateWithoutEnvasadosInput>
}

export type UserCreateNestedOneWithoutMolinosInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMolinosInput, Prisma.UserUncheckedCreateWithoutMolinosInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMolinosInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutMolinosNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMolinosInput, Prisma.UserUncheckedCreateWithoutMolinosInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMolinosInput
  upsert?: Prisma.UserUpsertWithoutMolinosInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutMolinosInput, Prisma.UserUpdateWithoutMolinosInput>, Prisma.UserUncheckedUpdateWithoutMolinosInput>
}

export type UserCreateNestedOneWithoutActividadesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutActividadesInput, Prisma.UserUncheckedCreateWithoutActividadesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutActividadesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutActividadesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutActividadesInput, Prisma.UserUncheckedCreateWithoutActividadesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutActividadesInput
  upsert?: Prisma.UserUpsertWithoutActividadesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutActividadesInput, Prisma.UserUpdateWithoutActividadesInput>, Prisma.UserUncheckedUpdateWithoutActividadesInput>
}

export type UserCreateNestedOneWithoutEquiposInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutEquiposInput, Prisma.UserUncheckedCreateWithoutEquiposInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutEquiposInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneWithoutEquiposNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutEquiposInput, Prisma.UserUncheckedCreateWithoutEquiposInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutEquiposInput
  upsert?: Prisma.UserUpsertWithoutEquiposInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutEquiposInput, Prisma.UserUpdateWithoutEquiposInput>, Prisma.UserUncheckedUpdateWithoutEquiposInput>
}

export type UserCreateNestedOneWithoutTicketsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTicketsInput, Prisma.UserUncheckedCreateWithoutTicketsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTicketsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutAssignedTicketsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAssignedTicketsInput, Prisma.UserUncheckedCreateWithoutAssignedTicketsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAssignedTicketsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutTicketsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutTicketsInput, Prisma.UserUncheckedCreateWithoutTicketsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutTicketsInput
  upsert?: Prisma.UserUpsertWithoutTicketsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutTicketsInput, Prisma.UserUpdateWithoutTicketsInput>, Prisma.UserUncheckedUpdateWithoutTicketsInput>
}

export type UserUpdateOneWithoutAssignedTicketsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAssignedTicketsInput, Prisma.UserUncheckedCreateWithoutAssignedTicketsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAssignedTicketsInput
  upsert?: Prisma.UserUpsertWithoutAssignedTicketsInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutAssignedTicketsInput, Prisma.UserUpdateWithoutAssignedTicketsInput>, Prisma.UserUncheckedUpdateWithoutAssignedTicketsInput>
}

export type UserCreateNestedOneWithoutMensajesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMensajesInput, Prisma.UserUncheckedCreateWithoutMensajesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMensajesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutReceivedMessagesInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReceivedMessagesInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutMensajesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutMensajesInput, Prisma.UserUncheckedCreateWithoutMensajesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMensajesInput
  upsert?: Prisma.UserUpsertWithoutMensajesInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutMensajesInput, Prisma.UserUpdateWithoutMensajesInput>, Prisma.UserUncheckedUpdateWithoutMensajesInput>
}

export type UserUpdateOneWithoutReceivedMessagesNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReceivedMessagesInput
  upsert?: Prisma.UserUpsertWithoutReceivedMessagesInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReceivedMessagesInput, Prisma.UserUpdateWithoutReceivedMessagesInput>, Prisma.UserUncheckedUpdateWithoutReceivedMessagesInput>
}

export type UserCreateNestedOneWithoutRecepcionTrasladoInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRecepcionTrasladoInput, Prisma.UserUncheckedCreateWithoutRecepcionTrasladoInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRecepcionTrasladoInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutRecepcionTrasladoNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRecepcionTrasladoInput, Prisma.UserUncheckedCreateWithoutRecepcionTrasladoInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRecepcionTrasladoInput
  upsert?: Prisma.UserUpsertWithoutRecepcionTrasladoInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutRecepcionTrasladoInput, Prisma.UserUpdateWithoutRecepcionTrasladoInput>, Prisma.UserUncheckedUpdateWithoutRecepcionTrasladoInput>
}

export type UserCreateWithoutRoleInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutRoleInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutRoleInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRoleInput, Prisma.UserUncheckedCreateWithoutRoleInput>
}

export type UserCreateManyRoleInputEnvelope = {
  data: Prisma.UserCreateManyRoleInput | Prisma.UserCreateManyRoleInput[]
  skipDuplicates?: boolean
}

export type UserUpsertWithWhereUniqueWithoutRoleInput = {
  where: Prisma.UserWhereUniqueInput
  update: Prisma.XOR<Prisma.UserUpdateWithoutRoleInput, Prisma.UserUncheckedUpdateWithoutRoleInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRoleInput, Prisma.UserUncheckedCreateWithoutRoleInput>
}

export type UserUpdateWithWhereUniqueWithoutRoleInput = {
  where: Prisma.UserWhereUniqueInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRoleInput, Prisma.UserUncheckedUpdateWithoutRoleInput>
}

export type UserUpdateManyWithWhereWithoutRoleInput = {
  where: Prisma.UserScalarWhereInput
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyWithoutRoleInput>
}

export type UserScalarWhereInput = {
  AND?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[]
  OR?: Prisma.UserScalarWhereInput[]
  NOT?: Prisma.UserScalarWhereInput | Prisma.UserScalarWhereInput[]
  id?: Prisma.IntFilter<"User"> | number
  username?: Prisma.StringFilter<"User"> | string
  nombreCompleto?: Prisma.StringFilter<"User"> | string
  codigo?: Prisma.StringFilter<"User"> | string
  email?: Prisma.StringNullableFilter<"User"> | string | null
  password?: Prisma.StringNullableFilter<"User"> | string | null
  eliminado?: Prisma.BoolFilter<"User"> | boolean
  activo?: Prisma.BoolFilter<"User"> | boolean
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  roleId?: Prisma.IntFilter<"User"> | number
}

export type UserCreateWithoutSessionsInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutSessionsInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutSessionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
}

export type UserUpsertWithoutSessionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutSessionsInput, Prisma.UserUncheckedUpdateWithoutSessionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutSessionsInput, Prisma.UserUncheckedCreateWithoutSessionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutSessionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutSessionsInput, Prisma.UserUncheckedUpdateWithoutSessionsInput>
}

export type UserUpdateWithoutSessionsInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutSessionsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutDemorasInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutDemorasInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutDemorasInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutDemorasInput, Prisma.UserUncheckedCreateWithoutDemorasInput>
}

export type UserUpsertWithoutDemorasInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutDemorasInput, Prisma.UserUncheckedUpdateWithoutDemorasInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutDemorasInput, Prisma.UserUncheckedCreateWithoutDemorasInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutDemorasInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutDemorasInput, Prisma.UserUncheckedUpdateWithoutDemorasInput>
}

export type UserUpdateWithoutDemorasInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutDemorasInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutEnvasadosInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutEnvasadosInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutEnvasadosInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutEnvasadosInput, Prisma.UserUncheckedCreateWithoutEnvasadosInput>
}

export type UserUpsertWithoutEnvasadosInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutEnvasadosInput, Prisma.UserUncheckedUpdateWithoutEnvasadosInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutEnvasadosInput, Prisma.UserUncheckedCreateWithoutEnvasadosInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutEnvasadosInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutEnvasadosInput, Prisma.UserUncheckedUpdateWithoutEnvasadosInput>
}

export type UserUpdateWithoutEnvasadosInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutEnvasadosInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutMolinosInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutMolinosInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutMolinosInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutMolinosInput, Prisma.UserUncheckedCreateWithoutMolinosInput>
}

export type UserUpsertWithoutMolinosInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutMolinosInput, Prisma.UserUncheckedUpdateWithoutMolinosInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutMolinosInput, Prisma.UserUncheckedCreateWithoutMolinosInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutMolinosInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutMolinosInput, Prisma.UserUncheckedUpdateWithoutMolinosInput>
}

export type UserUpdateWithoutMolinosInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutMolinosInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutActividadesInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutActividadesInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutActividadesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutActividadesInput, Prisma.UserUncheckedCreateWithoutActividadesInput>
}

export type UserUpsertWithoutActividadesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutActividadesInput, Prisma.UserUncheckedUpdateWithoutActividadesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutActividadesInput, Prisma.UserUncheckedCreateWithoutActividadesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutActividadesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutActividadesInput, Prisma.UserUncheckedUpdateWithoutActividadesInput>
}

export type UserUpdateWithoutActividadesInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutActividadesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutEquiposInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutEquiposInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutEquiposInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutEquiposInput, Prisma.UserUncheckedCreateWithoutEquiposInput>
}

export type UserUpsertWithoutEquiposInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutEquiposInput, Prisma.UserUncheckedUpdateWithoutEquiposInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutEquiposInput, Prisma.UserUncheckedCreateWithoutEquiposInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutEquiposInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutEquiposInput, Prisma.UserUncheckedUpdateWithoutEquiposInput>
}

export type UserUpdateWithoutEquiposInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutEquiposInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutTicketsInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutTicketsInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutTicketsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutTicketsInput, Prisma.UserUncheckedCreateWithoutTicketsInput>
}

export type UserCreateWithoutAssignedTicketsInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutAssignedTicketsInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutAssignedTicketsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutAssignedTicketsInput, Prisma.UserUncheckedCreateWithoutAssignedTicketsInput>
}

export type UserUpsertWithoutTicketsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutTicketsInput, Prisma.UserUncheckedUpdateWithoutTicketsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutTicketsInput, Prisma.UserUncheckedCreateWithoutTicketsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutTicketsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutTicketsInput, Prisma.UserUncheckedUpdateWithoutTicketsInput>
}

export type UserUpdateWithoutTicketsInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutTicketsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserUpsertWithoutAssignedTicketsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutAssignedTicketsInput, Prisma.UserUncheckedUpdateWithoutAssignedTicketsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutAssignedTicketsInput, Prisma.UserUncheckedCreateWithoutAssignedTicketsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutAssignedTicketsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutAssignedTicketsInput, Prisma.UserUncheckedUpdateWithoutAssignedTicketsInput>
}

export type UserUpdateWithoutAssignedTicketsInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutAssignedTicketsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateWithoutMensajesInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutMensajesInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutMensajesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutMensajesInput, Prisma.UserUncheckedCreateWithoutMensajesInput>
}

export type UserCreateWithoutReceivedMessagesInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutReceivedMessagesInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutReceivedMessagesInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
}

export type UserUpsertWithoutMensajesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutMensajesInput, Prisma.UserUncheckedUpdateWithoutMensajesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutMensajesInput, Prisma.UserUncheckedCreateWithoutMensajesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutMensajesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutMensajesInput, Prisma.UserUncheckedUpdateWithoutMensajesInput>
}

export type UserUpdateWithoutMensajesInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutMensajesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserUpsertWithoutReceivedMessagesInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReceivedMessagesInput, Prisma.UserUncheckedUpdateWithoutReceivedMessagesInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReceivedMessagesInput, Prisma.UserUncheckedCreateWithoutReceivedMessagesInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReceivedMessagesInput, Prisma.UserUncheckedUpdateWithoutReceivedMessagesInput>
}

export type UserUpdateWithoutReceivedMessagesInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateWithoutRecepcionTrasladoInput = {
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  demoras?: Prisma.DemoraCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput
  role: Prisma.RoleCreateNestedOneWithoutUsersInput
  tickets?: Prisma.TicketCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeCreateNestedManyWithoutReceiverInput
}

export type UserUncheckedCreateWithoutRecepcionTrasladoInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
  roleId: number
  demoras?: Prisma.DemoraUncheckedCreateNestedManyWithoutUserInput
  envasados?: Prisma.EnvasadoUncheckedCreateNestedManyWithoutUserInput
  molinos?: Prisma.MolinoUncheckedCreateNestedManyWithoutUserInput
  actividades?: Prisma.ActividadUncheckedCreateNestedManyWithoutUserInput
  equipos?: Prisma.EquipoUncheckedCreateNestedManyWithoutUserInput
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput
  tickets?: Prisma.TicketUncheckedCreateNestedManyWithoutUserInput
  assignedTickets?: Prisma.TicketUncheckedCreateNestedManyWithoutAdminInput
  mensajes?: Prisma.MensajeUncheckedCreateNestedManyWithoutSenderInput
  receivedMessages?: Prisma.MensajeUncheckedCreateNestedManyWithoutReceiverInput
}

export type UserCreateOrConnectWithoutRecepcionTrasladoInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRecepcionTrasladoInput, Prisma.UserUncheckedCreateWithoutRecepcionTrasladoInput>
}

export type UserUpsertWithoutRecepcionTrasladoInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutRecepcionTrasladoInput, Prisma.UserUncheckedUpdateWithoutRecepcionTrasladoInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRecepcionTrasladoInput, Prisma.UserUncheckedCreateWithoutRecepcionTrasladoInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutRecepcionTrasladoInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRecepcionTrasladoInput, Prisma.UserUncheckedUpdateWithoutRecepcionTrasladoInput>
}

export type UserUpdateWithoutRecepcionTrasladoInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  role?: Prisma.RoleUpdateOneRequiredWithoutUsersNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutRecepcionTrasladoInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  roleId?: Prisma.IntFieldUpdateOperationsInput | number
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserCreateManyRoleInput = {
  id?: number
  username: string
  nombreCompleto: string
  codigo: string
  email?: string | null
  password?: string | null
  eliminado?: boolean
  activo?: boolean
  createdAt?: Date | string
}

export type UserUpdateWithoutRoleInput = {
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateWithoutRoleInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demoras?: Prisma.DemoraUncheckedUpdateManyWithoutUserNestedInput
  envasados?: Prisma.EnvasadoUncheckedUpdateManyWithoutUserNestedInput
  molinos?: Prisma.MolinoUncheckedUpdateManyWithoutUserNestedInput
  actividades?: Prisma.ActividadUncheckedUpdateManyWithoutUserNestedInput
  equipos?: Prisma.EquipoUncheckedUpdateManyWithoutUserNestedInput
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput
  recepcionTraslado?: Prisma.RecepcionTrasladoUncheckedUpdateManyWithoutUserNestedInput
  tickets?: Prisma.TicketUncheckedUpdateManyWithoutUserNestedInput
  assignedTickets?: Prisma.TicketUncheckedUpdateManyWithoutAdminNestedInput
  mensajes?: Prisma.MensajeUncheckedUpdateManyWithoutSenderNestedInput
  receivedMessages?: Prisma.MensajeUncheckedUpdateManyWithoutReceiverNestedInput
}

export type UserUncheckedUpdateManyWithoutRoleInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  username?: Prisma.StringFieldUpdateOperationsInput | string
  nombreCompleto?: Prisma.StringFieldUpdateOperationsInput | string
  codigo?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  eliminado?: Prisma.BoolFieldUpdateOperationsInput | boolean
  activo?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  demoras: number
  envasados: number
  molinos: number
  actividades: number
  equipos: number
  sessions: number
  recepcionTraslado: number
  tickets: number
  assignedTickets: number
  mensajes: number
  receivedMessages: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  demoras?: boolean | UserCountOutputTypeCountDemorasArgs
  envasados?: boolean | UserCountOutputTypeCountEnvasadosArgs
  molinos?: boolean | UserCountOutputTypeCountMolinosArgs
  actividades?: boolean | UserCountOutputTypeCountActividadesArgs
  equipos?: boolean | UserCountOutputTypeCountEquiposArgs
  sessions?: boolean | UserCountOutputTypeCountSessionsArgs
  recepcionTraslado?: boolean | UserCountOutputTypeCountRecepcionTrasladoArgs
  tickets?: boolean | UserCountOutputTypeCountTicketsArgs
  assignedTickets?: boolean | UserCountOutputTypeCountAssignedTicketsArgs
  mensajes?: boolean | UserCountOutputTypeCountMensajesArgs
  receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountDemorasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DemoraWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountEnvasadosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EnvasadoWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountMolinosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MolinoWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountActividadesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ActividadWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountEquiposArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EquipoWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SessionWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRecepcionTrasladoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RecepcionTrasladoWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountTicketsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TicketWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAssignedTicketsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TicketWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountMensajesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MensajeWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MensajeWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  username?: boolean
  nombreCompleto?: boolean
  codigo?: boolean
  email?: boolean
  password?: boolean
  eliminado?: boolean
  activo?: boolean
  createdAt?: boolean
  roleId?: boolean
  demoras?: boolean | Prisma.User$demorasArgs<ExtArgs>
  envasados?: boolean | Prisma.User$envasadosArgs<ExtArgs>
  molinos?: boolean | Prisma.User$molinosArgs<ExtArgs>
  actividades?: boolean | Prisma.User$actividadesArgs<ExtArgs>
  equipos?: boolean | Prisma.User$equiposArgs<ExtArgs>
  sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>
  recepcionTraslado?: boolean | Prisma.User$recepcionTrasladoArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  tickets?: boolean | Prisma.User$ticketsArgs<ExtArgs>
  assignedTickets?: boolean | Prisma.User$assignedTicketsArgs<ExtArgs>
  mensajes?: boolean | Prisma.User$mensajesArgs<ExtArgs>
  receivedMessages?: boolean | Prisma.User$receivedMessagesArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>



export type UserSelectScalar = {
  id?: boolean
  username?: boolean
  nombreCompleto?: boolean
  codigo?: boolean
  email?: boolean
  password?: boolean
  eliminado?: boolean
  activo?: boolean
  createdAt?: boolean
  roleId?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "username" | "nombreCompleto" | "codigo" | "email" | "password" | "eliminado" | "activo" | "createdAt" | "roleId", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  demoras?: boolean | Prisma.User$demorasArgs<ExtArgs>
  envasados?: boolean | Prisma.User$envasadosArgs<ExtArgs>
  molinos?: boolean | Prisma.User$molinosArgs<ExtArgs>
  actividades?: boolean | Prisma.User$actividadesArgs<ExtArgs>
  equipos?: boolean | Prisma.User$equiposArgs<ExtArgs>
  sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>
  recepcionTraslado?: boolean | Prisma.User$recepcionTrasladoArgs<ExtArgs>
  role?: boolean | Prisma.RoleDefaultArgs<ExtArgs>
  tickets?: boolean | Prisma.User$ticketsArgs<ExtArgs>
  assignedTickets?: boolean | Prisma.User$assignedTicketsArgs<ExtArgs>
  mensajes?: boolean | Prisma.User$mensajesArgs<ExtArgs>
  receivedMessages?: boolean | Prisma.User$receivedMessagesArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    demoras: Prisma.$DemoraPayload<ExtArgs>[]
    envasados: Prisma.$EnvasadoPayload<ExtArgs>[]
    molinos: Prisma.$MolinoPayload<ExtArgs>[]
    actividades: Prisma.$ActividadPayload<ExtArgs>[]
    equipos: Prisma.$EquipoPayload<ExtArgs>[]
    sessions: Prisma.$SessionPayload<ExtArgs>[]
    recepcionTraslado: Prisma.$RecepcionTrasladoPayload<ExtArgs>[]
    role: Prisma.$RolePayload<ExtArgs>
    tickets: Prisma.$TicketPayload<ExtArgs>[]
    assignedTickets: Prisma.$TicketPayload<ExtArgs>[]
    mensajes: Prisma.$MensajePayload<ExtArgs>[]
    receivedMessages: Prisma.$MensajePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    username: string
    nombreCompleto: string
    codigo: string
    email: string | null
    password: string | null
    eliminado: boolean
    activo: boolean
    createdAt: Date
    roleId: number
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  demoras<T extends Prisma.User$demorasArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$demorasArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DemoraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  envasados<T extends Prisma.User$envasadosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$envasadosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EnvasadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  molinos<T extends Prisma.User$molinosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$molinosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MolinoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  actividades<T extends Prisma.User$actividadesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$actividadesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ActividadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  equipos<T extends Prisma.User$equiposArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$equiposArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  sessions<T extends Prisma.User$sessionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  recepcionTraslado<T extends Prisma.User$recepcionTrasladoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$recepcionTrasladoArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RecepcionTrasladoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  role<T extends Prisma.RoleDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.RoleDefaultArgs<ExtArgs>>): Prisma.Prisma__RoleClient<runtime.Types.Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  tickets<T extends Prisma.User$ticketsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  assignedTickets<T extends Prisma.User$assignedTicketsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$assignedTicketsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  mensajes<T extends Prisma.User$mensajesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$mensajesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  receivedMessages<T extends Prisma.User$receivedMessagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'Int'>
  readonly username: Prisma.FieldRef<"User", 'String'>
  readonly nombreCompleto: Prisma.FieldRef<"User", 'String'>
  readonly codigo: Prisma.FieldRef<"User", 'String'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly password: Prisma.FieldRef<"User", 'String'>
  readonly eliminado: Prisma.FieldRef<"User", 'Boolean'>
  readonly activo: Prisma.FieldRef<"User", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly roleId: Prisma.FieldRef<"User", 'Int'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.demoras
 */
export type User$demorasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Demora
   */
  select?: Prisma.DemoraSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Demora
   */
  omit?: Prisma.DemoraOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DemoraInclude<ExtArgs> | null
  where?: Prisma.DemoraWhereInput
  orderBy?: Prisma.DemoraOrderByWithRelationInput | Prisma.DemoraOrderByWithRelationInput[]
  cursor?: Prisma.DemoraWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.DemoraScalarFieldEnum | Prisma.DemoraScalarFieldEnum[]
}

/**
 * User.envasados
 */
export type User$envasadosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Envasado
   */
  select?: Prisma.EnvasadoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Envasado
   */
  omit?: Prisma.EnvasadoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EnvasadoInclude<ExtArgs> | null
  where?: Prisma.EnvasadoWhereInput
  orderBy?: Prisma.EnvasadoOrderByWithRelationInput | Prisma.EnvasadoOrderByWithRelationInput[]
  cursor?: Prisma.EnvasadoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EnvasadoScalarFieldEnum | Prisma.EnvasadoScalarFieldEnum[]
}

/**
 * User.molinos
 */
export type User$molinosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Molino
   */
  select?: Prisma.MolinoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Molino
   */
  omit?: Prisma.MolinoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MolinoInclude<ExtArgs> | null
  where?: Prisma.MolinoWhereInput
  orderBy?: Prisma.MolinoOrderByWithRelationInput | Prisma.MolinoOrderByWithRelationInput[]
  cursor?: Prisma.MolinoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MolinoScalarFieldEnum | Prisma.MolinoScalarFieldEnum[]
}

/**
 * User.actividades
 */
export type User$actividadesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Actividad
   */
  select?: Prisma.ActividadSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Actividad
   */
  omit?: Prisma.ActividadOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ActividadInclude<ExtArgs> | null
  where?: Prisma.ActividadWhereInput
  orderBy?: Prisma.ActividadOrderByWithRelationInput | Prisma.ActividadOrderByWithRelationInput[]
  cursor?: Prisma.ActividadWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ActividadScalarFieldEnum | Prisma.ActividadScalarFieldEnum[]
}

/**
 * User.equipos
 */
export type User$equiposArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  where?: Prisma.EquipoWhereInput
  orderBy?: Prisma.EquipoOrderByWithRelationInput | Prisma.EquipoOrderByWithRelationInput[]
  cursor?: Prisma.EquipoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EquipoScalarFieldEnum | Prisma.EquipoScalarFieldEnum[]
}

/**
 * User.sessions
 */
export type User$sessionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null
  where?: Prisma.SessionWhereInput
  orderBy?: Prisma.SessionOrderByWithRelationInput | Prisma.SessionOrderByWithRelationInput[]
  cursor?: Prisma.SessionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[]
}

/**
 * User.recepcionTraslado
 */
export type User$recepcionTrasladoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RecepcionTraslado
   */
  select?: Prisma.RecepcionTrasladoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RecepcionTraslado
   */
  omit?: Prisma.RecepcionTrasladoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RecepcionTrasladoInclude<ExtArgs> | null
  where?: Prisma.RecepcionTrasladoWhereInput
  orderBy?: Prisma.RecepcionTrasladoOrderByWithRelationInput | Prisma.RecepcionTrasladoOrderByWithRelationInput[]
  cursor?: Prisma.RecepcionTrasladoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RecepcionTrasladoScalarFieldEnum | Prisma.RecepcionTrasladoScalarFieldEnum[]
}

/**
 * User.tickets
 */
export type User$ticketsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ticket
   */
  select?: Prisma.TicketSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ticket
   */
  omit?: Prisma.TicketOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TicketInclude<ExtArgs> | null
  where?: Prisma.TicketWhereInput
  orderBy?: Prisma.TicketOrderByWithRelationInput | Prisma.TicketOrderByWithRelationInput[]
  cursor?: Prisma.TicketWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TicketScalarFieldEnum | Prisma.TicketScalarFieldEnum[]
}

/**
 * User.assignedTickets
 */
export type User$assignedTicketsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ticket
   */
  select?: Prisma.TicketSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ticket
   */
  omit?: Prisma.TicketOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TicketInclude<ExtArgs> | null
  where?: Prisma.TicketWhereInput
  orderBy?: Prisma.TicketOrderByWithRelationInput | Prisma.TicketOrderByWithRelationInput[]
  cursor?: Prisma.TicketWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TicketScalarFieldEnum | Prisma.TicketScalarFieldEnum[]
}

/**
 * User.mensajes
 */
export type User$mensajesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  where?: Prisma.MensajeWhereInput
  orderBy?: Prisma.MensajeOrderByWithRelationInput | Prisma.MensajeOrderByWithRelationInput[]
  cursor?: Prisma.MensajeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MensajeScalarFieldEnum | Prisma.MensajeScalarFieldEnum[]
}

/**
 * User.receivedMessages
 */
export type User$receivedMessagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  where?: Prisma.MensajeWhereInput
  orderBy?: Prisma.MensajeOrderByWithRelationInput | Prisma.MensajeOrderByWithRelationInput[]
  cursor?: Prisma.MensajeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MensajeScalarFieldEnum | Prisma.MensajeScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
