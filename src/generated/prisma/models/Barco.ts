
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Barco` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Barco
 * 
 */
export type BarcoModel = runtime.Types.Result.DefaultSelection<Prisma.$BarcoPayload>

export type AggregateBarco = {
  _count: BarcoCountAggregateOutputType | null
  _avg: BarcoAvgAggregateOutputType | null
  _sum: BarcoSumAggregateOutputType | null
  _min: BarcoMinAggregateOutputType | null
  _max: BarcoMaxAggregateOutputType | null
}

export type BarcoAvgAggregateOutputType = {
  id: number | null
}

export type BarcoSumAggregateOutputType = {
  id: number | null
}

export type BarcoMinAggregateOutputType = {
  id: number | null
  muelle: string | null
  vaporBarco: string | null
  fechaArribo: string | null
  horaArribo: string | null
  fechaAtraque: string | null
  horaAtraque: string | null
  fechaRecibido: string | null
  horaRecibido: string | null
  fechaInicioOperaciones: string | null
  horaInicioOperaciones: string | null
  fechaFinOperaciones: string | null
  horaFinOperaciones: string | null
  tipoCarga: string | null
  sistemaUtilizado: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type BarcoMaxAggregateOutputType = {
  id: number | null
  muelle: string | null
  vaporBarco: string | null
  fechaArribo: string | null
  horaArribo: string | null
  fechaAtraque: string | null
  horaAtraque: string | null
  fechaRecibido: string | null
  horaRecibido: string | null
  fechaInicioOperaciones: string | null
  horaInicioOperaciones: string | null
  fechaFinOperaciones: string | null
  horaFinOperaciones: string | null
  tipoCarga: string | null
  sistemaUtilizado: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type BarcoCountAggregateOutputType = {
  id: number
  muelle: number
  vaporBarco: number
  fechaArribo: number
  horaArribo: number
  fechaAtraque: number
  horaAtraque: number
  fechaRecibido: number
  horaRecibido: number
  fechaInicioOperaciones: number
  horaInicioOperaciones: number
  fechaFinOperaciones: number
  horaFinOperaciones: number
  tipoCarga: number
  sistemaUtilizado: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type BarcoAvgAggregateInputType = {
  id?: true
}

export type BarcoSumAggregateInputType = {
  id?: true
}

export type BarcoMinAggregateInputType = {
  id?: true
  muelle?: true
  vaporBarco?: true
  fechaArribo?: true
  horaArribo?: true
  fechaAtraque?: true
  horaAtraque?: true
  fechaRecibido?: true
  horaRecibido?: true
  fechaInicioOperaciones?: true
  horaInicioOperaciones?: true
  fechaFinOperaciones?: true
  horaFinOperaciones?: true
  tipoCarga?: true
  sistemaUtilizado?: true
  createdAt?: true
  updatedAt?: true
}

export type BarcoMaxAggregateInputType = {
  id?: true
  muelle?: true
  vaporBarco?: true
  fechaArribo?: true
  horaArribo?: true
  fechaAtraque?: true
  horaAtraque?: true
  fechaRecibido?: true
  horaRecibido?: true
  fechaInicioOperaciones?: true
  horaInicioOperaciones?: true
  fechaFinOperaciones?: true
  horaFinOperaciones?: true
  tipoCarga?: true
  sistemaUtilizado?: true
  createdAt?: true
  updatedAt?: true
}

export type BarcoCountAggregateInputType = {
  id?: true
  muelle?: true
  vaporBarco?: true
  fechaArribo?: true
  horaArribo?: true
  fechaAtraque?: true
  horaAtraque?: true
  fechaRecibido?: true
  horaRecibido?: true
  fechaInicioOperaciones?: true
  horaInicioOperaciones?: true
  fechaFinOperaciones?: true
  horaFinOperaciones?: true
  tipoCarga?: true
  sistemaUtilizado?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type BarcoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Barco to aggregate.
   */
  where?: Prisma.BarcoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Barcos to fetch.
   */
  orderBy?: Prisma.BarcoOrderByWithRelationInput | Prisma.BarcoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.BarcoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Barcos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Barcos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Barcos
  **/
  _count?: true | BarcoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: BarcoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: BarcoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: BarcoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: BarcoMaxAggregateInputType
}

export type GetBarcoAggregateType<T extends BarcoAggregateArgs> = {
      [P in keyof T & keyof AggregateBarco]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateBarco[P]>
    : Prisma.GetScalarType<T[P], AggregateBarco[P]>
}




export type BarcoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BarcoWhereInput
  orderBy?: Prisma.BarcoOrderByWithAggregationInput | Prisma.BarcoOrderByWithAggregationInput[]
  by: Prisma.BarcoScalarFieldEnum[] | Prisma.BarcoScalarFieldEnum
  having?: Prisma.BarcoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: BarcoCountAggregateInputType | true
  _avg?: BarcoAvgAggregateInputType
  _sum?: BarcoSumAggregateInputType
  _min?: BarcoMinAggregateInputType
  _max?: BarcoMaxAggregateInputType
}

export type BarcoGroupByOutputType = {
  id: number
  muelle: string | null
  vaporBarco: string | null
  fechaArribo: string | null
  horaArribo: string | null
  fechaAtraque: string | null
  horaAtraque: string | null
  fechaRecibido: string | null
  horaRecibido: string | null
  fechaInicioOperaciones: string | null
  horaInicioOperaciones: string | null
  fechaFinOperaciones: string | null
  horaFinOperaciones: string | null
  tipoCarga: string | null
  sistemaUtilizado: string | null
  createdAt: Date
  updatedAt: Date
  _count: BarcoCountAggregateOutputType | null
  _avg: BarcoAvgAggregateOutputType | null
  _sum: BarcoSumAggregateOutputType | null
  _min: BarcoMinAggregateOutputType | null
  _max: BarcoMaxAggregateOutputType | null
}

type GetBarcoGroupByPayload<T extends BarcoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<BarcoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof BarcoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], BarcoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], BarcoGroupByOutputType[P]>
      }
    >
  > 



export type BarcoWhereInput = {
  AND?: Prisma.BarcoWhereInput | Prisma.BarcoWhereInput[]
  OR?: Prisma.BarcoWhereInput[]
  NOT?: Prisma.BarcoWhereInput | Prisma.BarcoWhereInput[]
  id?: Prisma.IntFilter<"Barco"> | number
  muelle?: Prisma.StringNullableFilter<"Barco"> | string | null
  vaporBarco?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaArribo?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaArribo?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaAtraque?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaAtraque?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaRecibido?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaRecibido?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaInicioOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaInicioOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaFinOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaFinOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  tipoCarga?: Prisma.StringNullableFilter<"Barco"> | string | null
  sistemaUtilizado?: Prisma.StringNullableFilter<"Barco"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Barco"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Barco"> | Date | string
  bitacoras?: Prisma.BitacoraListRelationFilter
}

export type BarcoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  muelle?: Prisma.SortOrderInput | Prisma.SortOrder
  vaporBarco?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaArribo?: Prisma.SortOrderInput | Prisma.SortOrder
  horaArribo?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaAtraque?: Prisma.SortOrderInput | Prisma.SortOrder
  horaAtraque?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaRecibido?: Prisma.SortOrderInput | Prisma.SortOrder
  horaRecibido?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaInicioOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  horaInicioOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaFinOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  horaFinOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tipoCarga?: Prisma.SortOrderInput | Prisma.SortOrder
  sistemaUtilizado?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  bitacoras?: Prisma.BitacoraOrderByRelationAggregateInput
  _relevance?: Prisma.BarcoOrderByRelevanceInput
}

export type BarcoWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.BarcoWhereInput | Prisma.BarcoWhereInput[]
  OR?: Prisma.BarcoWhereInput[]
  NOT?: Prisma.BarcoWhereInput | Prisma.BarcoWhereInput[]
  muelle?: Prisma.StringNullableFilter<"Barco"> | string | null
  vaporBarco?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaArribo?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaArribo?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaAtraque?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaAtraque?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaRecibido?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaRecibido?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaInicioOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaInicioOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  fechaFinOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  horaFinOperaciones?: Prisma.StringNullableFilter<"Barco"> | string | null
  tipoCarga?: Prisma.StringNullableFilter<"Barco"> | string | null
  sistemaUtilizado?: Prisma.StringNullableFilter<"Barco"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Barco"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Barco"> | Date | string
  bitacoras?: Prisma.BitacoraListRelationFilter
}, "id">

export type BarcoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  muelle?: Prisma.SortOrderInput | Prisma.SortOrder
  vaporBarco?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaArribo?: Prisma.SortOrderInput | Prisma.SortOrder
  horaArribo?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaAtraque?: Prisma.SortOrderInput | Prisma.SortOrder
  horaAtraque?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaRecibido?: Prisma.SortOrderInput | Prisma.SortOrder
  horaRecibido?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaInicioOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  horaInicioOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  fechaFinOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  horaFinOperaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tipoCarga?: Prisma.SortOrderInput | Prisma.SortOrder
  sistemaUtilizado?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.BarcoCountOrderByAggregateInput
  _avg?: Prisma.BarcoAvgOrderByAggregateInput
  _max?: Prisma.BarcoMaxOrderByAggregateInput
  _min?: Prisma.BarcoMinOrderByAggregateInput
  _sum?: Prisma.BarcoSumOrderByAggregateInput
}

export type BarcoScalarWhereWithAggregatesInput = {
  AND?: Prisma.BarcoScalarWhereWithAggregatesInput | Prisma.BarcoScalarWhereWithAggregatesInput[]
  OR?: Prisma.BarcoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.BarcoScalarWhereWithAggregatesInput | Prisma.BarcoScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Barco"> | number
  muelle?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  vaporBarco?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  fechaArribo?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  horaArribo?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  fechaAtraque?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  horaAtraque?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  fechaRecibido?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  horaRecibido?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  fechaInicioOperaciones?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  horaInicioOperaciones?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  fechaFinOperaciones?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  horaFinOperaciones?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  tipoCarga?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  sistemaUtilizado?: Prisma.StringNullableWithAggregatesFilter<"Barco"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Barco"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Barco"> | Date | string
}

export type BarcoCreateInput = {
  muelle?: string | null
  vaporBarco?: string | null
  fechaArribo?: string | null
  horaArribo?: string | null
  fechaAtraque?: string | null
  horaAtraque?: string | null
  fechaRecibido?: string | null
  horaRecibido?: string | null
  fechaInicioOperaciones?: string | null
  horaInicioOperaciones?: string | null
  fechaFinOperaciones?: string | null
  horaFinOperaciones?: string | null
  tipoCarga?: string | null
  sistemaUtilizado?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  bitacoras?: Prisma.BitacoraCreateNestedManyWithoutBarcoInput
}

export type BarcoUncheckedCreateInput = {
  id?: number
  muelle?: string | null
  vaporBarco?: string | null
  fechaArribo?: string | null
  horaArribo?: string | null
  fechaAtraque?: string | null
  horaAtraque?: string | null
  fechaRecibido?: string | null
  horaRecibido?: string | null
  fechaInicioOperaciones?: string | null
  horaInicioOperaciones?: string | null
  fechaFinOperaciones?: string | null
  horaFinOperaciones?: string | null
  tipoCarga?: string | null
  sistemaUtilizado?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  bitacoras?: Prisma.BitacoraUncheckedCreateNestedManyWithoutBarcoInput
}

export type BarcoUpdateInput = {
  muelle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vaporBarco?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tipoCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sistemaUtilizado?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  bitacoras?: Prisma.BitacoraUpdateManyWithoutBarcoNestedInput
}

export type BarcoUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  muelle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vaporBarco?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tipoCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sistemaUtilizado?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  bitacoras?: Prisma.BitacoraUncheckedUpdateManyWithoutBarcoNestedInput
}

export type BarcoCreateManyInput = {
  id?: number
  muelle?: string | null
  vaporBarco?: string | null
  fechaArribo?: string | null
  horaArribo?: string | null
  fechaAtraque?: string | null
  horaAtraque?: string | null
  fechaRecibido?: string | null
  horaRecibido?: string | null
  fechaInicioOperaciones?: string | null
  horaInicioOperaciones?: string | null
  fechaFinOperaciones?: string | null
  horaFinOperaciones?: string | null
  tipoCarga?: string | null
  sistemaUtilizado?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type BarcoUpdateManyMutationInput = {
  muelle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vaporBarco?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tipoCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sistemaUtilizado?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BarcoUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  muelle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vaporBarco?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tipoCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sistemaUtilizado?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BarcoOrderByRelevanceInput = {
  fields: Prisma.BarcoOrderByRelevanceFieldEnum | Prisma.BarcoOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type BarcoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  muelle?: Prisma.SortOrder
  vaporBarco?: Prisma.SortOrder
  fechaArribo?: Prisma.SortOrder
  horaArribo?: Prisma.SortOrder
  fechaAtraque?: Prisma.SortOrder
  horaAtraque?: Prisma.SortOrder
  fechaRecibido?: Prisma.SortOrder
  horaRecibido?: Prisma.SortOrder
  fechaInicioOperaciones?: Prisma.SortOrder
  horaInicioOperaciones?: Prisma.SortOrder
  fechaFinOperaciones?: Prisma.SortOrder
  horaFinOperaciones?: Prisma.SortOrder
  tipoCarga?: Prisma.SortOrder
  sistemaUtilizado?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BarcoAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type BarcoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  muelle?: Prisma.SortOrder
  vaporBarco?: Prisma.SortOrder
  fechaArribo?: Prisma.SortOrder
  horaArribo?: Prisma.SortOrder
  fechaAtraque?: Prisma.SortOrder
  horaAtraque?: Prisma.SortOrder
  fechaRecibido?: Prisma.SortOrder
  horaRecibido?: Prisma.SortOrder
  fechaInicioOperaciones?: Prisma.SortOrder
  horaInicioOperaciones?: Prisma.SortOrder
  fechaFinOperaciones?: Prisma.SortOrder
  horaFinOperaciones?: Prisma.SortOrder
  tipoCarga?: Prisma.SortOrder
  sistemaUtilizado?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BarcoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  muelle?: Prisma.SortOrder
  vaporBarco?: Prisma.SortOrder
  fechaArribo?: Prisma.SortOrder
  horaArribo?: Prisma.SortOrder
  fechaAtraque?: Prisma.SortOrder
  horaAtraque?: Prisma.SortOrder
  fechaRecibido?: Prisma.SortOrder
  horaRecibido?: Prisma.SortOrder
  fechaInicioOperaciones?: Prisma.SortOrder
  horaInicioOperaciones?: Prisma.SortOrder
  fechaFinOperaciones?: Prisma.SortOrder
  horaFinOperaciones?: Prisma.SortOrder
  tipoCarga?: Prisma.SortOrder
  sistemaUtilizado?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type BarcoSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type BarcoNullableScalarRelationFilter = {
  is?: Prisma.BarcoWhereInput | null
  isNot?: Prisma.BarcoWhereInput | null
}

export type BarcoCreateNestedOneWithoutBitacorasInput = {
  create?: Prisma.XOR<Prisma.BarcoCreateWithoutBitacorasInput, Prisma.BarcoUncheckedCreateWithoutBitacorasInput>
  connectOrCreate?: Prisma.BarcoCreateOrConnectWithoutBitacorasInput
  connect?: Prisma.BarcoWhereUniqueInput
}

export type BarcoUpdateOneWithoutBitacorasNestedInput = {
  create?: Prisma.XOR<Prisma.BarcoCreateWithoutBitacorasInput, Prisma.BarcoUncheckedCreateWithoutBitacorasInput>
  connectOrCreate?: Prisma.BarcoCreateOrConnectWithoutBitacorasInput
  upsert?: Prisma.BarcoUpsertWithoutBitacorasInput
  disconnect?: Prisma.BarcoWhereInput | boolean
  delete?: Prisma.BarcoWhereInput | boolean
  connect?: Prisma.BarcoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.BarcoUpdateToOneWithWhereWithoutBitacorasInput, Prisma.BarcoUpdateWithoutBitacorasInput>, Prisma.BarcoUncheckedUpdateWithoutBitacorasInput>
}

export type BarcoCreateWithoutBitacorasInput = {
  muelle?: string | null
  vaporBarco?: string | null
  fechaArribo?: string | null
  horaArribo?: string | null
  fechaAtraque?: string | null
  horaAtraque?: string | null
  fechaRecibido?: string | null
  horaRecibido?: string | null
  fechaInicioOperaciones?: string | null
  horaInicioOperaciones?: string | null
  fechaFinOperaciones?: string | null
  horaFinOperaciones?: string | null
  tipoCarga?: string | null
  sistemaUtilizado?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type BarcoUncheckedCreateWithoutBitacorasInput = {
  id?: number
  muelle?: string | null
  vaporBarco?: string | null
  fechaArribo?: string | null
  horaArribo?: string | null
  fechaAtraque?: string | null
  horaAtraque?: string | null
  fechaRecibido?: string | null
  horaRecibido?: string | null
  fechaInicioOperaciones?: string | null
  horaInicioOperaciones?: string | null
  fechaFinOperaciones?: string | null
  horaFinOperaciones?: string | null
  tipoCarga?: string | null
  sistemaUtilizado?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type BarcoCreateOrConnectWithoutBitacorasInput = {
  where: Prisma.BarcoWhereUniqueInput
  create: Prisma.XOR<Prisma.BarcoCreateWithoutBitacorasInput, Prisma.BarcoUncheckedCreateWithoutBitacorasInput>
}

export type BarcoUpsertWithoutBitacorasInput = {
  update: Prisma.XOR<Prisma.BarcoUpdateWithoutBitacorasInput, Prisma.BarcoUncheckedUpdateWithoutBitacorasInput>
  create: Prisma.XOR<Prisma.BarcoCreateWithoutBitacorasInput, Prisma.BarcoUncheckedCreateWithoutBitacorasInput>
  where?: Prisma.BarcoWhereInput
}

export type BarcoUpdateToOneWithWhereWithoutBitacorasInput = {
  where?: Prisma.BarcoWhereInput
  data: Prisma.XOR<Prisma.BarcoUpdateWithoutBitacorasInput, Prisma.BarcoUncheckedUpdateWithoutBitacorasInput>
}

export type BarcoUpdateWithoutBitacorasInput = {
  muelle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vaporBarco?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tipoCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sistemaUtilizado?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BarcoUncheckedUpdateWithoutBitacorasInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  muelle?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vaporBarco?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaArribo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaAtraque?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaRecibido?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaInicioOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  fechaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  horaFinOperaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tipoCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sistemaUtilizado?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type BarcoCountOutputType
 */

export type BarcoCountOutputType = {
  bitacoras: number
}

export type BarcoCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  bitacoras?: boolean | BarcoCountOutputTypeCountBitacorasArgs
}

/**
 * BarcoCountOutputType without action
 */
export type BarcoCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BarcoCountOutputType
   */
  select?: Prisma.BarcoCountOutputTypeSelect<ExtArgs> | null
}

/**
 * BarcoCountOutputType without action
 */
export type BarcoCountOutputTypeCountBitacorasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BitacoraWhereInput
}


export type BarcoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  muelle?: boolean
  vaporBarco?: boolean
  fechaArribo?: boolean
  horaArribo?: boolean
  fechaAtraque?: boolean
  horaAtraque?: boolean
  fechaRecibido?: boolean
  horaRecibido?: boolean
  fechaInicioOperaciones?: boolean
  horaInicioOperaciones?: boolean
  fechaFinOperaciones?: boolean
  horaFinOperaciones?: boolean
  tipoCarga?: boolean
  sistemaUtilizado?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  bitacoras?: boolean | Prisma.Barco$bitacorasArgs<ExtArgs>
  _count?: boolean | Prisma.BarcoCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["barco"]>



export type BarcoSelectScalar = {
  id?: boolean
  muelle?: boolean
  vaporBarco?: boolean
  fechaArribo?: boolean
  horaArribo?: boolean
  fechaAtraque?: boolean
  horaAtraque?: boolean
  fechaRecibido?: boolean
  horaRecibido?: boolean
  fechaInicioOperaciones?: boolean
  horaInicioOperaciones?: boolean
  fechaFinOperaciones?: boolean
  horaFinOperaciones?: boolean
  tipoCarga?: boolean
  sistemaUtilizado?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type BarcoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "muelle" | "vaporBarco" | "fechaArribo" | "horaArribo" | "fechaAtraque" | "horaAtraque" | "fechaRecibido" | "horaRecibido" | "fechaInicioOperaciones" | "horaInicioOperaciones" | "fechaFinOperaciones" | "horaFinOperaciones" | "tipoCarga" | "sistemaUtilizado" | "createdAt" | "updatedAt", ExtArgs["result"]["barco"]>
export type BarcoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  bitacoras?: boolean | Prisma.Barco$bitacorasArgs<ExtArgs>
  _count?: boolean | Prisma.BarcoCountOutputTypeDefaultArgs<ExtArgs>
}

export type $BarcoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Barco"
  objects: {
    bitacoras: Prisma.$BitacoraPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    muelle: string | null
    vaporBarco: string | null
    fechaArribo: string | null
    horaArribo: string | null
    fechaAtraque: string | null
    horaAtraque: string | null
    fechaRecibido: string | null
    horaRecibido: string | null
    fechaInicioOperaciones: string | null
    horaInicioOperaciones: string | null
    fechaFinOperaciones: string | null
    horaFinOperaciones: string | null
    tipoCarga: string | null
    sistemaUtilizado: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["barco"]>
  composites: {}
}

export type BarcoGetPayload<S extends boolean | null | undefined | BarcoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BarcoPayload, S>

export type BarcoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<BarcoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: BarcoCountAggregateInputType | true
  }

export interface BarcoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Barco'], meta: { name: 'Barco' } }
  /**
   * Find zero or one Barco that matches the filter.
   * @param {BarcoFindUniqueArgs} args - Arguments to find a Barco
   * @example
   * // Get one Barco
   * const barco = await prisma.barco.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends BarcoFindUniqueArgs>(args: Prisma.SelectSubset<T, BarcoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Barco that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {BarcoFindUniqueOrThrowArgs} args - Arguments to find a Barco
   * @example
   * // Get one Barco
   * const barco = await prisma.barco.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends BarcoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, BarcoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Barco that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoFindFirstArgs} args - Arguments to find a Barco
   * @example
   * // Get one Barco
   * const barco = await prisma.barco.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends BarcoFindFirstArgs>(args?: Prisma.SelectSubset<T, BarcoFindFirstArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Barco that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoFindFirstOrThrowArgs} args - Arguments to find a Barco
   * @example
   * // Get one Barco
   * const barco = await prisma.barco.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends BarcoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, BarcoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Barcos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Barcos
   * const barcos = await prisma.barco.findMany()
   * 
   * // Get first 10 Barcos
   * const barcos = await prisma.barco.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const barcoWithIdOnly = await prisma.barco.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends BarcoFindManyArgs>(args?: Prisma.SelectSubset<T, BarcoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Barco.
   * @param {BarcoCreateArgs} args - Arguments to create a Barco.
   * @example
   * // Create one Barco
   * const Barco = await prisma.barco.create({
   *   data: {
   *     // ... data to create a Barco
   *   }
   * })
   * 
   */
  create<T extends BarcoCreateArgs>(args: Prisma.SelectSubset<T, BarcoCreateArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Barcos.
   * @param {BarcoCreateManyArgs} args - Arguments to create many Barcos.
   * @example
   * // Create many Barcos
   * const barco = await prisma.barco.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends BarcoCreateManyArgs>(args?: Prisma.SelectSubset<T, BarcoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Barco.
   * @param {BarcoDeleteArgs} args - Arguments to delete one Barco.
   * @example
   * // Delete one Barco
   * const Barco = await prisma.barco.delete({
   *   where: {
   *     // ... filter to delete one Barco
   *   }
   * })
   * 
   */
  delete<T extends BarcoDeleteArgs>(args: Prisma.SelectSubset<T, BarcoDeleteArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Barco.
   * @param {BarcoUpdateArgs} args - Arguments to update one Barco.
   * @example
   * // Update one Barco
   * const barco = await prisma.barco.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends BarcoUpdateArgs>(args: Prisma.SelectSubset<T, BarcoUpdateArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Barcos.
   * @param {BarcoDeleteManyArgs} args - Arguments to filter Barcos to delete.
   * @example
   * // Delete a few Barcos
   * const { count } = await prisma.barco.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends BarcoDeleteManyArgs>(args?: Prisma.SelectSubset<T, BarcoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Barcos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Barcos
   * const barco = await prisma.barco.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends BarcoUpdateManyArgs>(args: Prisma.SelectSubset<T, BarcoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Barco.
   * @param {BarcoUpsertArgs} args - Arguments to update or create a Barco.
   * @example
   * // Update or create a Barco
   * const barco = await prisma.barco.upsert({
   *   create: {
   *     // ... data to create a Barco
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Barco we want to update
   *   }
   * })
   */
  upsert<T extends BarcoUpsertArgs>(args: Prisma.SelectSubset<T, BarcoUpsertArgs<ExtArgs>>): Prisma.Prisma__BarcoClient<runtime.Types.Result.GetResult<Prisma.$BarcoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Barcos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoCountArgs} args - Arguments to filter Barcos to count.
   * @example
   * // Count the number of Barcos
   * const count = await prisma.barco.count({
   *   where: {
   *     // ... the filter for the Barcos we want to count
   *   }
   * })
  **/
  count<T extends BarcoCountArgs>(
    args?: Prisma.Subset<T, BarcoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], BarcoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Barco.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends BarcoAggregateArgs>(args: Prisma.Subset<T, BarcoAggregateArgs>): Prisma.PrismaPromise<GetBarcoAggregateType<T>>

  /**
   * Group by Barco.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BarcoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends BarcoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: BarcoGroupByArgs['orderBy'] }
      : { orderBy?: BarcoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, BarcoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBarcoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Barco model
 */
readonly fields: BarcoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Barco.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__BarcoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  bitacoras<T extends Prisma.Barco$bitacorasArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Barco$bitacorasArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BitacoraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Barco model
 */
export interface BarcoFieldRefs {
  readonly id: Prisma.FieldRef<"Barco", 'Int'>
  readonly muelle: Prisma.FieldRef<"Barco", 'String'>
  readonly vaporBarco: Prisma.FieldRef<"Barco", 'String'>
  readonly fechaArribo: Prisma.FieldRef<"Barco", 'String'>
  readonly horaArribo: Prisma.FieldRef<"Barco", 'String'>
  readonly fechaAtraque: Prisma.FieldRef<"Barco", 'String'>
  readonly horaAtraque: Prisma.FieldRef<"Barco", 'String'>
  readonly fechaRecibido: Prisma.FieldRef<"Barco", 'String'>
  readonly horaRecibido: Prisma.FieldRef<"Barco", 'String'>
  readonly fechaInicioOperaciones: Prisma.FieldRef<"Barco", 'String'>
  readonly horaInicioOperaciones: Prisma.FieldRef<"Barco", 'String'>
  readonly fechaFinOperaciones: Prisma.FieldRef<"Barco", 'String'>
  readonly horaFinOperaciones: Prisma.FieldRef<"Barco", 'String'>
  readonly tipoCarga: Prisma.FieldRef<"Barco", 'String'>
  readonly sistemaUtilizado: Prisma.FieldRef<"Barco", 'String'>
  readonly createdAt: Prisma.FieldRef<"Barco", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Barco", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Barco findUnique
 */
export type BarcoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * Filter, which Barco to fetch.
   */
  where: Prisma.BarcoWhereUniqueInput
}

/**
 * Barco findUniqueOrThrow
 */
export type BarcoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * Filter, which Barco to fetch.
   */
  where: Prisma.BarcoWhereUniqueInput
}

/**
 * Barco findFirst
 */
export type BarcoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * Filter, which Barco to fetch.
   */
  where?: Prisma.BarcoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Barcos to fetch.
   */
  orderBy?: Prisma.BarcoOrderByWithRelationInput | Prisma.BarcoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Barcos.
   */
  cursor?: Prisma.BarcoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Barcos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Barcos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Barcos.
   */
  distinct?: Prisma.BarcoScalarFieldEnum | Prisma.BarcoScalarFieldEnum[]
}

/**
 * Barco findFirstOrThrow
 */
export type BarcoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * Filter, which Barco to fetch.
   */
  where?: Prisma.BarcoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Barcos to fetch.
   */
  orderBy?: Prisma.BarcoOrderByWithRelationInput | Prisma.BarcoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Barcos.
   */
  cursor?: Prisma.BarcoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Barcos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Barcos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Barcos.
   */
  distinct?: Prisma.BarcoScalarFieldEnum | Prisma.BarcoScalarFieldEnum[]
}

/**
 * Barco findMany
 */
export type BarcoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * Filter, which Barcos to fetch.
   */
  where?: Prisma.BarcoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Barcos to fetch.
   */
  orderBy?: Prisma.BarcoOrderByWithRelationInput | Prisma.BarcoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Barcos.
   */
  cursor?: Prisma.BarcoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Barcos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Barcos.
   */
  skip?: number
  distinct?: Prisma.BarcoScalarFieldEnum | Prisma.BarcoScalarFieldEnum[]
}

/**
 * Barco create
 */
export type BarcoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * The data needed to create a Barco.
   */
  data: Prisma.XOR<Prisma.BarcoCreateInput, Prisma.BarcoUncheckedCreateInput>
}

/**
 * Barco createMany
 */
export type BarcoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Barcos.
   */
  data: Prisma.BarcoCreateManyInput | Prisma.BarcoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Barco update
 */
export type BarcoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * The data needed to update a Barco.
   */
  data: Prisma.XOR<Prisma.BarcoUpdateInput, Prisma.BarcoUncheckedUpdateInput>
  /**
   * Choose, which Barco to update.
   */
  where: Prisma.BarcoWhereUniqueInput
}

/**
 * Barco updateMany
 */
export type BarcoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Barcos.
   */
  data: Prisma.XOR<Prisma.BarcoUpdateManyMutationInput, Prisma.BarcoUncheckedUpdateManyInput>
  /**
   * Filter which Barcos to update
   */
  where?: Prisma.BarcoWhereInput
  /**
   * Limit how many Barcos to update.
   */
  limit?: number
}

/**
 * Barco upsert
 */
export type BarcoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * The filter to search for the Barco to update in case it exists.
   */
  where: Prisma.BarcoWhereUniqueInput
  /**
   * In case the Barco found by the `where` argument doesn't exist, create a new Barco with this data.
   */
  create: Prisma.XOR<Prisma.BarcoCreateInput, Prisma.BarcoUncheckedCreateInput>
  /**
   * In case the Barco was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.BarcoUpdateInput, Prisma.BarcoUncheckedUpdateInput>
}

/**
 * Barco delete
 */
export type BarcoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
  /**
   * Filter which Barco to delete.
   */
  where: Prisma.BarcoWhereUniqueInput
}

/**
 * Barco deleteMany
 */
export type BarcoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Barcos to delete
   */
  where?: Prisma.BarcoWhereInput
  /**
   * Limit how many Barcos to delete.
   */
  limit?: number
}

/**
 * Barco.bitacoras
 */
export type Barco$bitacorasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Bitacora
   */
  select?: Prisma.BitacoraSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Bitacora
   */
  omit?: Prisma.BitacoraOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BitacoraInclude<ExtArgs> | null
  where?: Prisma.BitacoraWhereInput
  orderBy?: Prisma.BitacoraOrderByWithRelationInput | Prisma.BitacoraOrderByWithRelationInput[]
  cursor?: Prisma.BitacoraWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.BitacoraScalarFieldEnum | Prisma.BitacoraScalarFieldEnum[]
}

/**
 * Barco without action
 */
export type BarcoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Barco
   */
  select?: Prisma.BarcoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Barco
   */
  omit?: Prisma.BarcoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.BarcoInclude<ExtArgs> | null
}
