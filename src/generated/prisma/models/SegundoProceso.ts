
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `SegundoProceso` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model SegundoProceso
 * 
 */
export type SegundoProcesoModel = runtime.Types.Result.DefaultSelection<Prisma.$SegundoProcesoPayload>

export type AggregateSegundoProceso = {
  _count: SegundoProcesoCountAggregateOutputType | null
  _avg: SegundoProcesoAvgAggregateOutputType | null
  _sum: SegundoProcesoSumAggregateOutputType | null
  _min: SegundoProcesoMinAggregateOutputType | null
  _max: SegundoProcesoMaxAggregateOutputType | null
}

export type SegundoProcesoAvgAggregateOutputType = {
  id: number | null
  demoraId: number | null
  personalAsignado: number | null
}

export type SegundoProcesoSumAggregateOutputType = {
  id: number | null
  demoraId: number | null
  personalAsignado: number | null
}

export type SegundoProcesoMinAggregateOutputType = {
  id: number | null
  demoraId: number | null
  operador: string | null
  enlonador: string | null
  modeloEquipo: string | null
  personalAsignado: number | null
  personalAsignadoObservaciones: string | null
  tiempoLlegadaPunto: string | null
  llegadaPuntoObservaciones: string | null
  tiempoLlegadaOperador: string | null
  llegadaOperadorObservaciones: string | null
  tiempoLlegadaEnlonador: string | null
  llegadaEnlonadorObservaciones: string | null
  tiempoLlegadaEquipo: string | null
  llegadaEquipoObservaciones: string | null
  tiempoInicioCarga: string | null
  inicioCargaObservaciones: string | null
  tiempoTerminaCarga: string | null
  terminaCargaObservaciones: string | null
  tiempoSalidaPunto: string | null
  salidaPuntoObservaciones: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type SegundoProcesoMaxAggregateOutputType = {
  id: number | null
  demoraId: number | null
  operador: string | null
  enlonador: string | null
  modeloEquipo: string | null
  personalAsignado: number | null
  personalAsignadoObservaciones: string | null
  tiempoLlegadaPunto: string | null
  llegadaPuntoObservaciones: string | null
  tiempoLlegadaOperador: string | null
  llegadaOperadorObservaciones: string | null
  tiempoLlegadaEnlonador: string | null
  llegadaEnlonadorObservaciones: string | null
  tiempoLlegadaEquipo: string | null
  llegadaEquipoObservaciones: string | null
  tiempoInicioCarga: string | null
  inicioCargaObservaciones: string | null
  tiempoTerminaCarga: string | null
  terminaCargaObservaciones: string | null
  tiempoSalidaPunto: string | null
  salidaPuntoObservaciones: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type SegundoProcesoCountAggregateOutputType = {
  id: number
  demoraId: number
  operador: number
  enlonador: number
  modeloEquipo: number
  personalAsignado: number
  personalAsignadoObservaciones: number
  tiempoLlegadaPunto: number
  llegadaPuntoObservaciones: number
  tiempoLlegadaOperador: number
  llegadaOperadorObservaciones: number
  tiempoLlegadaEnlonador: number
  llegadaEnlonadorObservaciones: number
  tiempoLlegadaEquipo: number
  llegadaEquipoObservaciones: number
  tiempoInicioCarga: number
  inicioCargaObservaciones: number
  tiempoTerminaCarga: number
  terminaCargaObservaciones: number
  tiempoSalidaPunto: number
  salidaPuntoObservaciones: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type SegundoProcesoAvgAggregateInputType = {
  id?: true
  demoraId?: true
  personalAsignado?: true
}

export type SegundoProcesoSumAggregateInputType = {
  id?: true
  demoraId?: true
  personalAsignado?: true
}

export type SegundoProcesoMinAggregateInputType = {
  id?: true
  demoraId?: true
  operador?: true
  enlonador?: true
  modeloEquipo?: true
  personalAsignado?: true
  personalAsignadoObservaciones?: true
  tiempoLlegadaPunto?: true
  llegadaPuntoObservaciones?: true
  tiempoLlegadaOperador?: true
  llegadaOperadorObservaciones?: true
  tiempoLlegadaEnlonador?: true
  llegadaEnlonadorObservaciones?: true
  tiempoLlegadaEquipo?: true
  llegadaEquipoObservaciones?: true
  tiempoInicioCarga?: true
  inicioCargaObservaciones?: true
  tiempoTerminaCarga?: true
  terminaCargaObservaciones?: true
  tiempoSalidaPunto?: true
  salidaPuntoObservaciones?: true
  createdAt?: true
  updatedAt?: true
}

export type SegundoProcesoMaxAggregateInputType = {
  id?: true
  demoraId?: true
  operador?: true
  enlonador?: true
  modeloEquipo?: true
  personalAsignado?: true
  personalAsignadoObservaciones?: true
  tiempoLlegadaPunto?: true
  llegadaPuntoObservaciones?: true
  tiempoLlegadaOperador?: true
  llegadaOperadorObservaciones?: true
  tiempoLlegadaEnlonador?: true
  llegadaEnlonadorObservaciones?: true
  tiempoLlegadaEquipo?: true
  llegadaEquipoObservaciones?: true
  tiempoInicioCarga?: true
  inicioCargaObservaciones?: true
  tiempoTerminaCarga?: true
  terminaCargaObservaciones?: true
  tiempoSalidaPunto?: true
  salidaPuntoObservaciones?: true
  createdAt?: true
  updatedAt?: true
}

export type SegundoProcesoCountAggregateInputType = {
  id?: true
  demoraId?: true
  operador?: true
  enlonador?: true
  modeloEquipo?: true
  personalAsignado?: true
  personalAsignadoObservaciones?: true
  tiempoLlegadaPunto?: true
  llegadaPuntoObservaciones?: true
  tiempoLlegadaOperador?: true
  llegadaOperadorObservaciones?: true
  tiempoLlegadaEnlonador?: true
  llegadaEnlonadorObservaciones?: true
  tiempoLlegadaEquipo?: true
  llegadaEquipoObservaciones?: true
  tiempoInicioCarga?: true
  inicioCargaObservaciones?: true
  tiempoTerminaCarga?: true
  terminaCargaObservaciones?: true
  tiempoSalidaPunto?: true
  salidaPuntoObservaciones?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type SegundoProcesoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which SegundoProceso to aggregate.
   */
  where?: Prisma.SegundoProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SegundoProcesos to fetch.
   */
  orderBy?: Prisma.SegundoProcesoOrderByWithRelationInput | Prisma.SegundoProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.SegundoProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SegundoProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SegundoProcesos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned SegundoProcesos
  **/
  _count?: true | SegundoProcesoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: SegundoProcesoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: SegundoProcesoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: SegundoProcesoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: SegundoProcesoMaxAggregateInputType
}

export type GetSegundoProcesoAggregateType<T extends SegundoProcesoAggregateArgs> = {
      [P in keyof T & keyof AggregateSegundoProceso]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateSegundoProceso[P]>
    : Prisma.GetScalarType<T[P], AggregateSegundoProceso[P]>
}




export type SegundoProcesoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.SegundoProcesoWhereInput
  orderBy?: Prisma.SegundoProcesoOrderByWithAggregationInput | Prisma.SegundoProcesoOrderByWithAggregationInput[]
  by: Prisma.SegundoProcesoScalarFieldEnum[] | Prisma.SegundoProcesoScalarFieldEnum
  having?: Prisma.SegundoProcesoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: SegundoProcesoCountAggregateInputType | true
  _avg?: SegundoProcesoAvgAggregateInputType
  _sum?: SegundoProcesoSumAggregateInputType
  _min?: SegundoProcesoMinAggregateInputType
  _max?: SegundoProcesoMaxAggregateInputType
}

export type SegundoProcesoGroupByOutputType = {
  id: number
  demoraId: number
  operador: string
  enlonador: string
  modeloEquipo: string
  personalAsignado: number
  personalAsignadoObservaciones: string | null
  tiempoLlegadaPunto: string | null
  llegadaPuntoObservaciones: string | null
  tiempoLlegadaOperador: string | null
  llegadaOperadorObservaciones: string | null
  tiempoLlegadaEnlonador: string | null
  llegadaEnlonadorObservaciones: string | null
  tiempoLlegadaEquipo: string | null
  llegadaEquipoObservaciones: string | null
  tiempoInicioCarga: string | null
  inicioCargaObservaciones: string | null
  tiempoTerminaCarga: string | null
  terminaCargaObservaciones: string | null
  tiempoSalidaPunto: string | null
  salidaPuntoObservaciones: string | null
  createdAt: Date
  updatedAt: Date
  _count: SegundoProcesoCountAggregateOutputType | null
  _avg: SegundoProcesoAvgAggregateOutputType | null
  _sum: SegundoProcesoSumAggregateOutputType | null
  _min: SegundoProcesoMinAggregateOutputType | null
  _max: SegundoProcesoMaxAggregateOutputType | null
}

type GetSegundoProcesoGroupByPayload<T extends SegundoProcesoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<SegundoProcesoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof SegundoProcesoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], SegundoProcesoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], SegundoProcesoGroupByOutputType[P]>
      }
    >
  > 



export type SegundoProcesoWhereInput = {
  AND?: Prisma.SegundoProcesoWhereInput | Prisma.SegundoProcesoWhereInput[]
  OR?: Prisma.SegundoProcesoWhereInput[]
  NOT?: Prisma.SegundoProcesoWhereInput | Prisma.SegundoProcesoWhereInput[]
  id?: Prisma.IntFilter<"SegundoProceso"> | number
  demoraId?: Prisma.IntFilter<"SegundoProceso"> | number
  operador?: Prisma.StringFilter<"SegundoProceso"> | string
  enlonador?: Prisma.StringFilter<"SegundoProceso"> | string
  modeloEquipo?: Prisma.StringFilter<"SegundoProceso"> | string
  personalAsignado?: Prisma.IntFilter<"SegundoProceso"> | number
  personalAsignadoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaPunto?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaPuntoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaOperador?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaOperadorObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaEnlonador?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaEnlonadorObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaEquipo?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaEquipoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoInicioCarga?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  inicioCargaObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoTerminaCarga?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  terminaCargaObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoSalidaPunto?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  salidaPuntoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  createdAt?: Prisma.DateTimeFilter<"SegundoProceso"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"SegundoProceso"> | Date | string
  demora?: Prisma.XOR<Prisma.DemoraScalarRelationFilter, Prisma.DemoraWhereInput>
}

export type SegundoProcesoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  enlonador?: Prisma.SortOrder
  modeloEquipo?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
  personalAsignadoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaPunto?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaPuntoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaOperador?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaOperadorObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaEnlonador?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaEnlonadorObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaEquipo?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaEquipoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoInicioCarga?: Prisma.SortOrderInput | Prisma.SortOrder
  inicioCargaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoTerminaCarga?: Prisma.SortOrderInput | Prisma.SortOrder
  terminaCargaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoSalidaPunto?: Prisma.SortOrderInput | Prisma.SortOrder
  salidaPuntoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  demora?: Prisma.DemoraOrderByWithRelationInput
  _relevance?: Prisma.SegundoProcesoOrderByRelevanceInput
}

export type SegundoProcesoWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  demoraId?: number
  AND?: Prisma.SegundoProcesoWhereInput | Prisma.SegundoProcesoWhereInput[]
  OR?: Prisma.SegundoProcesoWhereInput[]
  NOT?: Prisma.SegundoProcesoWhereInput | Prisma.SegundoProcesoWhereInput[]
  operador?: Prisma.StringFilter<"SegundoProceso"> | string
  enlonador?: Prisma.StringFilter<"SegundoProceso"> | string
  modeloEquipo?: Prisma.StringFilter<"SegundoProceso"> | string
  personalAsignado?: Prisma.IntFilter<"SegundoProceso"> | number
  personalAsignadoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaPunto?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaPuntoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaOperador?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaOperadorObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaEnlonador?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaEnlonadorObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoLlegadaEquipo?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  llegadaEquipoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoInicioCarga?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  inicioCargaObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoTerminaCarga?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  terminaCargaObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  tiempoSalidaPunto?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  salidaPuntoObservaciones?: Prisma.StringNullableFilter<"SegundoProceso"> | string | null
  createdAt?: Prisma.DateTimeFilter<"SegundoProceso"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"SegundoProceso"> | Date | string
  demora?: Prisma.XOR<Prisma.DemoraScalarRelationFilter, Prisma.DemoraWhereInput>
}, "id" | "demoraId">

export type SegundoProcesoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  enlonador?: Prisma.SortOrder
  modeloEquipo?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
  personalAsignadoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaPunto?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaPuntoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaOperador?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaOperadorObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaEnlonador?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaEnlonadorObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoLlegadaEquipo?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaEquipoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoInicioCarga?: Prisma.SortOrderInput | Prisma.SortOrder
  inicioCargaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoTerminaCarga?: Prisma.SortOrderInput | Prisma.SortOrder
  terminaCargaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoSalidaPunto?: Prisma.SortOrderInput | Prisma.SortOrder
  salidaPuntoObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.SegundoProcesoCountOrderByAggregateInput
  _avg?: Prisma.SegundoProcesoAvgOrderByAggregateInput
  _max?: Prisma.SegundoProcesoMaxOrderByAggregateInput
  _min?: Prisma.SegundoProcesoMinOrderByAggregateInput
  _sum?: Prisma.SegundoProcesoSumOrderByAggregateInput
}

export type SegundoProcesoScalarWhereWithAggregatesInput = {
  AND?: Prisma.SegundoProcesoScalarWhereWithAggregatesInput | Prisma.SegundoProcesoScalarWhereWithAggregatesInput[]
  OR?: Prisma.SegundoProcesoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.SegundoProcesoScalarWhereWithAggregatesInput | Prisma.SegundoProcesoScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"SegundoProceso"> | number
  demoraId?: Prisma.IntWithAggregatesFilter<"SegundoProceso"> | number
  operador?: Prisma.StringWithAggregatesFilter<"SegundoProceso"> | string
  enlonador?: Prisma.StringWithAggregatesFilter<"SegundoProceso"> | string
  modeloEquipo?: Prisma.StringWithAggregatesFilter<"SegundoProceso"> | string
  personalAsignado?: Prisma.IntWithAggregatesFilter<"SegundoProceso"> | number
  personalAsignadoObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoLlegadaPunto?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  llegadaPuntoObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoLlegadaOperador?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  llegadaOperadorObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoLlegadaEnlonador?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  llegadaEnlonadorObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoLlegadaEquipo?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  llegadaEquipoObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoInicioCarga?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  inicioCargaObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoTerminaCarga?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  terminaCargaObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  tiempoSalidaPunto?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  salidaPuntoObservaciones?: Prisma.StringNullableWithAggregatesFilter<"SegundoProceso"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"SegundoProceso"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"SegundoProceso"> | Date | string
}

export type SegundoProcesoCreateInput = {
  operador: string
  enlonador: string
  modeloEquipo: string
  personalAsignado: number
  personalAsignadoObservaciones?: string | null
  tiempoLlegadaPunto?: string | null
  llegadaPuntoObservaciones?: string | null
  tiempoLlegadaOperador?: string | null
  llegadaOperadorObservaciones?: string | null
  tiempoLlegadaEnlonador?: string | null
  llegadaEnlonadorObservaciones?: string | null
  tiempoLlegadaEquipo?: string | null
  llegadaEquipoObservaciones?: string | null
  tiempoInicioCarga?: string | null
  inicioCargaObservaciones?: string | null
  tiempoTerminaCarga?: string | null
  terminaCargaObservaciones?: string | null
  tiempoSalidaPunto?: string | null
  salidaPuntoObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  demora: Prisma.DemoraCreateNestedOneWithoutSegundoProcesoInput
}

export type SegundoProcesoUncheckedCreateInput = {
  id?: number
  demoraId: number
  operador: string
  enlonador: string
  modeloEquipo: string
  personalAsignado: number
  personalAsignadoObservaciones?: string | null
  tiempoLlegadaPunto?: string | null
  llegadaPuntoObservaciones?: string | null
  tiempoLlegadaOperador?: string | null
  llegadaOperadorObservaciones?: string | null
  tiempoLlegadaEnlonador?: string | null
  llegadaEnlonadorObservaciones?: string | null
  tiempoLlegadaEquipo?: string | null
  llegadaEquipoObservaciones?: string | null
  tiempoInicioCarga?: string | null
  inicioCargaObservaciones?: string | null
  tiempoTerminaCarga?: string | null
  terminaCargaObservaciones?: string | null
  tiempoSalidaPunto?: string | null
  salidaPuntoObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type SegundoProcesoUpdateInput = {
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  enlonador?: Prisma.StringFieldUpdateOperationsInput | string
  modeloEquipo?: Prisma.StringFieldUpdateOperationsInput | string
  personalAsignado?: Prisma.IntFieldUpdateOperationsInput | number
  personalAsignadoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaOperador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaOperadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEnlonador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEnlonadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEquipo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEquipoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoInicioCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicioCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoTerminaCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  terminaCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demora?: Prisma.DemoraUpdateOneRequiredWithoutSegundoProcesoNestedInput
}

export type SegundoProcesoUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  demoraId?: Prisma.IntFieldUpdateOperationsInput | number
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  enlonador?: Prisma.StringFieldUpdateOperationsInput | string
  modeloEquipo?: Prisma.StringFieldUpdateOperationsInput | string
  personalAsignado?: Prisma.IntFieldUpdateOperationsInput | number
  personalAsignadoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaOperador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaOperadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEnlonador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEnlonadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEquipo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEquipoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoInicioCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicioCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoTerminaCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  terminaCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type SegundoProcesoCreateManyInput = {
  id?: number
  demoraId: number
  operador: string
  enlonador: string
  modeloEquipo: string
  personalAsignado: number
  personalAsignadoObservaciones?: string | null
  tiempoLlegadaPunto?: string | null
  llegadaPuntoObservaciones?: string | null
  tiempoLlegadaOperador?: string | null
  llegadaOperadorObservaciones?: string | null
  tiempoLlegadaEnlonador?: string | null
  llegadaEnlonadorObservaciones?: string | null
  tiempoLlegadaEquipo?: string | null
  llegadaEquipoObservaciones?: string | null
  tiempoInicioCarga?: string | null
  inicioCargaObservaciones?: string | null
  tiempoTerminaCarga?: string | null
  terminaCargaObservaciones?: string | null
  tiempoSalidaPunto?: string | null
  salidaPuntoObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type SegundoProcesoUpdateManyMutationInput = {
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  enlonador?: Prisma.StringFieldUpdateOperationsInput | string
  modeloEquipo?: Prisma.StringFieldUpdateOperationsInput | string
  personalAsignado?: Prisma.IntFieldUpdateOperationsInput | number
  personalAsignadoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaOperador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaOperadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEnlonador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEnlonadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEquipo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEquipoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoInicioCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicioCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoTerminaCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  terminaCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type SegundoProcesoUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  demoraId?: Prisma.IntFieldUpdateOperationsInput | number
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  enlonador?: Prisma.StringFieldUpdateOperationsInput | string
  modeloEquipo?: Prisma.StringFieldUpdateOperationsInput | string
  personalAsignado?: Prisma.IntFieldUpdateOperationsInput | number
  personalAsignadoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaOperador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaOperadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEnlonador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEnlonadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEquipo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEquipoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoInicioCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicioCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoTerminaCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  terminaCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type SegundoProcesoNullableScalarRelationFilter = {
  is?: Prisma.SegundoProcesoWhereInput | null
  isNot?: Prisma.SegundoProcesoWhereInput | null
}

export type SegundoProcesoOrderByRelevanceInput = {
  fields: Prisma.SegundoProcesoOrderByRelevanceFieldEnum | Prisma.SegundoProcesoOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type SegundoProcesoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  enlonador?: Prisma.SortOrder
  modeloEquipo?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
  personalAsignadoObservaciones?: Prisma.SortOrder
  tiempoLlegadaPunto?: Prisma.SortOrder
  llegadaPuntoObservaciones?: Prisma.SortOrder
  tiempoLlegadaOperador?: Prisma.SortOrder
  llegadaOperadorObservaciones?: Prisma.SortOrder
  tiempoLlegadaEnlonador?: Prisma.SortOrder
  llegadaEnlonadorObservaciones?: Prisma.SortOrder
  tiempoLlegadaEquipo?: Prisma.SortOrder
  llegadaEquipoObservaciones?: Prisma.SortOrder
  tiempoInicioCarga?: Prisma.SortOrder
  inicioCargaObservaciones?: Prisma.SortOrder
  tiempoTerminaCarga?: Prisma.SortOrder
  terminaCargaObservaciones?: Prisma.SortOrder
  tiempoSalidaPunto?: Prisma.SortOrder
  salidaPuntoObservaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type SegundoProcesoAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
}

export type SegundoProcesoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  enlonador?: Prisma.SortOrder
  modeloEquipo?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
  personalAsignadoObservaciones?: Prisma.SortOrder
  tiempoLlegadaPunto?: Prisma.SortOrder
  llegadaPuntoObservaciones?: Prisma.SortOrder
  tiempoLlegadaOperador?: Prisma.SortOrder
  llegadaOperadorObservaciones?: Prisma.SortOrder
  tiempoLlegadaEnlonador?: Prisma.SortOrder
  llegadaEnlonadorObservaciones?: Prisma.SortOrder
  tiempoLlegadaEquipo?: Prisma.SortOrder
  llegadaEquipoObservaciones?: Prisma.SortOrder
  tiempoInicioCarga?: Prisma.SortOrder
  inicioCargaObservaciones?: Prisma.SortOrder
  tiempoTerminaCarga?: Prisma.SortOrder
  terminaCargaObservaciones?: Prisma.SortOrder
  tiempoSalidaPunto?: Prisma.SortOrder
  salidaPuntoObservaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type SegundoProcesoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  enlonador?: Prisma.SortOrder
  modeloEquipo?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
  personalAsignadoObservaciones?: Prisma.SortOrder
  tiempoLlegadaPunto?: Prisma.SortOrder
  llegadaPuntoObservaciones?: Prisma.SortOrder
  tiempoLlegadaOperador?: Prisma.SortOrder
  llegadaOperadorObservaciones?: Prisma.SortOrder
  tiempoLlegadaEnlonador?: Prisma.SortOrder
  llegadaEnlonadorObservaciones?: Prisma.SortOrder
  tiempoLlegadaEquipo?: Prisma.SortOrder
  llegadaEquipoObservaciones?: Prisma.SortOrder
  tiempoInicioCarga?: Prisma.SortOrder
  inicioCargaObservaciones?: Prisma.SortOrder
  tiempoTerminaCarga?: Prisma.SortOrder
  terminaCargaObservaciones?: Prisma.SortOrder
  tiempoSalidaPunto?: Prisma.SortOrder
  salidaPuntoObservaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type SegundoProcesoSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  personalAsignado?: Prisma.SortOrder
}

export type SegundoProcesoCreateNestedOneWithoutDemoraInput = {
  create?: Prisma.XOR<Prisma.SegundoProcesoCreateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.SegundoProcesoCreateOrConnectWithoutDemoraInput
  connect?: Prisma.SegundoProcesoWhereUniqueInput
}

export type SegundoProcesoUncheckedCreateNestedOneWithoutDemoraInput = {
  create?: Prisma.XOR<Prisma.SegundoProcesoCreateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.SegundoProcesoCreateOrConnectWithoutDemoraInput
  connect?: Prisma.SegundoProcesoWhereUniqueInput
}

export type SegundoProcesoUpdateOneWithoutDemoraNestedInput = {
  create?: Prisma.XOR<Prisma.SegundoProcesoCreateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.SegundoProcesoCreateOrConnectWithoutDemoraInput
  upsert?: Prisma.SegundoProcesoUpsertWithoutDemoraInput
  disconnect?: Prisma.SegundoProcesoWhereInput | boolean
  delete?: Prisma.SegundoProcesoWhereInput | boolean
  connect?: Prisma.SegundoProcesoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.SegundoProcesoUpdateToOneWithWhereWithoutDemoraInput, Prisma.SegundoProcesoUpdateWithoutDemoraInput>, Prisma.SegundoProcesoUncheckedUpdateWithoutDemoraInput>
}

export type SegundoProcesoUncheckedUpdateOneWithoutDemoraNestedInput = {
  create?: Prisma.XOR<Prisma.SegundoProcesoCreateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.SegundoProcesoCreateOrConnectWithoutDemoraInput
  upsert?: Prisma.SegundoProcesoUpsertWithoutDemoraInput
  disconnect?: Prisma.SegundoProcesoWhereInput | boolean
  delete?: Prisma.SegundoProcesoWhereInput | boolean
  connect?: Prisma.SegundoProcesoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.SegundoProcesoUpdateToOneWithWhereWithoutDemoraInput, Prisma.SegundoProcesoUpdateWithoutDemoraInput>, Prisma.SegundoProcesoUncheckedUpdateWithoutDemoraInput>
}

export type SegundoProcesoCreateWithoutDemoraInput = {
  operador: string
  enlonador: string
  modeloEquipo: string
  personalAsignado: number
  personalAsignadoObservaciones?: string | null
  tiempoLlegadaPunto?: string | null
  llegadaPuntoObservaciones?: string | null
  tiempoLlegadaOperador?: string | null
  llegadaOperadorObservaciones?: string | null
  tiempoLlegadaEnlonador?: string | null
  llegadaEnlonadorObservaciones?: string | null
  tiempoLlegadaEquipo?: string | null
  llegadaEquipoObservaciones?: string | null
  tiempoInicioCarga?: string | null
  inicioCargaObservaciones?: string | null
  tiempoTerminaCarga?: string | null
  terminaCargaObservaciones?: string | null
  tiempoSalidaPunto?: string | null
  salidaPuntoObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type SegundoProcesoUncheckedCreateWithoutDemoraInput = {
  id?: number
  operador: string
  enlonador: string
  modeloEquipo: string
  personalAsignado: number
  personalAsignadoObservaciones?: string | null
  tiempoLlegadaPunto?: string | null
  llegadaPuntoObservaciones?: string | null
  tiempoLlegadaOperador?: string | null
  llegadaOperadorObservaciones?: string | null
  tiempoLlegadaEnlonador?: string | null
  llegadaEnlonadorObservaciones?: string | null
  tiempoLlegadaEquipo?: string | null
  llegadaEquipoObservaciones?: string | null
  tiempoInicioCarga?: string | null
  inicioCargaObservaciones?: string | null
  tiempoTerminaCarga?: string | null
  terminaCargaObservaciones?: string | null
  tiempoSalidaPunto?: string | null
  salidaPuntoObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type SegundoProcesoCreateOrConnectWithoutDemoraInput = {
  where: Prisma.SegundoProcesoWhereUniqueInput
  create: Prisma.XOR<Prisma.SegundoProcesoCreateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedCreateWithoutDemoraInput>
}

export type SegundoProcesoUpsertWithoutDemoraInput = {
  update: Prisma.XOR<Prisma.SegundoProcesoUpdateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedUpdateWithoutDemoraInput>
  create: Prisma.XOR<Prisma.SegundoProcesoCreateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedCreateWithoutDemoraInput>
  where?: Prisma.SegundoProcesoWhereInput
}

export type SegundoProcesoUpdateToOneWithWhereWithoutDemoraInput = {
  where?: Prisma.SegundoProcesoWhereInput
  data: Prisma.XOR<Prisma.SegundoProcesoUpdateWithoutDemoraInput, Prisma.SegundoProcesoUncheckedUpdateWithoutDemoraInput>
}

export type SegundoProcesoUpdateWithoutDemoraInput = {
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  enlonador?: Prisma.StringFieldUpdateOperationsInput | string
  modeloEquipo?: Prisma.StringFieldUpdateOperationsInput | string
  personalAsignado?: Prisma.IntFieldUpdateOperationsInput | number
  personalAsignadoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaOperador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaOperadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEnlonador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEnlonadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEquipo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEquipoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoInicioCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicioCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoTerminaCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  terminaCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type SegundoProcesoUncheckedUpdateWithoutDemoraInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  enlonador?: Prisma.StringFieldUpdateOperationsInput | string
  modeloEquipo?: Prisma.StringFieldUpdateOperationsInput | string
  personalAsignado?: Prisma.IntFieldUpdateOperationsInput | number
  personalAsignadoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaOperador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaOperadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEnlonador?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEnlonadorObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoLlegadaEquipo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaEquipoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoInicioCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicioCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoTerminaCarga?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  terminaCargaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaPunto?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaPuntoObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type SegundoProcesoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  demoraId?: boolean
  operador?: boolean
  enlonador?: boolean
  modeloEquipo?: boolean
  personalAsignado?: boolean
  personalAsignadoObservaciones?: boolean
  tiempoLlegadaPunto?: boolean
  llegadaPuntoObservaciones?: boolean
  tiempoLlegadaOperador?: boolean
  llegadaOperadorObservaciones?: boolean
  tiempoLlegadaEnlonador?: boolean
  llegadaEnlonadorObservaciones?: boolean
  tiempoLlegadaEquipo?: boolean
  llegadaEquipoObservaciones?: boolean
  tiempoInicioCarga?: boolean
  inicioCargaObservaciones?: boolean
  tiempoTerminaCarga?: boolean
  terminaCargaObservaciones?: boolean
  tiempoSalidaPunto?: boolean
  salidaPuntoObservaciones?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  demora?: boolean | Prisma.DemoraDefaultArgs<ExtArgs>
}, ExtArgs["result"]["segundoProceso"]>



export type SegundoProcesoSelectScalar = {
  id?: boolean
  demoraId?: boolean
  operador?: boolean
  enlonador?: boolean
  modeloEquipo?: boolean
  personalAsignado?: boolean
  personalAsignadoObservaciones?: boolean
  tiempoLlegadaPunto?: boolean
  llegadaPuntoObservaciones?: boolean
  tiempoLlegadaOperador?: boolean
  llegadaOperadorObservaciones?: boolean
  tiempoLlegadaEnlonador?: boolean
  llegadaEnlonadorObservaciones?: boolean
  tiempoLlegadaEquipo?: boolean
  llegadaEquipoObservaciones?: boolean
  tiempoInicioCarga?: boolean
  inicioCargaObservaciones?: boolean
  tiempoTerminaCarga?: boolean
  terminaCargaObservaciones?: boolean
  tiempoSalidaPunto?: boolean
  salidaPuntoObservaciones?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type SegundoProcesoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "demoraId" | "operador" | "enlonador" | "modeloEquipo" | "personalAsignado" | "personalAsignadoObservaciones" | "tiempoLlegadaPunto" | "llegadaPuntoObservaciones" | "tiempoLlegadaOperador" | "llegadaOperadorObservaciones" | "tiempoLlegadaEnlonador" | "llegadaEnlonadorObservaciones" | "tiempoLlegadaEquipo" | "llegadaEquipoObservaciones" | "tiempoInicioCarga" | "inicioCargaObservaciones" | "tiempoTerminaCarga" | "terminaCargaObservaciones" | "tiempoSalidaPunto" | "salidaPuntoObservaciones" | "createdAt" | "updatedAt", ExtArgs["result"]["segundoProceso"]>
export type SegundoProcesoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  demora?: boolean | Prisma.DemoraDefaultArgs<ExtArgs>
}

export type $SegundoProcesoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "SegundoProceso"
  objects: {
    demora: Prisma.$DemoraPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    demoraId: number
    operador: string
    enlonador: string
    modeloEquipo: string
    personalAsignado: number
    personalAsignadoObservaciones: string | null
    tiempoLlegadaPunto: string | null
    llegadaPuntoObservaciones: string | null
    tiempoLlegadaOperador: string | null
    llegadaOperadorObservaciones: string | null
    tiempoLlegadaEnlonador: string | null
    llegadaEnlonadorObservaciones: string | null
    tiempoLlegadaEquipo: string | null
    llegadaEquipoObservaciones: string | null
    tiempoInicioCarga: string | null
    inicioCargaObservaciones: string | null
    tiempoTerminaCarga: string | null
    terminaCargaObservaciones: string | null
    tiempoSalidaPunto: string | null
    salidaPuntoObservaciones: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["segundoProceso"]>
  composites: {}
}

export type SegundoProcesoGetPayload<S extends boolean | null | undefined | SegundoProcesoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload, S>

export type SegundoProcesoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<SegundoProcesoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: SegundoProcesoCountAggregateInputType | true
  }

export interface SegundoProcesoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SegundoProceso'], meta: { name: 'SegundoProceso' } }
  /**
   * Find zero or one SegundoProceso that matches the filter.
   * @param {SegundoProcesoFindUniqueArgs} args - Arguments to find a SegundoProceso
   * @example
   * // Get one SegundoProceso
   * const segundoProceso = await prisma.segundoProceso.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends SegundoProcesoFindUniqueArgs>(args: Prisma.SelectSubset<T, SegundoProcesoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one SegundoProceso that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {SegundoProcesoFindUniqueOrThrowArgs} args - Arguments to find a SegundoProceso
   * @example
   * // Get one SegundoProceso
   * const segundoProceso = await prisma.segundoProceso.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends SegundoProcesoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, SegundoProcesoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first SegundoProceso that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoFindFirstArgs} args - Arguments to find a SegundoProceso
   * @example
   * // Get one SegundoProceso
   * const segundoProceso = await prisma.segundoProceso.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends SegundoProcesoFindFirstArgs>(args?: Prisma.SelectSubset<T, SegundoProcesoFindFirstArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first SegundoProceso that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoFindFirstOrThrowArgs} args - Arguments to find a SegundoProceso
   * @example
   * // Get one SegundoProceso
   * const segundoProceso = await prisma.segundoProceso.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends SegundoProcesoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, SegundoProcesoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more SegundoProcesos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all SegundoProcesos
   * const segundoProcesos = await prisma.segundoProceso.findMany()
   * 
   * // Get first 10 SegundoProcesos
   * const segundoProcesos = await prisma.segundoProceso.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const segundoProcesoWithIdOnly = await prisma.segundoProceso.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends SegundoProcesoFindManyArgs>(args?: Prisma.SelectSubset<T, SegundoProcesoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a SegundoProceso.
   * @param {SegundoProcesoCreateArgs} args - Arguments to create a SegundoProceso.
   * @example
   * // Create one SegundoProceso
   * const SegundoProceso = await prisma.segundoProceso.create({
   *   data: {
   *     // ... data to create a SegundoProceso
   *   }
   * })
   * 
   */
  create<T extends SegundoProcesoCreateArgs>(args: Prisma.SelectSubset<T, SegundoProcesoCreateArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many SegundoProcesos.
   * @param {SegundoProcesoCreateManyArgs} args - Arguments to create many SegundoProcesos.
   * @example
   * // Create many SegundoProcesos
   * const segundoProceso = await prisma.segundoProceso.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends SegundoProcesoCreateManyArgs>(args?: Prisma.SelectSubset<T, SegundoProcesoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a SegundoProceso.
   * @param {SegundoProcesoDeleteArgs} args - Arguments to delete one SegundoProceso.
   * @example
   * // Delete one SegundoProceso
   * const SegundoProceso = await prisma.segundoProceso.delete({
   *   where: {
   *     // ... filter to delete one SegundoProceso
   *   }
   * })
   * 
   */
  delete<T extends SegundoProcesoDeleteArgs>(args: Prisma.SelectSubset<T, SegundoProcesoDeleteArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one SegundoProceso.
   * @param {SegundoProcesoUpdateArgs} args - Arguments to update one SegundoProceso.
   * @example
   * // Update one SegundoProceso
   * const segundoProceso = await prisma.segundoProceso.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends SegundoProcesoUpdateArgs>(args: Prisma.SelectSubset<T, SegundoProcesoUpdateArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more SegundoProcesos.
   * @param {SegundoProcesoDeleteManyArgs} args - Arguments to filter SegundoProcesos to delete.
   * @example
   * // Delete a few SegundoProcesos
   * const { count } = await prisma.segundoProceso.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends SegundoProcesoDeleteManyArgs>(args?: Prisma.SelectSubset<T, SegundoProcesoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more SegundoProcesos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many SegundoProcesos
   * const segundoProceso = await prisma.segundoProceso.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends SegundoProcesoUpdateManyArgs>(args: Prisma.SelectSubset<T, SegundoProcesoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one SegundoProceso.
   * @param {SegundoProcesoUpsertArgs} args - Arguments to update or create a SegundoProceso.
   * @example
   * // Update or create a SegundoProceso
   * const segundoProceso = await prisma.segundoProceso.upsert({
   *   create: {
   *     // ... data to create a SegundoProceso
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the SegundoProceso we want to update
   *   }
   * })
   */
  upsert<T extends SegundoProcesoUpsertArgs>(args: Prisma.SelectSubset<T, SegundoProcesoUpsertArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of SegundoProcesos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoCountArgs} args - Arguments to filter SegundoProcesos to count.
   * @example
   * // Count the number of SegundoProcesos
   * const count = await prisma.segundoProceso.count({
   *   where: {
   *     // ... the filter for the SegundoProcesos we want to count
   *   }
   * })
  **/
  count<T extends SegundoProcesoCountArgs>(
    args?: Prisma.Subset<T, SegundoProcesoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], SegundoProcesoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a SegundoProceso.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends SegundoProcesoAggregateArgs>(args: Prisma.Subset<T, SegundoProcesoAggregateArgs>): Prisma.PrismaPromise<GetSegundoProcesoAggregateType<T>>

  /**
   * Group by SegundoProceso.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {SegundoProcesoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends SegundoProcesoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: SegundoProcesoGroupByArgs['orderBy'] }
      : { orderBy?: SegundoProcesoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, SegundoProcesoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSegundoProcesoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the SegundoProceso model
 */
readonly fields: SegundoProcesoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for SegundoProceso.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__SegundoProcesoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  demora<T extends Prisma.DemoraDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.DemoraDefaultArgs<ExtArgs>>): Prisma.Prisma__DemoraClient<runtime.Types.Result.GetResult<Prisma.$DemoraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the SegundoProceso model
 */
export interface SegundoProcesoFieldRefs {
  readonly id: Prisma.FieldRef<"SegundoProceso", 'Int'>
  readonly demoraId: Prisma.FieldRef<"SegundoProceso", 'Int'>
  readonly operador: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly enlonador: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly modeloEquipo: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly personalAsignado: Prisma.FieldRef<"SegundoProceso", 'Int'>
  readonly personalAsignadoObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoLlegadaPunto: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly llegadaPuntoObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoLlegadaOperador: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly llegadaOperadorObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoLlegadaEnlonador: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly llegadaEnlonadorObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoLlegadaEquipo: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly llegadaEquipoObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoInicioCarga: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly inicioCargaObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoTerminaCarga: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly terminaCargaObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly tiempoSalidaPunto: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly salidaPuntoObservaciones: Prisma.FieldRef<"SegundoProceso", 'String'>
  readonly createdAt: Prisma.FieldRef<"SegundoProceso", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"SegundoProceso", 'DateTime'>
}
    

// Custom InputTypes
/**
 * SegundoProceso findUnique
 */
export type SegundoProcesoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * Filter, which SegundoProceso to fetch.
   */
  where: Prisma.SegundoProcesoWhereUniqueInput
}

/**
 * SegundoProceso findUniqueOrThrow
 */
export type SegundoProcesoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * Filter, which SegundoProceso to fetch.
   */
  where: Prisma.SegundoProcesoWhereUniqueInput
}

/**
 * SegundoProceso findFirst
 */
export type SegundoProcesoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * Filter, which SegundoProceso to fetch.
   */
  where?: Prisma.SegundoProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SegundoProcesos to fetch.
   */
  orderBy?: Prisma.SegundoProcesoOrderByWithRelationInput | Prisma.SegundoProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for SegundoProcesos.
   */
  cursor?: Prisma.SegundoProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SegundoProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SegundoProcesos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of SegundoProcesos.
   */
  distinct?: Prisma.SegundoProcesoScalarFieldEnum | Prisma.SegundoProcesoScalarFieldEnum[]
}

/**
 * SegundoProceso findFirstOrThrow
 */
export type SegundoProcesoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * Filter, which SegundoProceso to fetch.
   */
  where?: Prisma.SegundoProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SegundoProcesos to fetch.
   */
  orderBy?: Prisma.SegundoProcesoOrderByWithRelationInput | Prisma.SegundoProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for SegundoProcesos.
   */
  cursor?: Prisma.SegundoProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SegundoProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SegundoProcesos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of SegundoProcesos.
   */
  distinct?: Prisma.SegundoProcesoScalarFieldEnum | Prisma.SegundoProcesoScalarFieldEnum[]
}

/**
 * SegundoProceso findMany
 */
export type SegundoProcesoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * Filter, which SegundoProcesos to fetch.
   */
  where?: Prisma.SegundoProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of SegundoProcesos to fetch.
   */
  orderBy?: Prisma.SegundoProcesoOrderByWithRelationInput | Prisma.SegundoProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing SegundoProcesos.
   */
  cursor?: Prisma.SegundoProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` SegundoProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` SegundoProcesos.
   */
  skip?: number
  distinct?: Prisma.SegundoProcesoScalarFieldEnum | Prisma.SegundoProcesoScalarFieldEnum[]
}

/**
 * SegundoProceso create
 */
export type SegundoProcesoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * The data needed to create a SegundoProceso.
   */
  data: Prisma.XOR<Prisma.SegundoProcesoCreateInput, Prisma.SegundoProcesoUncheckedCreateInput>
}

/**
 * SegundoProceso createMany
 */
export type SegundoProcesoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many SegundoProcesos.
   */
  data: Prisma.SegundoProcesoCreateManyInput | Prisma.SegundoProcesoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * SegundoProceso update
 */
export type SegundoProcesoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * The data needed to update a SegundoProceso.
   */
  data: Prisma.XOR<Prisma.SegundoProcesoUpdateInput, Prisma.SegundoProcesoUncheckedUpdateInput>
  /**
   * Choose, which SegundoProceso to update.
   */
  where: Prisma.SegundoProcesoWhereUniqueInput
}

/**
 * SegundoProceso updateMany
 */
export type SegundoProcesoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update SegundoProcesos.
   */
  data: Prisma.XOR<Prisma.SegundoProcesoUpdateManyMutationInput, Prisma.SegundoProcesoUncheckedUpdateManyInput>
  /**
   * Filter which SegundoProcesos to update
   */
  where?: Prisma.SegundoProcesoWhereInput
  /**
   * Limit how many SegundoProcesos to update.
   */
  limit?: number
}

/**
 * SegundoProceso upsert
 */
export type SegundoProcesoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * The filter to search for the SegundoProceso to update in case it exists.
   */
  where: Prisma.SegundoProcesoWhereUniqueInput
  /**
   * In case the SegundoProceso found by the `where` argument doesn't exist, create a new SegundoProceso with this data.
   */
  create: Prisma.XOR<Prisma.SegundoProcesoCreateInput, Prisma.SegundoProcesoUncheckedCreateInput>
  /**
   * In case the SegundoProceso was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.SegundoProcesoUpdateInput, Prisma.SegundoProcesoUncheckedUpdateInput>
}

/**
 * SegundoProceso delete
 */
export type SegundoProcesoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
  /**
   * Filter which SegundoProceso to delete.
   */
  where: Prisma.SegundoProcesoWhereUniqueInput
}

/**
 * SegundoProceso deleteMany
 */
export type SegundoProcesoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which SegundoProcesos to delete
   */
  where?: Prisma.SegundoProcesoWhereInput
  /**
   * Limit how many SegundoProcesos to delete.
   */
  limit?: number
}

/**
 * SegundoProceso without action
 */
export type SegundoProcesoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the SegundoProceso
   */
  select?: Prisma.SegundoProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the SegundoProceso
   */
  omit?: Prisma.SegundoProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SegundoProcesoInclude<ExtArgs> | null
}
