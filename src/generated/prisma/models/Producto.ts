
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Producto` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Producto
 * 
 */
export type ProductoModel = runtime.Types.Result.DefaultSelection<Prisma.$ProductoPayload>

export type AggregateProducto = {
  _count: ProductoCountAggregateOutputType | null
  _avg: ProductoAvgAggregateOutputType | null
  _sum: ProductoSumAggregateOutputType | null
  _min: ProductoMinAggregateOutputType | null
  _max: ProductoMaxAggregateOutputType | null
}

export type ProductoAvgAggregateOutputType = {
  id: number | null
}

export type ProductoSumAggregateOutputType = {
  id: number | null
}

export type ProductoMinAggregateOutputType = {
  id: number | null
  nombre: string | null
  descripcion: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProductoMaxAggregateOutputType = {
  id: number | null
  nombre: string | null
  descripcion: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProductoCountAggregateOutputType = {
  id: number
  nombre: number
  descripcion: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProductoAvgAggregateInputType = {
  id?: true
}

export type ProductoSumAggregateInputType = {
  id?: true
}

export type ProductoMinAggregateInputType = {
  id?: true
  nombre?: true
  descripcion?: true
  createdAt?: true
  updatedAt?: true
}

export type ProductoMaxAggregateInputType = {
  id?: true
  nombre?: true
  descripcion?: true
  createdAt?: true
  updatedAt?: true
}

export type ProductoCountAggregateInputType = {
  id?: true
  nombre?: true
  descripcion?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProductoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Producto to aggregate.
   */
  where?: Prisma.ProductoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Productos to fetch.
   */
  orderBy?: Prisma.ProductoOrderByWithRelationInput | Prisma.ProductoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProductoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Productos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Productos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Productos
  **/
  _count?: true | ProductoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProductoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProductoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProductoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProductoMaxAggregateInputType
}

export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
      [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProducto[P]>
    : Prisma.GetScalarType<T[P], AggregateProducto[P]>
}




export type ProductoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductoWhereInput
  orderBy?: Prisma.ProductoOrderByWithAggregationInput | Prisma.ProductoOrderByWithAggregationInput[]
  by: Prisma.ProductoScalarFieldEnum[] | Prisma.ProductoScalarFieldEnum
  having?: Prisma.ProductoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProductoCountAggregateInputType | true
  _avg?: ProductoAvgAggregateInputType
  _sum?: ProductoSumAggregateInputType
  _min?: ProductoMinAggregateInputType
  _max?: ProductoMaxAggregateInputType
}

export type ProductoGroupByOutputType = {
  id: number
  nombre: string
  descripcion: string | null
  createdAt: Date
  updatedAt: Date
  _count: ProductoCountAggregateOutputType | null
  _avg: ProductoAvgAggregateOutputType | null
  _sum: ProductoSumAggregateOutputType | null
  _min: ProductoMinAggregateOutputType | null
  _max: ProductoMaxAggregateOutputType | null
}

type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProductoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProductoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProductoGroupByOutputType[P]>
      }
    >
  > 



export type ProductoWhereInput = {
  AND?: Prisma.ProductoWhereInput | Prisma.ProductoWhereInput[]
  OR?: Prisma.ProductoWhereInput[]
  NOT?: Prisma.ProductoWhereInput | Prisma.ProductoWhereInput[]
  id?: Prisma.IntFilter<"Producto"> | number
  nombre?: Prisma.StringFilter<"Producto"> | string
  descripcion?: Prisma.StringNullableFilter<"Producto"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Producto"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Producto"> | Date | string
}

export type ProductoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  nombre?: Prisma.SortOrder
  descripcion?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _relevance?: Prisma.ProductoOrderByRelevanceInput
}

export type ProductoWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ProductoWhereInput | Prisma.ProductoWhereInput[]
  OR?: Prisma.ProductoWhereInput[]
  NOT?: Prisma.ProductoWhereInput | Prisma.ProductoWhereInput[]
  nombre?: Prisma.StringFilter<"Producto"> | string
  descripcion?: Prisma.StringNullableFilter<"Producto"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Producto"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Producto"> | Date | string
}, "id">

export type ProductoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  nombre?: Prisma.SortOrder
  descripcion?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProductoCountOrderByAggregateInput
  _avg?: Prisma.ProductoAvgOrderByAggregateInput
  _max?: Prisma.ProductoMaxOrderByAggregateInput
  _min?: Prisma.ProductoMinOrderByAggregateInput
  _sum?: Prisma.ProductoSumOrderByAggregateInput
}

export type ProductoScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProductoScalarWhereWithAggregatesInput | Prisma.ProductoScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProductoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProductoScalarWhereWithAggregatesInput | Prisma.ProductoScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Producto"> | number
  nombre?: Prisma.StringWithAggregatesFilter<"Producto"> | string
  descripcion?: Prisma.StringNullableWithAggregatesFilter<"Producto"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Producto"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Producto"> | Date | string
}

export type ProductoCreateInput = {
  nombre: string
  descripcion?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProductoUncheckedCreateInput = {
  id?: number
  nombre: string
  descripcion?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProductoUpdateInput = {
  nombre?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductoUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  nombre?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductoCreateManyInput = {
  id?: number
  nombre: string
  descripcion?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProductoUpdateManyMutationInput = {
  nombre?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductoUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  nombre?: Prisma.StringFieldUpdateOperationsInput | string
  descripcion?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductoOrderByRelevanceInput = {
  fields: Prisma.ProductoOrderByRelevanceFieldEnum | Prisma.ProductoOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type ProductoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nombre?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductoAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type ProductoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nombre?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  nombre?: Prisma.SortOrder
  descripcion?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductoSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}



export type ProductoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  nombre?: boolean
  descripcion?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["producto"]>



export type ProductoSelectScalar = {
  id?: boolean
  nombre?: boolean
  descripcion?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProductoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "nombre" | "descripcion" | "createdAt" | "updatedAt", ExtArgs["result"]["producto"]>

export type $ProductoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Producto"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    nombre: string
    descripcion: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["producto"]>
  composites: {}
}

export type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProductoPayload, S>

export type ProductoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProductoCountAggregateInputType | true
  }

export interface ProductoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
  /**
   * Find zero or one Producto that matches the filter.
   * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
   * @example
   * // Get one Producto
   * const producto = await prisma.producto.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProductoFindUniqueArgs>(args: Prisma.SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
   * @example
   * // Get one Producto
   * const producto = await prisma.producto.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Producto that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
   * @example
   * // Get one Producto
   * const producto = await prisma.producto.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProductoFindFirstArgs>(args?: Prisma.SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Producto that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
   * @example
   * // Get one Producto
   * const producto = await prisma.producto.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Productos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Productos
   * const productos = await prisma.producto.findMany()
   * 
   * // Get first 10 Productos
   * const productos = await prisma.producto.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const productoWithIdOnly = await prisma.producto.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProductoFindManyArgs>(args?: Prisma.SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Producto.
   * @param {ProductoCreateArgs} args - Arguments to create a Producto.
   * @example
   * // Create one Producto
   * const Producto = await prisma.producto.create({
   *   data: {
   *     // ... data to create a Producto
   *   }
   * })
   * 
   */
  create<T extends ProductoCreateArgs>(args: Prisma.SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Productos.
   * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
   * @example
   * // Create many Productos
   * const producto = await prisma.producto.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProductoCreateManyArgs>(args?: Prisma.SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Producto.
   * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
   * @example
   * // Delete one Producto
   * const Producto = await prisma.producto.delete({
   *   where: {
   *     // ... filter to delete one Producto
   *   }
   * })
   * 
   */
  delete<T extends ProductoDeleteArgs>(args: Prisma.SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Producto.
   * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
   * @example
   * // Update one Producto
   * const producto = await prisma.producto.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProductoUpdateArgs>(args: Prisma.SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Productos.
   * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
   * @example
   * // Delete a few Productos
   * const { count } = await prisma.producto.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProductoDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Productos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Productos
   * const producto = await prisma.producto.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProductoUpdateManyArgs>(args: Prisma.SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Producto.
   * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
   * @example
   * // Update or create a Producto
   * const producto = await prisma.producto.upsert({
   *   create: {
   *     // ... data to create a Producto
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Producto we want to update
   *   }
   * })
   */
  upsert<T extends ProductoUpsertArgs>(args: Prisma.SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma.Prisma__ProductoClient<runtime.Types.Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Productos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
   * @example
   * // Count the number of Productos
   * const count = await prisma.producto.count({
   *   where: {
   *     // ... the filter for the Productos we want to count
   *   }
   * })
  **/
  count<T extends ProductoCountArgs>(
    args?: Prisma.Subset<T, ProductoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProductoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Producto.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProductoAggregateArgs>(args: Prisma.Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

  /**
   * Group by Producto.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProductoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProductoGroupByArgs['orderBy'] }
      : { orderBy?: ProductoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Producto model
 */
readonly fields: ProductoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Producto.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Producto model
 */
export interface ProductoFieldRefs {
  readonly id: Prisma.FieldRef<"Producto", 'Int'>
  readonly nombre: Prisma.FieldRef<"Producto", 'String'>
  readonly descripcion: Prisma.FieldRef<"Producto", 'String'>
  readonly createdAt: Prisma.FieldRef<"Producto", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Producto", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Producto findUnique
 */
export type ProductoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * Filter, which Producto to fetch.
   */
  where: Prisma.ProductoWhereUniqueInput
}

/**
 * Producto findUniqueOrThrow
 */
export type ProductoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * Filter, which Producto to fetch.
   */
  where: Prisma.ProductoWhereUniqueInput
}

/**
 * Producto findFirst
 */
export type ProductoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * Filter, which Producto to fetch.
   */
  where?: Prisma.ProductoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Productos to fetch.
   */
  orderBy?: Prisma.ProductoOrderByWithRelationInput | Prisma.ProductoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Productos.
   */
  cursor?: Prisma.ProductoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Productos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Productos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Productos.
   */
  distinct?: Prisma.ProductoScalarFieldEnum | Prisma.ProductoScalarFieldEnum[]
}

/**
 * Producto findFirstOrThrow
 */
export type ProductoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * Filter, which Producto to fetch.
   */
  where?: Prisma.ProductoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Productos to fetch.
   */
  orderBy?: Prisma.ProductoOrderByWithRelationInput | Prisma.ProductoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Productos.
   */
  cursor?: Prisma.ProductoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Productos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Productos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Productos.
   */
  distinct?: Prisma.ProductoScalarFieldEnum | Prisma.ProductoScalarFieldEnum[]
}

/**
 * Producto findMany
 */
export type ProductoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * Filter, which Productos to fetch.
   */
  where?: Prisma.ProductoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Productos to fetch.
   */
  orderBy?: Prisma.ProductoOrderByWithRelationInput | Prisma.ProductoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Productos.
   */
  cursor?: Prisma.ProductoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Productos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Productos.
   */
  skip?: number
  distinct?: Prisma.ProductoScalarFieldEnum | Prisma.ProductoScalarFieldEnum[]
}

/**
 * Producto create
 */
export type ProductoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * The data needed to create a Producto.
   */
  data: Prisma.XOR<Prisma.ProductoCreateInput, Prisma.ProductoUncheckedCreateInput>
}

/**
 * Producto createMany
 */
export type ProductoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Productos.
   */
  data: Prisma.ProductoCreateManyInput | Prisma.ProductoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Producto update
 */
export type ProductoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * The data needed to update a Producto.
   */
  data: Prisma.XOR<Prisma.ProductoUpdateInput, Prisma.ProductoUncheckedUpdateInput>
  /**
   * Choose, which Producto to update.
   */
  where: Prisma.ProductoWhereUniqueInput
}

/**
 * Producto updateMany
 */
export type ProductoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Productos.
   */
  data: Prisma.XOR<Prisma.ProductoUpdateManyMutationInput, Prisma.ProductoUncheckedUpdateManyInput>
  /**
   * Filter which Productos to update
   */
  where?: Prisma.ProductoWhereInput
  /**
   * Limit how many Productos to update.
   */
  limit?: number
}

/**
 * Producto upsert
 */
export type ProductoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * The filter to search for the Producto to update in case it exists.
   */
  where: Prisma.ProductoWhereUniqueInput
  /**
   * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
   */
  create: Prisma.XOR<Prisma.ProductoCreateInput, Prisma.ProductoUncheckedCreateInput>
  /**
   * In case the Producto was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProductoUpdateInput, Prisma.ProductoUncheckedUpdateInput>
}

/**
 * Producto delete
 */
export type ProductoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
  /**
   * Filter which Producto to delete.
   */
  where: Prisma.ProductoWhereUniqueInput
}

/**
 * Producto deleteMany
 */
export type ProductoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Productos to delete
   */
  where?: Prisma.ProductoWhereInput
  /**
   * Limit how many Productos to delete.
   */
  limit?: number
}

/**
 * Producto without action
 */
export type ProductoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Producto
   */
  select?: Prisma.ProductoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Producto
   */
  omit?: Prisma.ProductoOmit<ExtArgs> | null
}
