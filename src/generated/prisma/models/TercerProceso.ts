
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `TercerProceso` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model TercerProceso
 * 
 */
export type TercerProcesoModel = runtime.Types.Result.DefaultSelection<Prisma.$TercerProcesoPayload>

export type AggregateTercerProceso = {
  _count: TercerProcesoCountAggregateOutputType | null
  _avg: TercerProcesoAvgAggregateOutputType | null
  _sum: TercerProcesoSumAggregateOutputType | null
  _min: TercerProcesoMinAggregateOutputType | null
  _max: TercerProcesoMaxAggregateOutputType | null
}

export type TercerProcesoAvgAggregateOutputType = {
  id: number | null
  demoraId: number | null
}

export type TercerProcesoSumAggregateOutputType = {
  id: number | null
  demoraId: number | null
}

export type TercerProcesoMinAggregateOutputType = {
  id: number | null
  demoraId: number | null
  basculaSalida: string | null
  pesadorSalida: string | null
  tiempoLlegadaBascula: string | null
  llegadaBasculaObservaciones: string | null
  tiempoEntradaBascula: string | null
  entradaBasculaObservaciones: string | null
  tiempoSalidaBascula: string | null
  salidaBasculaObservaciones: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TercerProcesoMaxAggregateOutputType = {
  id: number | null
  demoraId: number | null
  basculaSalida: string | null
  pesadorSalida: string | null
  tiempoLlegadaBascula: string | null
  llegadaBasculaObservaciones: string | null
  tiempoEntradaBascula: string | null
  entradaBasculaObservaciones: string | null
  tiempoSalidaBascula: string | null
  salidaBasculaObservaciones: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TercerProcesoCountAggregateOutputType = {
  id: number
  demoraId: number
  basculaSalida: number
  pesadorSalida: number
  tiempoLlegadaBascula: number
  llegadaBasculaObservaciones: number
  tiempoEntradaBascula: number
  entradaBasculaObservaciones: number
  tiempoSalidaBascula: number
  salidaBasculaObservaciones: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type TercerProcesoAvgAggregateInputType = {
  id?: true
  demoraId?: true
}

export type TercerProcesoSumAggregateInputType = {
  id?: true
  demoraId?: true
}

export type TercerProcesoMinAggregateInputType = {
  id?: true
  demoraId?: true
  basculaSalida?: true
  pesadorSalida?: true
  tiempoLlegadaBascula?: true
  llegadaBasculaObservaciones?: true
  tiempoEntradaBascula?: true
  entradaBasculaObservaciones?: true
  tiempoSalidaBascula?: true
  salidaBasculaObservaciones?: true
  createdAt?: true
  updatedAt?: true
}

export type TercerProcesoMaxAggregateInputType = {
  id?: true
  demoraId?: true
  basculaSalida?: true
  pesadorSalida?: true
  tiempoLlegadaBascula?: true
  llegadaBasculaObservaciones?: true
  tiempoEntradaBascula?: true
  entradaBasculaObservaciones?: true
  tiempoSalidaBascula?: true
  salidaBasculaObservaciones?: true
  createdAt?: true
  updatedAt?: true
}

export type TercerProcesoCountAggregateInputType = {
  id?: true
  demoraId?: true
  basculaSalida?: true
  pesadorSalida?: true
  tiempoLlegadaBascula?: true
  llegadaBasculaObservaciones?: true
  tiempoEntradaBascula?: true
  entradaBasculaObservaciones?: true
  tiempoSalidaBascula?: true
  salidaBasculaObservaciones?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type TercerProcesoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TercerProceso to aggregate.
   */
  where?: Prisma.TercerProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TercerProcesos to fetch.
   */
  orderBy?: Prisma.TercerProcesoOrderByWithRelationInput | Prisma.TercerProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TercerProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TercerProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TercerProcesos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TercerProcesos
  **/
  _count?: true | TercerProcesoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TercerProcesoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TercerProcesoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TercerProcesoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TercerProcesoMaxAggregateInputType
}

export type GetTercerProcesoAggregateType<T extends TercerProcesoAggregateArgs> = {
      [P in keyof T & keyof AggregateTercerProceso]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTercerProceso[P]>
    : Prisma.GetScalarType<T[P], AggregateTercerProceso[P]>
}




export type TercerProcesoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TercerProcesoWhereInput
  orderBy?: Prisma.TercerProcesoOrderByWithAggregationInput | Prisma.TercerProcesoOrderByWithAggregationInput[]
  by: Prisma.TercerProcesoScalarFieldEnum[] | Prisma.TercerProcesoScalarFieldEnum
  having?: Prisma.TercerProcesoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TercerProcesoCountAggregateInputType | true
  _avg?: TercerProcesoAvgAggregateInputType
  _sum?: TercerProcesoSumAggregateInputType
  _min?: TercerProcesoMinAggregateInputType
  _max?: TercerProcesoMaxAggregateInputType
}

export type TercerProcesoGroupByOutputType = {
  id: number
  demoraId: number
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula: string | null
  llegadaBasculaObservaciones: string | null
  tiempoEntradaBascula: string | null
  entradaBasculaObservaciones: string | null
  tiempoSalidaBascula: string | null
  salidaBasculaObservaciones: string | null
  createdAt: Date
  updatedAt: Date
  _count: TercerProcesoCountAggregateOutputType | null
  _avg: TercerProcesoAvgAggregateOutputType | null
  _sum: TercerProcesoSumAggregateOutputType | null
  _min: TercerProcesoMinAggregateOutputType | null
  _max: TercerProcesoMaxAggregateOutputType | null
}

type GetTercerProcesoGroupByPayload<T extends TercerProcesoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TercerProcesoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TercerProcesoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TercerProcesoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TercerProcesoGroupByOutputType[P]>
      }
    >
  > 



export type TercerProcesoWhereInput = {
  AND?: Prisma.TercerProcesoWhereInput | Prisma.TercerProcesoWhereInput[]
  OR?: Prisma.TercerProcesoWhereInput[]
  NOT?: Prisma.TercerProcesoWhereInput | Prisma.TercerProcesoWhereInput[]
  id?: Prisma.IntFilter<"TercerProceso"> | number
  demoraId?: Prisma.IntFilter<"TercerProceso"> | number
  basculaSalida?: Prisma.StringFilter<"TercerProceso"> | string
  pesadorSalida?: Prisma.StringFilter<"TercerProceso"> | string
  tiempoLlegadaBascula?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  llegadaBasculaObservaciones?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  tiempoEntradaBascula?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  entradaBasculaObservaciones?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  tiempoSalidaBascula?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  salidaBasculaObservaciones?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  createdAt?: Prisma.DateTimeFilter<"TercerProceso"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TercerProceso"> | Date | string
  demora?: Prisma.XOR<Prisma.DemoraScalarRelationFilter, Prisma.DemoraWhereInput>
  vueltas?: Prisma.VueltasListRelationFilter
}

export type TercerProcesoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  basculaSalida?: Prisma.SortOrder
  pesadorSalida?: Prisma.SortOrder
  tiempoLlegadaBascula?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaBasculaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoEntradaBascula?: Prisma.SortOrderInput | Prisma.SortOrder
  entradaBasculaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoSalidaBascula?: Prisma.SortOrderInput | Prisma.SortOrder
  salidaBasculaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  demora?: Prisma.DemoraOrderByWithRelationInput
  vueltas?: Prisma.VueltasOrderByRelationAggregateInput
  _relevance?: Prisma.TercerProcesoOrderByRelevanceInput
}

export type TercerProcesoWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  demoraId?: number
  AND?: Prisma.TercerProcesoWhereInput | Prisma.TercerProcesoWhereInput[]
  OR?: Prisma.TercerProcesoWhereInput[]
  NOT?: Prisma.TercerProcesoWhereInput | Prisma.TercerProcesoWhereInput[]
  basculaSalida?: Prisma.StringFilter<"TercerProceso"> | string
  pesadorSalida?: Prisma.StringFilter<"TercerProceso"> | string
  tiempoLlegadaBascula?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  llegadaBasculaObservaciones?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  tiempoEntradaBascula?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  entradaBasculaObservaciones?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  tiempoSalidaBascula?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  salidaBasculaObservaciones?: Prisma.StringNullableFilter<"TercerProceso"> | string | null
  createdAt?: Prisma.DateTimeFilter<"TercerProceso"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TercerProceso"> | Date | string
  demora?: Prisma.XOR<Prisma.DemoraScalarRelationFilter, Prisma.DemoraWhereInput>
  vueltas?: Prisma.VueltasListRelationFilter
}, "id" | "demoraId">

export type TercerProcesoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  basculaSalida?: Prisma.SortOrder
  pesadorSalida?: Prisma.SortOrder
  tiempoLlegadaBascula?: Prisma.SortOrderInput | Prisma.SortOrder
  llegadaBasculaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoEntradaBascula?: Prisma.SortOrderInput | Prisma.SortOrder
  entradaBasculaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  tiempoSalidaBascula?: Prisma.SortOrderInput | Prisma.SortOrder
  salidaBasculaObservaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.TercerProcesoCountOrderByAggregateInput
  _avg?: Prisma.TercerProcesoAvgOrderByAggregateInput
  _max?: Prisma.TercerProcesoMaxOrderByAggregateInput
  _min?: Prisma.TercerProcesoMinOrderByAggregateInput
  _sum?: Prisma.TercerProcesoSumOrderByAggregateInput
}

export type TercerProcesoScalarWhereWithAggregatesInput = {
  AND?: Prisma.TercerProcesoScalarWhereWithAggregatesInput | Prisma.TercerProcesoScalarWhereWithAggregatesInput[]
  OR?: Prisma.TercerProcesoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TercerProcesoScalarWhereWithAggregatesInput | Prisma.TercerProcesoScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"TercerProceso"> | number
  demoraId?: Prisma.IntWithAggregatesFilter<"TercerProceso"> | number
  basculaSalida?: Prisma.StringWithAggregatesFilter<"TercerProceso"> | string
  pesadorSalida?: Prisma.StringWithAggregatesFilter<"TercerProceso"> | string
  tiempoLlegadaBascula?: Prisma.StringNullableWithAggregatesFilter<"TercerProceso"> | string | null
  llegadaBasculaObservaciones?: Prisma.StringNullableWithAggregatesFilter<"TercerProceso"> | string | null
  tiempoEntradaBascula?: Prisma.StringNullableWithAggregatesFilter<"TercerProceso"> | string | null
  entradaBasculaObservaciones?: Prisma.StringNullableWithAggregatesFilter<"TercerProceso"> | string | null
  tiempoSalidaBascula?: Prisma.StringNullableWithAggregatesFilter<"TercerProceso"> | string | null
  salidaBasculaObservaciones?: Prisma.StringNullableWithAggregatesFilter<"TercerProceso"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TercerProceso"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"TercerProceso"> | Date | string
}

export type TercerProcesoCreateInput = {
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  demora: Prisma.DemoraCreateNestedOneWithoutTercerProcesoInput
  vueltas?: Prisma.VueltasCreateNestedManyWithoutTercerProcesoInput
}

export type TercerProcesoUncheckedCreateInput = {
  id?: number
  demoraId: number
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  vueltas?: Prisma.VueltasUncheckedCreateNestedManyWithoutTercerProcesoInput
}

export type TercerProcesoUpdateInput = {
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demora?: Prisma.DemoraUpdateOneRequiredWithoutTercerProcesoNestedInput
  vueltas?: Prisma.VueltasUpdateManyWithoutTercerProcesoNestedInput
}

export type TercerProcesoUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  demoraId?: Prisma.IntFieldUpdateOperationsInput | number
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vueltas?: Prisma.VueltasUncheckedUpdateManyWithoutTercerProcesoNestedInput
}

export type TercerProcesoCreateManyInput = {
  id?: number
  demoraId: number
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TercerProcesoUpdateManyMutationInput = {
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TercerProcesoUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  demoraId?: Prisma.IntFieldUpdateOperationsInput | number
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TercerProcesoNullableScalarRelationFilter = {
  is?: Prisma.TercerProcesoWhereInput | null
  isNot?: Prisma.TercerProcesoWhereInput | null
}

export type TercerProcesoOrderByRelevanceInput = {
  fields: Prisma.TercerProcesoOrderByRelevanceFieldEnum | Prisma.TercerProcesoOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type TercerProcesoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  basculaSalida?: Prisma.SortOrder
  pesadorSalida?: Prisma.SortOrder
  tiempoLlegadaBascula?: Prisma.SortOrder
  llegadaBasculaObservaciones?: Prisma.SortOrder
  tiempoEntradaBascula?: Prisma.SortOrder
  entradaBasculaObservaciones?: Prisma.SortOrder
  tiempoSalidaBascula?: Prisma.SortOrder
  salidaBasculaObservaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TercerProcesoAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
}

export type TercerProcesoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  basculaSalida?: Prisma.SortOrder
  pesadorSalida?: Prisma.SortOrder
  tiempoLlegadaBascula?: Prisma.SortOrder
  llegadaBasculaObservaciones?: Prisma.SortOrder
  tiempoEntradaBascula?: Prisma.SortOrder
  entradaBasculaObservaciones?: Prisma.SortOrder
  tiempoSalidaBascula?: Prisma.SortOrder
  salidaBasculaObservaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TercerProcesoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
  basculaSalida?: Prisma.SortOrder
  pesadorSalida?: Prisma.SortOrder
  tiempoLlegadaBascula?: Prisma.SortOrder
  llegadaBasculaObservaciones?: Prisma.SortOrder
  tiempoEntradaBascula?: Prisma.SortOrder
  entradaBasculaObservaciones?: Prisma.SortOrder
  tiempoSalidaBascula?: Prisma.SortOrder
  salidaBasculaObservaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TercerProcesoSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  demoraId?: Prisma.SortOrder
}

export type TercerProcesoScalarRelationFilter = {
  is?: Prisma.TercerProcesoWhereInput
  isNot?: Prisma.TercerProcesoWhereInput
}

export type TercerProcesoCreateNestedOneWithoutDemoraInput = {
  create?: Prisma.XOR<Prisma.TercerProcesoCreateWithoutDemoraInput, Prisma.TercerProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.TercerProcesoCreateOrConnectWithoutDemoraInput
  connect?: Prisma.TercerProcesoWhereUniqueInput
}

export type TercerProcesoUncheckedCreateNestedOneWithoutDemoraInput = {
  create?: Prisma.XOR<Prisma.TercerProcesoCreateWithoutDemoraInput, Prisma.TercerProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.TercerProcesoCreateOrConnectWithoutDemoraInput
  connect?: Prisma.TercerProcesoWhereUniqueInput
}

export type TercerProcesoUpdateOneWithoutDemoraNestedInput = {
  create?: Prisma.XOR<Prisma.TercerProcesoCreateWithoutDemoraInput, Prisma.TercerProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.TercerProcesoCreateOrConnectWithoutDemoraInput
  upsert?: Prisma.TercerProcesoUpsertWithoutDemoraInput
  disconnect?: Prisma.TercerProcesoWhereInput | boolean
  delete?: Prisma.TercerProcesoWhereInput | boolean
  connect?: Prisma.TercerProcesoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TercerProcesoUpdateToOneWithWhereWithoutDemoraInput, Prisma.TercerProcesoUpdateWithoutDemoraInput>, Prisma.TercerProcesoUncheckedUpdateWithoutDemoraInput>
}

export type TercerProcesoUncheckedUpdateOneWithoutDemoraNestedInput = {
  create?: Prisma.XOR<Prisma.TercerProcesoCreateWithoutDemoraInput, Prisma.TercerProcesoUncheckedCreateWithoutDemoraInput>
  connectOrCreate?: Prisma.TercerProcesoCreateOrConnectWithoutDemoraInput
  upsert?: Prisma.TercerProcesoUpsertWithoutDemoraInput
  disconnect?: Prisma.TercerProcesoWhereInput | boolean
  delete?: Prisma.TercerProcesoWhereInput | boolean
  connect?: Prisma.TercerProcesoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TercerProcesoUpdateToOneWithWhereWithoutDemoraInput, Prisma.TercerProcesoUpdateWithoutDemoraInput>, Prisma.TercerProcesoUncheckedUpdateWithoutDemoraInput>
}

export type TercerProcesoCreateNestedOneWithoutVueltasInput = {
  create?: Prisma.XOR<Prisma.TercerProcesoCreateWithoutVueltasInput, Prisma.TercerProcesoUncheckedCreateWithoutVueltasInput>
  connectOrCreate?: Prisma.TercerProcesoCreateOrConnectWithoutVueltasInput
  connect?: Prisma.TercerProcesoWhereUniqueInput
}

export type TercerProcesoUpdateOneRequiredWithoutVueltasNestedInput = {
  create?: Prisma.XOR<Prisma.TercerProcesoCreateWithoutVueltasInput, Prisma.TercerProcesoUncheckedCreateWithoutVueltasInput>
  connectOrCreate?: Prisma.TercerProcesoCreateOrConnectWithoutVueltasInput
  upsert?: Prisma.TercerProcesoUpsertWithoutVueltasInput
  connect?: Prisma.TercerProcesoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TercerProcesoUpdateToOneWithWhereWithoutVueltasInput, Prisma.TercerProcesoUpdateWithoutVueltasInput>, Prisma.TercerProcesoUncheckedUpdateWithoutVueltasInput>
}

export type TercerProcesoCreateWithoutDemoraInput = {
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  vueltas?: Prisma.VueltasCreateNestedManyWithoutTercerProcesoInput
}

export type TercerProcesoUncheckedCreateWithoutDemoraInput = {
  id?: number
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  vueltas?: Prisma.VueltasUncheckedCreateNestedManyWithoutTercerProcesoInput
}

export type TercerProcesoCreateOrConnectWithoutDemoraInput = {
  where: Prisma.TercerProcesoWhereUniqueInput
  create: Prisma.XOR<Prisma.TercerProcesoCreateWithoutDemoraInput, Prisma.TercerProcesoUncheckedCreateWithoutDemoraInput>
}

export type TercerProcesoUpsertWithoutDemoraInput = {
  update: Prisma.XOR<Prisma.TercerProcesoUpdateWithoutDemoraInput, Prisma.TercerProcesoUncheckedUpdateWithoutDemoraInput>
  create: Prisma.XOR<Prisma.TercerProcesoCreateWithoutDemoraInput, Prisma.TercerProcesoUncheckedCreateWithoutDemoraInput>
  where?: Prisma.TercerProcesoWhereInput
}

export type TercerProcesoUpdateToOneWithWhereWithoutDemoraInput = {
  where?: Prisma.TercerProcesoWhereInput
  data: Prisma.XOR<Prisma.TercerProcesoUpdateWithoutDemoraInput, Prisma.TercerProcesoUncheckedUpdateWithoutDemoraInput>
}

export type TercerProcesoUpdateWithoutDemoraInput = {
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vueltas?: Prisma.VueltasUpdateManyWithoutTercerProcesoNestedInput
}

export type TercerProcesoUncheckedUpdateWithoutDemoraInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vueltas?: Prisma.VueltasUncheckedUpdateManyWithoutTercerProcesoNestedInput
}

export type TercerProcesoCreateWithoutVueltasInput = {
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  demora: Prisma.DemoraCreateNestedOneWithoutTercerProcesoInput
}

export type TercerProcesoUncheckedCreateWithoutVueltasInput = {
  id?: number
  demoraId: number
  basculaSalida: string
  pesadorSalida: string
  tiempoLlegadaBascula?: string | null
  llegadaBasculaObservaciones?: string | null
  tiempoEntradaBascula?: string | null
  entradaBasculaObservaciones?: string | null
  tiempoSalidaBascula?: string | null
  salidaBasculaObservaciones?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TercerProcesoCreateOrConnectWithoutVueltasInput = {
  where: Prisma.TercerProcesoWhereUniqueInput
  create: Prisma.XOR<Prisma.TercerProcesoCreateWithoutVueltasInput, Prisma.TercerProcesoUncheckedCreateWithoutVueltasInput>
}

export type TercerProcesoUpsertWithoutVueltasInput = {
  update: Prisma.XOR<Prisma.TercerProcesoUpdateWithoutVueltasInput, Prisma.TercerProcesoUncheckedUpdateWithoutVueltasInput>
  create: Prisma.XOR<Prisma.TercerProcesoCreateWithoutVueltasInput, Prisma.TercerProcesoUncheckedCreateWithoutVueltasInput>
  where?: Prisma.TercerProcesoWhereInput
}

export type TercerProcesoUpdateToOneWithWhereWithoutVueltasInput = {
  where?: Prisma.TercerProcesoWhereInput
  data: Prisma.XOR<Prisma.TercerProcesoUpdateWithoutVueltasInput, Prisma.TercerProcesoUncheckedUpdateWithoutVueltasInput>
}

export type TercerProcesoUpdateWithoutVueltasInput = {
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  demora?: Prisma.DemoraUpdateOneRequiredWithoutTercerProcesoNestedInput
}

export type TercerProcesoUncheckedUpdateWithoutVueltasInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  demoraId?: Prisma.IntFieldUpdateOperationsInput | number
  basculaSalida?: Prisma.StringFieldUpdateOperationsInput | string
  pesadorSalida?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoLlegadaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  llegadaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoEntradaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  entradaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tiempoSalidaBascula?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  salidaBasculaObservaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type TercerProcesoCountOutputType
 */

export type TercerProcesoCountOutputType = {
  vueltas: number
}

export type TercerProcesoCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vueltas?: boolean | TercerProcesoCountOutputTypeCountVueltasArgs
}

/**
 * TercerProcesoCountOutputType without action
 */
export type TercerProcesoCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProcesoCountOutputType
   */
  select?: Prisma.TercerProcesoCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TercerProcesoCountOutputType without action
 */
export type TercerProcesoCountOutputTypeCountVueltasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.VueltasWhereInput
}


export type TercerProcesoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  demoraId?: boolean
  basculaSalida?: boolean
  pesadorSalida?: boolean
  tiempoLlegadaBascula?: boolean
  llegadaBasculaObservaciones?: boolean
  tiempoEntradaBascula?: boolean
  entradaBasculaObservaciones?: boolean
  tiempoSalidaBascula?: boolean
  salidaBasculaObservaciones?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  demora?: boolean | Prisma.DemoraDefaultArgs<ExtArgs>
  vueltas?: boolean | Prisma.TercerProceso$vueltasArgs<ExtArgs>
  _count?: boolean | Prisma.TercerProcesoCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["tercerProceso"]>



export type TercerProcesoSelectScalar = {
  id?: boolean
  demoraId?: boolean
  basculaSalida?: boolean
  pesadorSalida?: boolean
  tiempoLlegadaBascula?: boolean
  llegadaBasculaObservaciones?: boolean
  tiempoEntradaBascula?: boolean
  entradaBasculaObservaciones?: boolean
  tiempoSalidaBascula?: boolean
  salidaBasculaObservaciones?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type TercerProcesoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "demoraId" | "basculaSalida" | "pesadorSalida" | "tiempoLlegadaBascula" | "llegadaBasculaObservaciones" | "tiempoEntradaBascula" | "entradaBasculaObservaciones" | "tiempoSalidaBascula" | "salidaBasculaObservaciones" | "createdAt" | "updatedAt", ExtArgs["result"]["tercerProceso"]>
export type TercerProcesoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  demora?: boolean | Prisma.DemoraDefaultArgs<ExtArgs>
  vueltas?: boolean | Prisma.TercerProceso$vueltasArgs<ExtArgs>
  _count?: boolean | Prisma.TercerProcesoCountOutputTypeDefaultArgs<ExtArgs>
}

export type $TercerProcesoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TercerProceso"
  objects: {
    demora: Prisma.$DemoraPayload<ExtArgs>
    vueltas: Prisma.$VueltasPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    demoraId: number
    basculaSalida: string
    pesadorSalida: string
    tiempoLlegadaBascula: string | null
    llegadaBasculaObservaciones: string | null
    tiempoEntradaBascula: string | null
    entradaBasculaObservaciones: string | null
    tiempoSalidaBascula: string | null
    salidaBasculaObservaciones: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["tercerProceso"]>
  composites: {}
}

export type TercerProcesoGetPayload<S extends boolean | null | undefined | TercerProcesoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload, S>

export type TercerProcesoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TercerProcesoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TercerProcesoCountAggregateInputType | true
  }

export interface TercerProcesoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TercerProceso'], meta: { name: 'TercerProceso' } }
  /**
   * Find zero or one TercerProceso that matches the filter.
   * @param {TercerProcesoFindUniqueArgs} args - Arguments to find a TercerProceso
   * @example
   * // Get one TercerProceso
   * const tercerProceso = await prisma.tercerProceso.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TercerProcesoFindUniqueArgs>(args: Prisma.SelectSubset<T, TercerProcesoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TercerProceso that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TercerProcesoFindUniqueOrThrowArgs} args - Arguments to find a TercerProceso
   * @example
   * // Get one TercerProceso
   * const tercerProceso = await prisma.tercerProceso.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TercerProcesoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TercerProcesoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TercerProceso that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoFindFirstArgs} args - Arguments to find a TercerProceso
   * @example
   * // Get one TercerProceso
   * const tercerProceso = await prisma.tercerProceso.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TercerProcesoFindFirstArgs>(args?: Prisma.SelectSubset<T, TercerProcesoFindFirstArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TercerProceso that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoFindFirstOrThrowArgs} args - Arguments to find a TercerProceso
   * @example
   * // Get one TercerProceso
   * const tercerProceso = await prisma.tercerProceso.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TercerProcesoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TercerProcesoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TercerProcesos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TercerProcesos
   * const tercerProcesos = await prisma.tercerProceso.findMany()
   * 
   * // Get first 10 TercerProcesos
   * const tercerProcesos = await prisma.tercerProceso.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const tercerProcesoWithIdOnly = await prisma.tercerProceso.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TercerProcesoFindManyArgs>(args?: Prisma.SelectSubset<T, TercerProcesoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TercerProceso.
   * @param {TercerProcesoCreateArgs} args - Arguments to create a TercerProceso.
   * @example
   * // Create one TercerProceso
   * const TercerProceso = await prisma.tercerProceso.create({
   *   data: {
   *     // ... data to create a TercerProceso
   *   }
   * })
   * 
   */
  create<T extends TercerProcesoCreateArgs>(args: Prisma.SelectSubset<T, TercerProcesoCreateArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TercerProcesos.
   * @param {TercerProcesoCreateManyArgs} args - Arguments to create many TercerProcesos.
   * @example
   * // Create many TercerProcesos
   * const tercerProceso = await prisma.tercerProceso.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TercerProcesoCreateManyArgs>(args?: Prisma.SelectSubset<T, TercerProcesoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a TercerProceso.
   * @param {TercerProcesoDeleteArgs} args - Arguments to delete one TercerProceso.
   * @example
   * // Delete one TercerProceso
   * const TercerProceso = await prisma.tercerProceso.delete({
   *   where: {
   *     // ... filter to delete one TercerProceso
   *   }
   * })
   * 
   */
  delete<T extends TercerProcesoDeleteArgs>(args: Prisma.SelectSubset<T, TercerProcesoDeleteArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TercerProceso.
   * @param {TercerProcesoUpdateArgs} args - Arguments to update one TercerProceso.
   * @example
   * // Update one TercerProceso
   * const tercerProceso = await prisma.tercerProceso.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TercerProcesoUpdateArgs>(args: Prisma.SelectSubset<T, TercerProcesoUpdateArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TercerProcesos.
   * @param {TercerProcesoDeleteManyArgs} args - Arguments to filter TercerProcesos to delete.
   * @example
   * // Delete a few TercerProcesos
   * const { count } = await prisma.tercerProceso.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TercerProcesoDeleteManyArgs>(args?: Prisma.SelectSubset<T, TercerProcesoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TercerProcesos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TercerProcesos
   * const tercerProceso = await prisma.tercerProceso.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TercerProcesoUpdateManyArgs>(args: Prisma.SelectSubset<T, TercerProcesoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one TercerProceso.
   * @param {TercerProcesoUpsertArgs} args - Arguments to update or create a TercerProceso.
   * @example
   * // Update or create a TercerProceso
   * const tercerProceso = await prisma.tercerProceso.upsert({
   *   create: {
   *     // ... data to create a TercerProceso
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TercerProceso we want to update
   *   }
   * })
   */
  upsert<T extends TercerProcesoUpsertArgs>(args: Prisma.SelectSubset<T, TercerProcesoUpsertArgs<ExtArgs>>): Prisma.Prisma__TercerProcesoClient<runtime.Types.Result.GetResult<Prisma.$TercerProcesoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TercerProcesos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoCountArgs} args - Arguments to filter TercerProcesos to count.
   * @example
   * // Count the number of TercerProcesos
   * const count = await prisma.tercerProceso.count({
   *   where: {
   *     // ... the filter for the TercerProcesos we want to count
   *   }
   * })
  **/
  count<T extends TercerProcesoCountArgs>(
    args?: Prisma.Subset<T, TercerProcesoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TercerProcesoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TercerProceso.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TercerProcesoAggregateArgs>(args: Prisma.Subset<T, TercerProcesoAggregateArgs>): Prisma.PrismaPromise<GetTercerProcesoAggregateType<T>>

  /**
   * Group by TercerProceso.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TercerProcesoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TercerProcesoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TercerProcesoGroupByArgs['orderBy'] }
      : { orderBy?: TercerProcesoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TercerProcesoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTercerProcesoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TercerProceso model
 */
readonly fields: TercerProcesoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TercerProceso.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TercerProcesoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  demora<T extends Prisma.DemoraDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.DemoraDefaultArgs<ExtArgs>>): Prisma.Prisma__DemoraClient<runtime.Types.Result.GetResult<Prisma.$DemoraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  vueltas<T extends Prisma.TercerProceso$vueltasArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TercerProceso$vueltasArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VueltasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TercerProceso model
 */
export interface TercerProcesoFieldRefs {
  readonly id: Prisma.FieldRef<"TercerProceso", 'Int'>
  readonly demoraId: Prisma.FieldRef<"TercerProceso", 'Int'>
  readonly basculaSalida: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly pesadorSalida: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly tiempoLlegadaBascula: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly llegadaBasculaObservaciones: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly tiempoEntradaBascula: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly entradaBasculaObservaciones: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly tiempoSalidaBascula: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly salidaBasculaObservaciones: Prisma.FieldRef<"TercerProceso", 'String'>
  readonly createdAt: Prisma.FieldRef<"TercerProceso", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TercerProceso", 'DateTime'>
}
    

// Custom InputTypes
/**
 * TercerProceso findUnique
 */
export type TercerProcesoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * Filter, which TercerProceso to fetch.
   */
  where: Prisma.TercerProcesoWhereUniqueInput
}

/**
 * TercerProceso findUniqueOrThrow
 */
export type TercerProcesoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * Filter, which TercerProceso to fetch.
   */
  where: Prisma.TercerProcesoWhereUniqueInput
}

/**
 * TercerProceso findFirst
 */
export type TercerProcesoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * Filter, which TercerProceso to fetch.
   */
  where?: Prisma.TercerProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TercerProcesos to fetch.
   */
  orderBy?: Prisma.TercerProcesoOrderByWithRelationInput | Prisma.TercerProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TercerProcesos.
   */
  cursor?: Prisma.TercerProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TercerProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TercerProcesos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TercerProcesos.
   */
  distinct?: Prisma.TercerProcesoScalarFieldEnum | Prisma.TercerProcesoScalarFieldEnum[]
}

/**
 * TercerProceso findFirstOrThrow
 */
export type TercerProcesoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * Filter, which TercerProceso to fetch.
   */
  where?: Prisma.TercerProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TercerProcesos to fetch.
   */
  orderBy?: Prisma.TercerProcesoOrderByWithRelationInput | Prisma.TercerProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TercerProcesos.
   */
  cursor?: Prisma.TercerProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TercerProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TercerProcesos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TercerProcesos.
   */
  distinct?: Prisma.TercerProcesoScalarFieldEnum | Prisma.TercerProcesoScalarFieldEnum[]
}

/**
 * TercerProceso findMany
 */
export type TercerProcesoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * Filter, which TercerProcesos to fetch.
   */
  where?: Prisma.TercerProcesoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TercerProcesos to fetch.
   */
  orderBy?: Prisma.TercerProcesoOrderByWithRelationInput | Prisma.TercerProcesoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TercerProcesos.
   */
  cursor?: Prisma.TercerProcesoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TercerProcesos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TercerProcesos.
   */
  skip?: number
  distinct?: Prisma.TercerProcesoScalarFieldEnum | Prisma.TercerProcesoScalarFieldEnum[]
}

/**
 * TercerProceso create
 */
export type TercerProcesoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * The data needed to create a TercerProceso.
   */
  data: Prisma.XOR<Prisma.TercerProcesoCreateInput, Prisma.TercerProcesoUncheckedCreateInput>
}

/**
 * TercerProceso createMany
 */
export type TercerProcesoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TercerProcesos.
   */
  data: Prisma.TercerProcesoCreateManyInput | Prisma.TercerProcesoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TercerProceso update
 */
export type TercerProcesoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * The data needed to update a TercerProceso.
   */
  data: Prisma.XOR<Prisma.TercerProcesoUpdateInput, Prisma.TercerProcesoUncheckedUpdateInput>
  /**
   * Choose, which TercerProceso to update.
   */
  where: Prisma.TercerProcesoWhereUniqueInput
}

/**
 * TercerProceso updateMany
 */
export type TercerProcesoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TercerProcesos.
   */
  data: Prisma.XOR<Prisma.TercerProcesoUpdateManyMutationInput, Prisma.TercerProcesoUncheckedUpdateManyInput>
  /**
   * Filter which TercerProcesos to update
   */
  where?: Prisma.TercerProcesoWhereInput
  /**
   * Limit how many TercerProcesos to update.
   */
  limit?: number
}

/**
 * TercerProceso upsert
 */
export type TercerProcesoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * The filter to search for the TercerProceso to update in case it exists.
   */
  where: Prisma.TercerProcesoWhereUniqueInput
  /**
   * In case the TercerProceso found by the `where` argument doesn't exist, create a new TercerProceso with this data.
   */
  create: Prisma.XOR<Prisma.TercerProcesoCreateInput, Prisma.TercerProcesoUncheckedCreateInput>
  /**
   * In case the TercerProceso was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TercerProcesoUpdateInput, Prisma.TercerProcesoUncheckedUpdateInput>
}

/**
 * TercerProceso delete
 */
export type TercerProcesoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
  /**
   * Filter which TercerProceso to delete.
   */
  where: Prisma.TercerProcesoWhereUniqueInput
}

/**
 * TercerProceso deleteMany
 */
export type TercerProcesoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TercerProcesos to delete
   */
  where?: Prisma.TercerProcesoWhereInput
  /**
   * Limit how many TercerProcesos to delete.
   */
  limit?: number
}

/**
 * TercerProceso.vueltas
 */
export type TercerProceso$vueltasArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Vueltas
   */
  select?: Prisma.VueltasSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Vueltas
   */
  omit?: Prisma.VueltasOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VueltasInclude<ExtArgs> | null
  where?: Prisma.VueltasWhereInput
  orderBy?: Prisma.VueltasOrderByWithRelationInput | Prisma.VueltasOrderByWithRelationInput[]
  cursor?: Prisma.VueltasWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.VueltasScalarFieldEnum | Prisma.VueltasScalarFieldEnum[]
}

/**
 * TercerProceso without action
 */
export type TercerProcesoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TercerProceso
   */
  select?: Prisma.TercerProcesoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TercerProceso
   */
  omit?: Prisma.TercerProcesoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TercerProcesoInclude<ExtArgs> | null
}
