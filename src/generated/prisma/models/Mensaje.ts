
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Mensaje` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Mensaje
 * 
 */
export type MensajeModel = runtime.Types.Result.DefaultSelection<Prisma.$MensajePayload>

export type AggregateMensaje = {
  _count: MensajeCountAggregateOutputType | null
  _avg: MensajeAvgAggregateOutputType | null
  _sum: MensajeSumAggregateOutputType | null
  _min: MensajeMinAggregateOutputType | null
  _max: MensajeMaxAggregateOutputType | null
}

export type MensajeAvgAggregateOutputType = {
  id: number | null
  ticketId: number | null
  senderId: number | null
  receiverId: number | null
}

export type MensajeSumAggregateOutputType = {
  id: number | null
  ticketId: number | null
  senderId: number | null
  receiverId: number | null
}

export type MensajeMinAggregateOutputType = {
  id: number | null
  ticketId: number | null
  senderId: number | null
  receiverId: number | null
  text: string | null
  imageUrl: string | null
  imagenPublicId: string | null
  delivered: boolean | null
  read: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MensajeMaxAggregateOutputType = {
  id: number | null
  ticketId: number | null
  senderId: number | null
  receiverId: number | null
  text: string | null
  imageUrl: string | null
  imagenPublicId: string | null
  delivered: boolean | null
  read: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type MensajeCountAggregateOutputType = {
  id: number
  ticketId: number
  senderId: number
  receiverId: number
  text: number
  imageUrl: number
  imagenPublicId: number
  delivered: number
  read: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type MensajeAvgAggregateInputType = {
  id?: true
  ticketId?: true
  senderId?: true
  receiverId?: true
}

export type MensajeSumAggregateInputType = {
  id?: true
  ticketId?: true
  senderId?: true
  receiverId?: true
}

export type MensajeMinAggregateInputType = {
  id?: true
  ticketId?: true
  senderId?: true
  receiverId?: true
  text?: true
  imageUrl?: true
  imagenPublicId?: true
  delivered?: true
  read?: true
  createdAt?: true
  updatedAt?: true
}

export type MensajeMaxAggregateInputType = {
  id?: true
  ticketId?: true
  senderId?: true
  receiverId?: true
  text?: true
  imageUrl?: true
  imagenPublicId?: true
  delivered?: true
  read?: true
  createdAt?: true
  updatedAt?: true
}

export type MensajeCountAggregateInputType = {
  id?: true
  ticketId?: true
  senderId?: true
  receiverId?: true
  text?: true
  imageUrl?: true
  imagenPublicId?: true
  delivered?: true
  read?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type MensajeAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Mensaje to aggregate.
   */
  where?: Prisma.MensajeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Mensajes to fetch.
   */
  orderBy?: Prisma.MensajeOrderByWithRelationInput | Prisma.MensajeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.MensajeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Mensajes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Mensajes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Mensajes
  **/
  _count?: true | MensajeCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MensajeAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MensajeSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MensajeMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MensajeMaxAggregateInputType
}

export type GetMensajeAggregateType<T extends MensajeAggregateArgs> = {
      [P in keyof T & keyof AggregateMensaje]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMensaje[P]>
    : Prisma.GetScalarType<T[P], AggregateMensaje[P]>
}




export type MensajeGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MensajeWhereInput
  orderBy?: Prisma.MensajeOrderByWithAggregationInput | Prisma.MensajeOrderByWithAggregationInput[]
  by: Prisma.MensajeScalarFieldEnum[] | Prisma.MensajeScalarFieldEnum
  having?: Prisma.MensajeScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MensajeCountAggregateInputType | true
  _avg?: MensajeAvgAggregateInputType
  _sum?: MensajeSumAggregateInputType
  _min?: MensajeMinAggregateInputType
  _max?: MensajeMaxAggregateInputType
}

export type MensajeGroupByOutputType = {
  id: number
  ticketId: number
  senderId: number
  receiverId: number | null
  text: string | null
  imageUrl: string | null
  imagenPublicId: string | null
  delivered: boolean
  read: boolean
  createdAt: Date
  updatedAt: Date
  _count: MensajeCountAggregateOutputType | null
  _avg: MensajeAvgAggregateOutputType | null
  _sum: MensajeSumAggregateOutputType | null
  _min: MensajeMinAggregateOutputType | null
  _max: MensajeMaxAggregateOutputType | null
}

type GetMensajeGroupByPayload<T extends MensajeGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MensajeGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MensajeGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MensajeGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MensajeGroupByOutputType[P]>
      }
    >
  > 



export type MensajeWhereInput = {
  AND?: Prisma.MensajeWhereInput | Prisma.MensajeWhereInput[]
  OR?: Prisma.MensajeWhereInput[]
  NOT?: Prisma.MensajeWhereInput | Prisma.MensajeWhereInput[]
  id?: Prisma.IntFilter<"Mensaje"> | number
  ticketId?: Prisma.IntFilter<"Mensaje"> | number
  senderId?: Prisma.IntFilter<"Mensaje"> | number
  receiverId?: Prisma.IntNullableFilter<"Mensaje"> | number | null
  text?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  imagenPublicId?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  delivered?: Prisma.BoolFilter<"Mensaje"> | boolean
  read?: Prisma.BoolFilter<"Mensaje"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Mensaje"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Mensaje"> | Date | string
  ticket?: Prisma.XOR<Prisma.TicketScalarRelationFilter, Prisma.TicketWhereInput>
  sender?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  receiver?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}

export type MensajeOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrderInput | Prisma.SortOrder
  text?: Prisma.SortOrderInput | Prisma.SortOrder
  imageUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  imagenPublicId?: Prisma.SortOrderInput | Prisma.SortOrder
  delivered?: Prisma.SortOrder
  read?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ticket?: Prisma.TicketOrderByWithRelationInput
  sender?: Prisma.UserOrderByWithRelationInput
  receiver?: Prisma.UserOrderByWithRelationInput
  _relevance?: Prisma.MensajeOrderByRelevanceInput
}

export type MensajeWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.MensajeWhereInput | Prisma.MensajeWhereInput[]
  OR?: Prisma.MensajeWhereInput[]
  NOT?: Prisma.MensajeWhereInput | Prisma.MensajeWhereInput[]
  ticketId?: Prisma.IntFilter<"Mensaje"> | number
  senderId?: Prisma.IntFilter<"Mensaje"> | number
  receiverId?: Prisma.IntNullableFilter<"Mensaje"> | number | null
  text?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  imagenPublicId?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  delivered?: Prisma.BoolFilter<"Mensaje"> | boolean
  read?: Prisma.BoolFilter<"Mensaje"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Mensaje"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Mensaje"> | Date | string
  ticket?: Prisma.XOR<Prisma.TicketScalarRelationFilter, Prisma.TicketWhereInput>
  sender?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  receiver?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}, "id">

export type MensajeOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrderInput | Prisma.SortOrder
  text?: Prisma.SortOrderInput | Prisma.SortOrder
  imageUrl?: Prisma.SortOrderInput | Prisma.SortOrder
  imagenPublicId?: Prisma.SortOrderInput | Prisma.SortOrder
  delivered?: Prisma.SortOrder
  read?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.MensajeCountOrderByAggregateInput
  _avg?: Prisma.MensajeAvgOrderByAggregateInput
  _max?: Prisma.MensajeMaxOrderByAggregateInput
  _min?: Prisma.MensajeMinOrderByAggregateInput
  _sum?: Prisma.MensajeSumOrderByAggregateInput
}

export type MensajeScalarWhereWithAggregatesInput = {
  AND?: Prisma.MensajeScalarWhereWithAggregatesInput | Prisma.MensajeScalarWhereWithAggregatesInput[]
  OR?: Prisma.MensajeScalarWhereWithAggregatesInput[]
  NOT?: Prisma.MensajeScalarWhereWithAggregatesInput | Prisma.MensajeScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Mensaje"> | number
  ticketId?: Prisma.IntWithAggregatesFilter<"Mensaje"> | number
  senderId?: Prisma.IntWithAggregatesFilter<"Mensaje"> | number
  receiverId?: Prisma.IntNullableWithAggregatesFilter<"Mensaje"> | number | null
  text?: Prisma.StringNullableWithAggregatesFilter<"Mensaje"> | string | null
  imageUrl?: Prisma.StringNullableWithAggregatesFilter<"Mensaje"> | string | null
  imagenPublicId?: Prisma.StringNullableWithAggregatesFilter<"Mensaje"> | string | null
  delivered?: Prisma.BoolWithAggregatesFilter<"Mensaje"> | boolean
  read?: Prisma.BoolWithAggregatesFilter<"Mensaje"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Mensaje"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Mensaje"> | Date | string
}

export type MensajeCreateInput = {
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  ticket: Prisma.TicketCreateNestedOneWithoutMensajesInput
  sender: Prisma.UserCreateNestedOneWithoutMensajesInput
  receiver?: Prisma.UserCreateNestedOneWithoutReceivedMessagesInput
}

export type MensajeUncheckedCreateInput = {
  id?: number
  ticketId: number
  senderId: number
  receiverId?: number | null
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeUpdateInput = {
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ticket?: Prisma.TicketUpdateOneRequiredWithoutMensajesNestedInput
  sender?: Prisma.UserUpdateOneRequiredWithoutMensajesNestedInput
  receiver?: Prisma.UserUpdateOneWithoutReceivedMessagesNestedInput
}

export type MensajeUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ticketId?: Prisma.IntFieldUpdateOperationsInput | number
  senderId?: Prisma.IntFieldUpdateOperationsInput | number
  receiverId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeCreateManyInput = {
  id?: number
  ticketId: number
  senderId: number
  receiverId?: number | null
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeUpdateManyMutationInput = {
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ticketId?: Prisma.IntFieldUpdateOperationsInput | number
  senderId?: Prisma.IntFieldUpdateOperationsInput | number
  receiverId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeListRelationFilter = {
  every?: Prisma.MensajeWhereInput
  some?: Prisma.MensajeWhereInput
  none?: Prisma.MensajeWhereInput
}

export type MensajeOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type MensajeOrderByRelevanceInput = {
  fields: Prisma.MensajeOrderByRelevanceFieldEnum | Prisma.MensajeOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type MensajeCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrder
  text?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  imagenPublicId?: Prisma.SortOrder
  delivered?: Prisma.SortOrder
  read?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MensajeAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrder
}

export type MensajeMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrder
  text?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  imagenPublicId?: Prisma.SortOrder
  delivered?: Prisma.SortOrder
  read?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MensajeMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrder
  text?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  imagenPublicId?: Prisma.SortOrder
  delivered?: Prisma.SortOrder
  read?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type MensajeSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  ticketId?: Prisma.SortOrder
  senderId?: Prisma.SortOrder
  receiverId?: Prisma.SortOrder
}

export type MensajeCreateNestedManyWithoutSenderInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutSenderInput, Prisma.MensajeUncheckedCreateWithoutSenderInput> | Prisma.MensajeCreateWithoutSenderInput[] | Prisma.MensajeUncheckedCreateWithoutSenderInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutSenderInput | Prisma.MensajeCreateOrConnectWithoutSenderInput[]
  createMany?: Prisma.MensajeCreateManySenderInputEnvelope
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
}

export type MensajeCreateNestedManyWithoutReceiverInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutReceiverInput, Prisma.MensajeUncheckedCreateWithoutReceiverInput> | Prisma.MensajeCreateWithoutReceiverInput[] | Prisma.MensajeUncheckedCreateWithoutReceiverInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutReceiverInput | Prisma.MensajeCreateOrConnectWithoutReceiverInput[]
  createMany?: Prisma.MensajeCreateManyReceiverInputEnvelope
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
}

export type MensajeUncheckedCreateNestedManyWithoutSenderInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutSenderInput, Prisma.MensajeUncheckedCreateWithoutSenderInput> | Prisma.MensajeCreateWithoutSenderInput[] | Prisma.MensajeUncheckedCreateWithoutSenderInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutSenderInput | Prisma.MensajeCreateOrConnectWithoutSenderInput[]
  createMany?: Prisma.MensajeCreateManySenderInputEnvelope
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
}

export type MensajeUncheckedCreateNestedManyWithoutReceiverInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutReceiverInput, Prisma.MensajeUncheckedCreateWithoutReceiverInput> | Prisma.MensajeCreateWithoutReceiverInput[] | Prisma.MensajeUncheckedCreateWithoutReceiverInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutReceiverInput | Prisma.MensajeCreateOrConnectWithoutReceiverInput[]
  createMany?: Prisma.MensajeCreateManyReceiverInputEnvelope
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
}

export type MensajeUpdateManyWithoutSenderNestedInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutSenderInput, Prisma.MensajeUncheckedCreateWithoutSenderInput> | Prisma.MensajeCreateWithoutSenderInput[] | Prisma.MensajeUncheckedCreateWithoutSenderInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutSenderInput | Prisma.MensajeCreateOrConnectWithoutSenderInput[]
  upsert?: Prisma.MensajeUpsertWithWhereUniqueWithoutSenderInput | Prisma.MensajeUpsertWithWhereUniqueWithoutSenderInput[]
  createMany?: Prisma.MensajeCreateManySenderInputEnvelope
  set?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  disconnect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  delete?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  update?: Prisma.MensajeUpdateWithWhereUniqueWithoutSenderInput | Prisma.MensajeUpdateWithWhereUniqueWithoutSenderInput[]
  updateMany?: Prisma.MensajeUpdateManyWithWhereWithoutSenderInput | Prisma.MensajeUpdateManyWithWhereWithoutSenderInput[]
  deleteMany?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
}

export type MensajeUpdateManyWithoutReceiverNestedInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutReceiverInput, Prisma.MensajeUncheckedCreateWithoutReceiverInput> | Prisma.MensajeCreateWithoutReceiverInput[] | Prisma.MensajeUncheckedCreateWithoutReceiverInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutReceiverInput | Prisma.MensajeCreateOrConnectWithoutReceiverInput[]
  upsert?: Prisma.MensajeUpsertWithWhereUniqueWithoutReceiverInput | Prisma.MensajeUpsertWithWhereUniqueWithoutReceiverInput[]
  createMany?: Prisma.MensajeCreateManyReceiverInputEnvelope
  set?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  disconnect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  delete?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  update?: Prisma.MensajeUpdateWithWhereUniqueWithoutReceiverInput | Prisma.MensajeUpdateWithWhereUniqueWithoutReceiverInput[]
  updateMany?: Prisma.MensajeUpdateManyWithWhereWithoutReceiverInput | Prisma.MensajeUpdateManyWithWhereWithoutReceiverInput[]
  deleteMany?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
}

export type MensajeUncheckedUpdateManyWithoutSenderNestedInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutSenderInput, Prisma.MensajeUncheckedCreateWithoutSenderInput> | Prisma.MensajeCreateWithoutSenderInput[] | Prisma.MensajeUncheckedCreateWithoutSenderInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutSenderInput | Prisma.MensajeCreateOrConnectWithoutSenderInput[]
  upsert?: Prisma.MensajeUpsertWithWhereUniqueWithoutSenderInput | Prisma.MensajeUpsertWithWhereUniqueWithoutSenderInput[]
  createMany?: Prisma.MensajeCreateManySenderInputEnvelope
  set?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  disconnect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  delete?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  update?: Prisma.MensajeUpdateWithWhereUniqueWithoutSenderInput | Prisma.MensajeUpdateWithWhereUniqueWithoutSenderInput[]
  updateMany?: Prisma.MensajeUpdateManyWithWhereWithoutSenderInput | Prisma.MensajeUpdateManyWithWhereWithoutSenderInput[]
  deleteMany?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
}

export type MensajeUncheckedUpdateManyWithoutReceiverNestedInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutReceiverInput, Prisma.MensajeUncheckedCreateWithoutReceiverInput> | Prisma.MensajeCreateWithoutReceiverInput[] | Prisma.MensajeUncheckedCreateWithoutReceiverInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutReceiverInput | Prisma.MensajeCreateOrConnectWithoutReceiverInput[]
  upsert?: Prisma.MensajeUpsertWithWhereUniqueWithoutReceiverInput | Prisma.MensajeUpsertWithWhereUniqueWithoutReceiverInput[]
  createMany?: Prisma.MensajeCreateManyReceiverInputEnvelope
  set?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  disconnect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  delete?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  update?: Prisma.MensajeUpdateWithWhereUniqueWithoutReceiverInput | Prisma.MensajeUpdateWithWhereUniqueWithoutReceiverInput[]
  updateMany?: Prisma.MensajeUpdateManyWithWhereWithoutReceiverInput | Prisma.MensajeUpdateManyWithWhereWithoutReceiverInput[]
  deleteMany?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
}

export type MensajeCreateNestedManyWithoutTicketInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutTicketInput, Prisma.MensajeUncheckedCreateWithoutTicketInput> | Prisma.MensajeCreateWithoutTicketInput[] | Prisma.MensajeUncheckedCreateWithoutTicketInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutTicketInput | Prisma.MensajeCreateOrConnectWithoutTicketInput[]
  createMany?: Prisma.MensajeCreateManyTicketInputEnvelope
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
}

export type MensajeUncheckedCreateNestedManyWithoutTicketInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutTicketInput, Prisma.MensajeUncheckedCreateWithoutTicketInput> | Prisma.MensajeCreateWithoutTicketInput[] | Prisma.MensajeUncheckedCreateWithoutTicketInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutTicketInput | Prisma.MensajeCreateOrConnectWithoutTicketInput[]
  createMany?: Prisma.MensajeCreateManyTicketInputEnvelope
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
}

export type MensajeUpdateManyWithoutTicketNestedInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutTicketInput, Prisma.MensajeUncheckedCreateWithoutTicketInput> | Prisma.MensajeCreateWithoutTicketInput[] | Prisma.MensajeUncheckedCreateWithoutTicketInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutTicketInput | Prisma.MensajeCreateOrConnectWithoutTicketInput[]
  upsert?: Prisma.MensajeUpsertWithWhereUniqueWithoutTicketInput | Prisma.MensajeUpsertWithWhereUniqueWithoutTicketInput[]
  createMany?: Prisma.MensajeCreateManyTicketInputEnvelope
  set?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  disconnect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  delete?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  update?: Prisma.MensajeUpdateWithWhereUniqueWithoutTicketInput | Prisma.MensajeUpdateWithWhereUniqueWithoutTicketInput[]
  updateMany?: Prisma.MensajeUpdateManyWithWhereWithoutTicketInput | Prisma.MensajeUpdateManyWithWhereWithoutTicketInput[]
  deleteMany?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
}

export type MensajeUncheckedUpdateManyWithoutTicketNestedInput = {
  create?: Prisma.XOR<Prisma.MensajeCreateWithoutTicketInput, Prisma.MensajeUncheckedCreateWithoutTicketInput> | Prisma.MensajeCreateWithoutTicketInput[] | Prisma.MensajeUncheckedCreateWithoutTicketInput[]
  connectOrCreate?: Prisma.MensajeCreateOrConnectWithoutTicketInput | Prisma.MensajeCreateOrConnectWithoutTicketInput[]
  upsert?: Prisma.MensajeUpsertWithWhereUniqueWithoutTicketInput | Prisma.MensajeUpsertWithWhereUniqueWithoutTicketInput[]
  createMany?: Prisma.MensajeCreateManyTicketInputEnvelope
  set?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  disconnect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  delete?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  connect?: Prisma.MensajeWhereUniqueInput | Prisma.MensajeWhereUniqueInput[]
  update?: Prisma.MensajeUpdateWithWhereUniqueWithoutTicketInput | Prisma.MensajeUpdateWithWhereUniqueWithoutTicketInput[]
  updateMany?: Prisma.MensajeUpdateManyWithWhereWithoutTicketInput | Prisma.MensajeUpdateManyWithWhereWithoutTicketInput[]
  deleteMany?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
}

export type MensajeCreateWithoutSenderInput = {
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  ticket: Prisma.TicketCreateNestedOneWithoutMensajesInput
  receiver?: Prisma.UserCreateNestedOneWithoutReceivedMessagesInput
}

export type MensajeUncheckedCreateWithoutSenderInput = {
  id?: number
  ticketId: number
  receiverId?: number | null
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeCreateOrConnectWithoutSenderInput = {
  where: Prisma.MensajeWhereUniqueInput
  create: Prisma.XOR<Prisma.MensajeCreateWithoutSenderInput, Prisma.MensajeUncheckedCreateWithoutSenderInput>
}

export type MensajeCreateManySenderInputEnvelope = {
  data: Prisma.MensajeCreateManySenderInput | Prisma.MensajeCreateManySenderInput[]
  skipDuplicates?: boolean
}

export type MensajeCreateWithoutReceiverInput = {
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  ticket: Prisma.TicketCreateNestedOneWithoutMensajesInput
  sender: Prisma.UserCreateNestedOneWithoutMensajesInput
}

export type MensajeUncheckedCreateWithoutReceiverInput = {
  id?: number
  ticketId: number
  senderId: number
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeCreateOrConnectWithoutReceiverInput = {
  where: Prisma.MensajeWhereUniqueInput
  create: Prisma.XOR<Prisma.MensajeCreateWithoutReceiverInput, Prisma.MensajeUncheckedCreateWithoutReceiverInput>
}

export type MensajeCreateManyReceiverInputEnvelope = {
  data: Prisma.MensajeCreateManyReceiverInput | Prisma.MensajeCreateManyReceiverInput[]
  skipDuplicates?: boolean
}

export type MensajeUpsertWithWhereUniqueWithoutSenderInput = {
  where: Prisma.MensajeWhereUniqueInput
  update: Prisma.XOR<Prisma.MensajeUpdateWithoutSenderInput, Prisma.MensajeUncheckedUpdateWithoutSenderInput>
  create: Prisma.XOR<Prisma.MensajeCreateWithoutSenderInput, Prisma.MensajeUncheckedCreateWithoutSenderInput>
}

export type MensajeUpdateWithWhereUniqueWithoutSenderInput = {
  where: Prisma.MensajeWhereUniqueInput
  data: Prisma.XOR<Prisma.MensajeUpdateWithoutSenderInput, Prisma.MensajeUncheckedUpdateWithoutSenderInput>
}

export type MensajeUpdateManyWithWhereWithoutSenderInput = {
  where: Prisma.MensajeScalarWhereInput
  data: Prisma.XOR<Prisma.MensajeUpdateManyMutationInput, Prisma.MensajeUncheckedUpdateManyWithoutSenderInput>
}

export type MensajeScalarWhereInput = {
  AND?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
  OR?: Prisma.MensajeScalarWhereInput[]
  NOT?: Prisma.MensajeScalarWhereInput | Prisma.MensajeScalarWhereInput[]
  id?: Prisma.IntFilter<"Mensaje"> | number
  ticketId?: Prisma.IntFilter<"Mensaje"> | number
  senderId?: Prisma.IntFilter<"Mensaje"> | number
  receiverId?: Prisma.IntNullableFilter<"Mensaje"> | number | null
  text?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  imageUrl?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  imagenPublicId?: Prisma.StringNullableFilter<"Mensaje"> | string | null
  delivered?: Prisma.BoolFilter<"Mensaje"> | boolean
  read?: Prisma.BoolFilter<"Mensaje"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Mensaje"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Mensaje"> | Date | string
}

export type MensajeUpsertWithWhereUniqueWithoutReceiverInput = {
  where: Prisma.MensajeWhereUniqueInput
  update: Prisma.XOR<Prisma.MensajeUpdateWithoutReceiverInput, Prisma.MensajeUncheckedUpdateWithoutReceiverInput>
  create: Prisma.XOR<Prisma.MensajeCreateWithoutReceiverInput, Prisma.MensajeUncheckedCreateWithoutReceiverInput>
}

export type MensajeUpdateWithWhereUniqueWithoutReceiverInput = {
  where: Prisma.MensajeWhereUniqueInput
  data: Prisma.XOR<Prisma.MensajeUpdateWithoutReceiverInput, Prisma.MensajeUncheckedUpdateWithoutReceiverInput>
}

export type MensajeUpdateManyWithWhereWithoutReceiverInput = {
  where: Prisma.MensajeScalarWhereInput
  data: Prisma.XOR<Prisma.MensajeUpdateManyMutationInput, Prisma.MensajeUncheckedUpdateManyWithoutReceiverInput>
}

export type MensajeCreateWithoutTicketInput = {
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  sender: Prisma.UserCreateNestedOneWithoutMensajesInput
  receiver?: Prisma.UserCreateNestedOneWithoutReceivedMessagesInput
}

export type MensajeUncheckedCreateWithoutTicketInput = {
  id?: number
  senderId: number
  receiverId?: number | null
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeCreateOrConnectWithoutTicketInput = {
  where: Prisma.MensajeWhereUniqueInput
  create: Prisma.XOR<Prisma.MensajeCreateWithoutTicketInput, Prisma.MensajeUncheckedCreateWithoutTicketInput>
}

export type MensajeCreateManyTicketInputEnvelope = {
  data: Prisma.MensajeCreateManyTicketInput | Prisma.MensajeCreateManyTicketInput[]
  skipDuplicates?: boolean
}

export type MensajeUpsertWithWhereUniqueWithoutTicketInput = {
  where: Prisma.MensajeWhereUniqueInput
  update: Prisma.XOR<Prisma.MensajeUpdateWithoutTicketInput, Prisma.MensajeUncheckedUpdateWithoutTicketInput>
  create: Prisma.XOR<Prisma.MensajeCreateWithoutTicketInput, Prisma.MensajeUncheckedCreateWithoutTicketInput>
}

export type MensajeUpdateWithWhereUniqueWithoutTicketInput = {
  where: Prisma.MensajeWhereUniqueInput
  data: Prisma.XOR<Prisma.MensajeUpdateWithoutTicketInput, Prisma.MensajeUncheckedUpdateWithoutTicketInput>
}

export type MensajeUpdateManyWithWhereWithoutTicketInput = {
  where: Prisma.MensajeScalarWhereInput
  data: Prisma.XOR<Prisma.MensajeUpdateManyMutationInput, Prisma.MensajeUncheckedUpdateManyWithoutTicketInput>
}

export type MensajeCreateManySenderInput = {
  id?: number
  ticketId: number
  receiverId?: number | null
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeCreateManyReceiverInput = {
  id?: number
  ticketId: number
  senderId: number
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeUpdateWithoutSenderInput = {
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ticket?: Prisma.TicketUpdateOneRequiredWithoutMensajesNestedInput
  receiver?: Prisma.UserUpdateOneWithoutReceivedMessagesNestedInput
}

export type MensajeUncheckedUpdateWithoutSenderInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ticketId?: Prisma.IntFieldUpdateOperationsInput | number
  receiverId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeUncheckedUpdateManyWithoutSenderInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ticketId?: Prisma.IntFieldUpdateOperationsInput | number
  receiverId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeUpdateWithoutReceiverInput = {
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ticket?: Prisma.TicketUpdateOneRequiredWithoutMensajesNestedInput
  sender?: Prisma.UserUpdateOneRequiredWithoutMensajesNestedInput
}

export type MensajeUncheckedUpdateWithoutReceiverInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ticketId?: Prisma.IntFieldUpdateOperationsInput | number
  senderId?: Prisma.IntFieldUpdateOperationsInput | number
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeUncheckedUpdateManyWithoutReceiverInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  ticketId?: Prisma.IntFieldUpdateOperationsInput | number
  senderId?: Prisma.IntFieldUpdateOperationsInput | number
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeCreateManyTicketInput = {
  id?: number
  senderId: number
  receiverId?: number | null
  text?: string | null
  imageUrl?: string | null
  imagenPublicId?: string | null
  delivered?: boolean
  read?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type MensajeUpdateWithoutTicketInput = {
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  sender?: Prisma.UserUpdateOneRequiredWithoutMensajesNestedInput
  receiver?: Prisma.UserUpdateOneWithoutReceivedMessagesNestedInput
}

export type MensajeUncheckedUpdateWithoutTicketInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  senderId?: Prisma.IntFieldUpdateOperationsInput | number
  receiverId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type MensajeUncheckedUpdateManyWithoutTicketInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  senderId?: Prisma.IntFieldUpdateOperationsInput | number
  receiverId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imageUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  imagenPublicId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  delivered?: Prisma.BoolFieldUpdateOperationsInput | boolean
  read?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type MensajeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  ticketId?: boolean
  senderId?: boolean
  receiverId?: boolean
  text?: boolean
  imageUrl?: boolean
  imagenPublicId?: boolean
  delivered?: boolean
  read?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ticket?: boolean | Prisma.TicketDefaultArgs<ExtArgs>
  sender?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  receiver?: boolean | Prisma.Mensaje$receiverArgs<ExtArgs>
}, ExtArgs["result"]["mensaje"]>



export type MensajeSelectScalar = {
  id?: boolean
  ticketId?: boolean
  senderId?: boolean
  receiverId?: boolean
  text?: boolean
  imageUrl?: boolean
  imagenPublicId?: boolean
  delivered?: boolean
  read?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type MensajeOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "ticketId" | "senderId" | "receiverId" | "text" | "imageUrl" | "imagenPublicId" | "delivered" | "read" | "createdAt" | "updatedAt", ExtArgs["result"]["mensaje"]>
export type MensajeInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ticket?: boolean | Prisma.TicketDefaultArgs<ExtArgs>
  sender?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  receiver?: boolean | Prisma.Mensaje$receiverArgs<ExtArgs>
}

export type $MensajePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Mensaje"
  objects: {
    ticket: Prisma.$TicketPayload<ExtArgs>
    sender: Prisma.$UserPayload<ExtArgs>
    receiver: Prisma.$UserPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    ticketId: number
    senderId: number
    receiverId: number | null
    text: string | null
    imageUrl: string | null
    imagenPublicId: string | null
    delivered: boolean
    read: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["mensaje"]>
  composites: {}
}

export type MensajeGetPayload<S extends boolean | null | undefined | MensajeDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$MensajePayload, S>

export type MensajeCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<MensajeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MensajeCountAggregateInputType | true
  }

export interface MensajeDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mensaje'], meta: { name: 'Mensaje' } }
  /**
   * Find zero or one Mensaje that matches the filter.
   * @param {MensajeFindUniqueArgs} args - Arguments to find a Mensaje
   * @example
   * // Get one Mensaje
   * const mensaje = await prisma.mensaje.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends MensajeFindUniqueArgs>(args: Prisma.SelectSubset<T, MensajeFindUniqueArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Mensaje that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {MensajeFindUniqueOrThrowArgs} args - Arguments to find a Mensaje
   * @example
   * // Get one Mensaje
   * const mensaje = await prisma.mensaje.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends MensajeFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, MensajeFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Mensaje that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeFindFirstArgs} args - Arguments to find a Mensaje
   * @example
   * // Get one Mensaje
   * const mensaje = await prisma.mensaje.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends MensajeFindFirstArgs>(args?: Prisma.SelectSubset<T, MensajeFindFirstArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Mensaje that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeFindFirstOrThrowArgs} args - Arguments to find a Mensaje
   * @example
   * // Get one Mensaje
   * const mensaje = await prisma.mensaje.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends MensajeFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, MensajeFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Mensajes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Mensajes
   * const mensajes = await prisma.mensaje.findMany()
   * 
   * // Get first 10 Mensajes
   * const mensajes = await prisma.mensaje.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const mensajeWithIdOnly = await prisma.mensaje.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends MensajeFindManyArgs>(args?: Prisma.SelectSubset<T, MensajeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Mensaje.
   * @param {MensajeCreateArgs} args - Arguments to create a Mensaje.
   * @example
   * // Create one Mensaje
   * const Mensaje = await prisma.mensaje.create({
   *   data: {
   *     // ... data to create a Mensaje
   *   }
   * })
   * 
   */
  create<T extends MensajeCreateArgs>(args: Prisma.SelectSubset<T, MensajeCreateArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Mensajes.
   * @param {MensajeCreateManyArgs} args - Arguments to create many Mensajes.
   * @example
   * // Create many Mensajes
   * const mensaje = await prisma.mensaje.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends MensajeCreateManyArgs>(args?: Prisma.SelectSubset<T, MensajeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Mensaje.
   * @param {MensajeDeleteArgs} args - Arguments to delete one Mensaje.
   * @example
   * // Delete one Mensaje
   * const Mensaje = await prisma.mensaje.delete({
   *   where: {
   *     // ... filter to delete one Mensaje
   *   }
   * })
   * 
   */
  delete<T extends MensajeDeleteArgs>(args: Prisma.SelectSubset<T, MensajeDeleteArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Mensaje.
   * @param {MensajeUpdateArgs} args - Arguments to update one Mensaje.
   * @example
   * // Update one Mensaje
   * const mensaje = await prisma.mensaje.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends MensajeUpdateArgs>(args: Prisma.SelectSubset<T, MensajeUpdateArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Mensajes.
   * @param {MensajeDeleteManyArgs} args - Arguments to filter Mensajes to delete.
   * @example
   * // Delete a few Mensajes
   * const { count } = await prisma.mensaje.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends MensajeDeleteManyArgs>(args?: Prisma.SelectSubset<T, MensajeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Mensajes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Mensajes
   * const mensaje = await prisma.mensaje.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends MensajeUpdateManyArgs>(args: Prisma.SelectSubset<T, MensajeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Mensaje.
   * @param {MensajeUpsertArgs} args - Arguments to update or create a Mensaje.
   * @example
   * // Update or create a Mensaje
   * const mensaje = await prisma.mensaje.upsert({
   *   create: {
   *     // ... data to create a Mensaje
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Mensaje we want to update
   *   }
   * })
   */
  upsert<T extends MensajeUpsertArgs>(args: Prisma.SelectSubset<T, MensajeUpsertArgs<ExtArgs>>): Prisma.Prisma__MensajeClient<runtime.Types.Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Mensajes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeCountArgs} args - Arguments to filter Mensajes to count.
   * @example
   * // Count the number of Mensajes
   * const count = await prisma.mensaje.count({
   *   where: {
   *     // ... the filter for the Mensajes we want to count
   *   }
   * })
  **/
  count<T extends MensajeCountArgs>(
    args?: Prisma.Subset<T, MensajeCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MensajeCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Mensaje.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MensajeAggregateArgs>(args: Prisma.Subset<T, MensajeAggregateArgs>): Prisma.PrismaPromise<GetMensajeAggregateType<T>>

  /**
   * Group by Mensaje.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MensajeGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends MensajeGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: MensajeGroupByArgs['orderBy'] }
      : { orderBy?: MensajeGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, MensajeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMensajeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Mensaje model
 */
readonly fields: MensajeFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Mensaje.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__MensajeClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ticket<T extends Prisma.TicketDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TicketDefaultArgs<ExtArgs>>): Prisma.Prisma__TicketClient<runtime.Types.Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  sender<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  receiver<T extends Prisma.Mensaje$receiverArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Mensaje$receiverArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Mensaje model
 */
export interface MensajeFieldRefs {
  readonly id: Prisma.FieldRef<"Mensaje", 'Int'>
  readonly ticketId: Prisma.FieldRef<"Mensaje", 'Int'>
  readonly senderId: Prisma.FieldRef<"Mensaje", 'Int'>
  readonly receiverId: Prisma.FieldRef<"Mensaje", 'Int'>
  readonly text: Prisma.FieldRef<"Mensaje", 'String'>
  readonly imageUrl: Prisma.FieldRef<"Mensaje", 'String'>
  readonly imagenPublicId: Prisma.FieldRef<"Mensaje", 'String'>
  readonly delivered: Prisma.FieldRef<"Mensaje", 'Boolean'>
  readonly read: Prisma.FieldRef<"Mensaje", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Mensaje", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Mensaje", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Mensaje findUnique
 */
export type MensajeFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * Filter, which Mensaje to fetch.
   */
  where: Prisma.MensajeWhereUniqueInput
}

/**
 * Mensaje findUniqueOrThrow
 */
export type MensajeFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * Filter, which Mensaje to fetch.
   */
  where: Prisma.MensajeWhereUniqueInput
}

/**
 * Mensaje findFirst
 */
export type MensajeFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * Filter, which Mensaje to fetch.
   */
  where?: Prisma.MensajeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Mensajes to fetch.
   */
  orderBy?: Prisma.MensajeOrderByWithRelationInput | Prisma.MensajeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Mensajes.
   */
  cursor?: Prisma.MensajeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Mensajes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Mensajes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Mensajes.
   */
  distinct?: Prisma.MensajeScalarFieldEnum | Prisma.MensajeScalarFieldEnum[]
}

/**
 * Mensaje findFirstOrThrow
 */
export type MensajeFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * Filter, which Mensaje to fetch.
   */
  where?: Prisma.MensajeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Mensajes to fetch.
   */
  orderBy?: Prisma.MensajeOrderByWithRelationInput | Prisma.MensajeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Mensajes.
   */
  cursor?: Prisma.MensajeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Mensajes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Mensajes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Mensajes.
   */
  distinct?: Prisma.MensajeScalarFieldEnum | Prisma.MensajeScalarFieldEnum[]
}

/**
 * Mensaje findMany
 */
export type MensajeFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * Filter, which Mensajes to fetch.
   */
  where?: Prisma.MensajeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Mensajes to fetch.
   */
  orderBy?: Prisma.MensajeOrderByWithRelationInput | Prisma.MensajeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Mensajes.
   */
  cursor?: Prisma.MensajeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Mensajes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Mensajes.
   */
  skip?: number
  distinct?: Prisma.MensajeScalarFieldEnum | Prisma.MensajeScalarFieldEnum[]
}

/**
 * Mensaje create
 */
export type MensajeCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * The data needed to create a Mensaje.
   */
  data: Prisma.XOR<Prisma.MensajeCreateInput, Prisma.MensajeUncheckedCreateInput>
}

/**
 * Mensaje createMany
 */
export type MensajeCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Mensajes.
   */
  data: Prisma.MensajeCreateManyInput | Prisma.MensajeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Mensaje update
 */
export type MensajeUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * The data needed to update a Mensaje.
   */
  data: Prisma.XOR<Prisma.MensajeUpdateInput, Prisma.MensajeUncheckedUpdateInput>
  /**
   * Choose, which Mensaje to update.
   */
  where: Prisma.MensajeWhereUniqueInput
}

/**
 * Mensaje updateMany
 */
export type MensajeUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Mensajes.
   */
  data: Prisma.XOR<Prisma.MensajeUpdateManyMutationInput, Prisma.MensajeUncheckedUpdateManyInput>
  /**
   * Filter which Mensajes to update
   */
  where?: Prisma.MensajeWhereInput
  /**
   * Limit how many Mensajes to update.
   */
  limit?: number
}

/**
 * Mensaje upsert
 */
export type MensajeUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * The filter to search for the Mensaje to update in case it exists.
   */
  where: Prisma.MensajeWhereUniqueInput
  /**
   * In case the Mensaje found by the `where` argument doesn't exist, create a new Mensaje with this data.
   */
  create: Prisma.XOR<Prisma.MensajeCreateInput, Prisma.MensajeUncheckedCreateInput>
  /**
   * In case the Mensaje was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.MensajeUpdateInput, Prisma.MensajeUncheckedUpdateInput>
}

/**
 * Mensaje delete
 */
export type MensajeDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
  /**
   * Filter which Mensaje to delete.
   */
  where: Prisma.MensajeWhereUniqueInput
}

/**
 * Mensaje deleteMany
 */
export type MensajeDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Mensajes to delete
   */
  where?: Prisma.MensajeWhereInput
  /**
   * Limit how many Mensajes to delete.
   */
  limit?: number
}

/**
 * Mensaje.receiver
 */
export type Mensaje$receiverArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Mensaje without action
 */
export type MensajeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Mensaje
   */
  select?: Prisma.MensajeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Mensaje
   */
  omit?: Prisma.MensajeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MensajeInclude<ExtArgs> | null
}
