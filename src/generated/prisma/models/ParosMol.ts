
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `ParosMol` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model ParosMol
 * 
 */
export type ParosMolModel = runtime.Types.Result.DefaultSelection<Prisma.$ParosMolPayload>

export type AggregateParosMol = {
  _count: ParosMolCountAggregateOutputType | null
  _avg: ParosMolAvgAggregateOutputType | null
  _sum: ParosMolSumAggregateOutputType | null
  _min: ParosMolMinAggregateOutputType | null
  _max: ParosMolMaxAggregateOutputType | null
}

export type ParosMolAvgAggregateOutputType = {
  id: number | null
  segundoProcesoMolId: number | null
}

export type ParosMolSumAggregateOutputType = {
  id: number | null
  segundoProcesoMolId: number | null
}

export type ParosMolMinAggregateOutputType = {
  id: number | null
  segundoProcesoMolId: number | null
  inicio: string | null
  fin: string | null
  razon: string | null
  diffCargaInicio: string | null
  duracionParo: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ParosMolMaxAggregateOutputType = {
  id: number | null
  segundoProcesoMolId: number | null
  inicio: string | null
  fin: string | null
  razon: string | null
  diffCargaInicio: string | null
  duracionParo: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ParosMolCountAggregateOutputType = {
  id: number
  segundoProcesoMolId: number
  inicio: number
  fin: number
  razon: number
  diffCargaInicio: number
  duracionParo: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ParosMolAvgAggregateInputType = {
  id?: true
  segundoProcesoMolId?: true
}

export type ParosMolSumAggregateInputType = {
  id?: true
  segundoProcesoMolId?: true
}

export type ParosMolMinAggregateInputType = {
  id?: true
  segundoProcesoMolId?: true
  inicio?: true
  fin?: true
  razon?: true
  diffCargaInicio?: true
  duracionParo?: true
  createdAt?: true
  updatedAt?: true
}

export type ParosMolMaxAggregateInputType = {
  id?: true
  segundoProcesoMolId?: true
  inicio?: true
  fin?: true
  razon?: true
  diffCargaInicio?: true
  duracionParo?: true
  createdAt?: true
  updatedAt?: true
}

export type ParosMolCountAggregateInputType = {
  id?: true
  segundoProcesoMolId?: true
  inicio?: true
  fin?: true
  razon?: true
  diffCargaInicio?: true
  duracionParo?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ParosMolAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ParosMol to aggregate.
   */
  where?: Prisma.ParosMolWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosMols to fetch.
   */
  orderBy?: Prisma.ParosMolOrderByWithRelationInput | Prisma.ParosMolOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ParosMolWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosMols from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosMols.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ParosMols
  **/
  _count?: true | ParosMolCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ParosMolAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ParosMolSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ParosMolMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ParosMolMaxAggregateInputType
}

export type GetParosMolAggregateType<T extends ParosMolAggregateArgs> = {
      [P in keyof T & keyof AggregateParosMol]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateParosMol[P]>
    : Prisma.GetScalarType<T[P], AggregateParosMol[P]>
}




export type ParosMolGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ParosMolWhereInput
  orderBy?: Prisma.ParosMolOrderByWithAggregationInput | Prisma.ParosMolOrderByWithAggregationInput[]
  by: Prisma.ParosMolScalarFieldEnum[] | Prisma.ParosMolScalarFieldEnum
  having?: Prisma.ParosMolScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ParosMolCountAggregateInputType | true
  _avg?: ParosMolAvgAggregateInputType
  _sum?: ParosMolSumAggregateInputType
  _min?: ParosMolMinAggregateInputType
  _max?: ParosMolMaxAggregateInputType
}

export type ParosMolGroupByOutputType = {
  id: number
  segundoProcesoMolId: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt: Date
  updatedAt: Date
  _count: ParosMolCountAggregateOutputType | null
  _avg: ParosMolAvgAggregateOutputType | null
  _sum: ParosMolSumAggregateOutputType | null
  _min: ParosMolMinAggregateOutputType | null
  _max: ParosMolMaxAggregateOutputType | null
}

type GetParosMolGroupByPayload<T extends ParosMolGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ParosMolGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ParosMolGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ParosMolGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ParosMolGroupByOutputType[P]>
      }
    >
  > 



export type ParosMolWhereInput = {
  AND?: Prisma.ParosMolWhereInput | Prisma.ParosMolWhereInput[]
  OR?: Prisma.ParosMolWhereInput[]
  NOT?: Prisma.ParosMolWhereInput | Prisma.ParosMolWhereInput[]
  id?: Prisma.IntFilter<"ParosMol"> | number
  segundoProcesoMolId?: Prisma.IntFilter<"ParosMol"> | number
  inicio?: Prisma.StringFilter<"ParosMol"> | string
  fin?: Prisma.StringFilter<"ParosMol"> | string
  razon?: Prisma.StringFilter<"ParosMol"> | string
  diffCargaInicio?: Prisma.StringFilter<"ParosMol"> | string
  duracionParo?: Prisma.StringFilter<"ParosMol"> | string
  createdAt?: Prisma.DateTimeFilter<"ParosMol"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ParosMol"> | Date | string
  segundoProcesoMol?: Prisma.XOR<Prisma.SegundoProcesoMolScalarRelationFilter, Prisma.SegundoProcesoMolWhereInput>
}

export type ParosMolOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  segundoProcesoMol?: Prisma.SegundoProcesoMolOrderByWithRelationInput
  _relevance?: Prisma.ParosMolOrderByRelevanceInput
}

export type ParosMolWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ParosMolWhereInput | Prisma.ParosMolWhereInput[]
  OR?: Prisma.ParosMolWhereInput[]
  NOT?: Prisma.ParosMolWhereInput | Prisma.ParosMolWhereInput[]
  segundoProcesoMolId?: Prisma.IntFilter<"ParosMol"> | number
  inicio?: Prisma.StringFilter<"ParosMol"> | string
  fin?: Prisma.StringFilter<"ParosMol"> | string
  razon?: Prisma.StringFilter<"ParosMol"> | string
  diffCargaInicio?: Prisma.StringFilter<"ParosMol"> | string
  duracionParo?: Prisma.StringFilter<"ParosMol"> | string
  createdAt?: Prisma.DateTimeFilter<"ParosMol"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ParosMol"> | Date | string
  segundoProcesoMol?: Prisma.XOR<Prisma.SegundoProcesoMolScalarRelationFilter, Prisma.SegundoProcesoMolWhereInput>
}, "id">

export type ParosMolOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ParosMolCountOrderByAggregateInput
  _avg?: Prisma.ParosMolAvgOrderByAggregateInput
  _max?: Prisma.ParosMolMaxOrderByAggregateInput
  _min?: Prisma.ParosMolMinOrderByAggregateInput
  _sum?: Prisma.ParosMolSumOrderByAggregateInput
}

export type ParosMolScalarWhereWithAggregatesInput = {
  AND?: Prisma.ParosMolScalarWhereWithAggregatesInput | Prisma.ParosMolScalarWhereWithAggregatesInput[]
  OR?: Prisma.ParosMolScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ParosMolScalarWhereWithAggregatesInput | Prisma.ParosMolScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ParosMol"> | number
  segundoProcesoMolId?: Prisma.IntWithAggregatesFilter<"ParosMol"> | number
  inicio?: Prisma.StringWithAggregatesFilter<"ParosMol"> | string
  fin?: Prisma.StringWithAggregatesFilter<"ParosMol"> | string
  razon?: Prisma.StringWithAggregatesFilter<"ParosMol"> | string
  diffCargaInicio?: Prisma.StringWithAggregatesFilter<"ParosMol"> | string
  duracionParo?: Prisma.StringWithAggregatesFilter<"ParosMol"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ParosMol"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ParosMol"> | Date | string
}

export type ParosMolCreateInput = {
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
  segundoProcesoMol: Prisma.SegundoProcesoMolCreateNestedOneWithoutParosMolInput
}

export type ParosMolUncheckedCreateInput = {
  id?: number
  segundoProcesoMolId: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosMolUpdateInput = {
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  segundoProcesoMol?: Prisma.SegundoProcesoMolUpdateOneRequiredWithoutParosMolNestedInput
}

export type ParosMolUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  segundoProcesoMolId?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosMolCreateManyInput = {
  id?: number
  segundoProcesoMolId: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosMolUpdateManyMutationInput = {
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosMolUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  segundoProcesoMolId?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosMolListRelationFilter = {
  every?: Prisma.ParosMolWhereInput
  some?: Prisma.ParosMolWhereInput
  none?: Prisma.ParosMolWhereInput
}

export type ParosMolOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ParosMolOrderByRelevanceInput = {
  fields: Prisma.ParosMolOrderByRelevanceFieldEnum | Prisma.ParosMolOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type ParosMolCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ParosMolAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
}

export type ParosMolMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ParosMolMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  fin?: Prisma.SortOrder
  razon?: Prisma.SortOrder
  diffCargaInicio?: Prisma.SortOrder
  duracionParo?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ParosMolSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  segundoProcesoMolId?: Prisma.SortOrder
}

export type ParosMolCreateNestedManyWithoutSegundoProcesoMolInput = {
  create?: Prisma.XOR<Prisma.ParosMolCreateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput> | Prisma.ParosMolCreateWithoutSegundoProcesoMolInput[] | Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput[]
  connectOrCreate?: Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput | Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput[]
  createMany?: Prisma.ParosMolCreateManySegundoProcesoMolInputEnvelope
  connect?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
}

export type ParosMolUncheckedCreateNestedManyWithoutSegundoProcesoMolInput = {
  create?: Prisma.XOR<Prisma.ParosMolCreateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput> | Prisma.ParosMolCreateWithoutSegundoProcesoMolInput[] | Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput[]
  connectOrCreate?: Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput | Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput[]
  createMany?: Prisma.ParosMolCreateManySegundoProcesoMolInputEnvelope
  connect?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
}

export type ParosMolUpdateManyWithoutSegundoProcesoMolNestedInput = {
  create?: Prisma.XOR<Prisma.ParosMolCreateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput> | Prisma.ParosMolCreateWithoutSegundoProcesoMolInput[] | Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput[]
  connectOrCreate?: Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput | Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput[]
  upsert?: Prisma.ParosMolUpsertWithWhereUniqueWithoutSegundoProcesoMolInput | Prisma.ParosMolUpsertWithWhereUniqueWithoutSegundoProcesoMolInput[]
  createMany?: Prisma.ParosMolCreateManySegundoProcesoMolInputEnvelope
  set?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  disconnect?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  delete?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  connect?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  update?: Prisma.ParosMolUpdateWithWhereUniqueWithoutSegundoProcesoMolInput | Prisma.ParosMolUpdateWithWhereUniqueWithoutSegundoProcesoMolInput[]
  updateMany?: Prisma.ParosMolUpdateManyWithWhereWithoutSegundoProcesoMolInput | Prisma.ParosMolUpdateManyWithWhereWithoutSegundoProcesoMolInput[]
  deleteMany?: Prisma.ParosMolScalarWhereInput | Prisma.ParosMolScalarWhereInput[]
}

export type ParosMolUncheckedUpdateManyWithoutSegundoProcesoMolNestedInput = {
  create?: Prisma.XOR<Prisma.ParosMolCreateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput> | Prisma.ParosMolCreateWithoutSegundoProcesoMolInput[] | Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput[]
  connectOrCreate?: Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput | Prisma.ParosMolCreateOrConnectWithoutSegundoProcesoMolInput[]
  upsert?: Prisma.ParosMolUpsertWithWhereUniqueWithoutSegundoProcesoMolInput | Prisma.ParosMolUpsertWithWhereUniqueWithoutSegundoProcesoMolInput[]
  createMany?: Prisma.ParosMolCreateManySegundoProcesoMolInputEnvelope
  set?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  disconnect?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  delete?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  connect?: Prisma.ParosMolWhereUniqueInput | Prisma.ParosMolWhereUniqueInput[]
  update?: Prisma.ParosMolUpdateWithWhereUniqueWithoutSegundoProcesoMolInput | Prisma.ParosMolUpdateWithWhereUniqueWithoutSegundoProcesoMolInput[]
  updateMany?: Prisma.ParosMolUpdateManyWithWhereWithoutSegundoProcesoMolInput | Prisma.ParosMolUpdateManyWithWhereWithoutSegundoProcesoMolInput[]
  deleteMany?: Prisma.ParosMolScalarWhereInput | Prisma.ParosMolScalarWhereInput[]
}

export type ParosMolCreateWithoutSegundoProcesoMolInput = {
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosMolUncheckedCreateWithoutSegundoProcesoMolInput = {
  id?: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosMolCreateOrConnectWithoutSegundoProcesoMolInput = {
  where: Prisma.ParosMolWhereUniqueInput
  create: Prisma.XOR<Prisma.ParosMolCreateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput>
}

export type ParosMolCreateManySegundoProcesoMolInputEnvelope = {
  data: Prisma.ParosMolCreateManySegundoProcesoMolInput | Prisma.ParosMolCreateManySegundoProcesoMolInput[]
  skipDuplicates?: boolean
}

export type ParosMolUpsertWithWhereUniqueWithoutSegundoProcesoMolInput = {
  where: Prisma.ParosMolWhereUniqueInput
  update: Prisma.XOR<Prisma.ParosMolUpdateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedUpdateWithoutSegundoProcesoMolInput>
  create: Prisma.XOR<Prisma.ParosMolCreateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedCreateWithoutSegundoProcesoMolInput>
}

export type ParosMolUpdateWithWhereUniqueWithoutSegundoProcesoMolInput = {
  where: Prisma.ParosMolWhereUniqueInput
  data: Prisma.XOR<Prisma.ParosMolUpdateWithoutSegundoProcesoMolInput, Prisma.ParosMolUncheckedUpdateWithoutSegundoProcesoMolInput>
}

export type ParosMolUpdateManyWithWhereWithoutSegundoProcesoMolInput = {
  where: Prisma.ParosMolScalarWhereInput
  data: Prisma.XOR<Prisma.ParosMolUpdateManyMutationInput, Prisma.ParosMolUncheckedUpdateManyWithoutSegundoProcesoMolInput>
}

export type ParosMolScalarWhereInput = {
  AND?: Prisma.ParosMolScalarWhereInput | Prisma.ParosMolScalarWhereInput[]
  OR?: Prisma.ParosMolScalarWhereInput[]
  NOT?: Prisma.ParosMolScalarWhereInput | Prisma.ParosMolScalarWhereInput[]
  id?: Prisma.IntFilter<"ParosMol"> | number
  segundoProcesoMolId?: Prisma.IntFilter<"ParosMol"> | number
  inicio?: Prisma.StringFilter<"ParosMol"> | string
  fin?: Prisma.StringFilter<"ParosMol"> | string
  razon?: Prisma.StringFilter<"ParosMol"> | string
  diffCargaInicio?: Prisma.StringFilter<"ParosMol"> | string
  duracionParo?: Prisma.StringFilter<"ParosMol"> | string
  createdAt?: Prisma.DateTimeFilter<"ParosMol"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ParosMol"> | Date | string
}

export type ParosMolCreateManySegundoProcesoMolInput = {
  id?: number
  inicio: string
  fin: string
  razon: string
  diffCargaInicio: string
  duracionParo: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ParosMolUpdateWithoutSegundoProcesoMolInput = {
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosMolUncheckedUpdateWithoutSegundoProcesoMolInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ParosMolUncheckedUpdateManyWithoutSegundoProcesoMolInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  inicio?: Prisma.StringFieldUpdateOperationsInput | string
  fin?: Prisma.StringFieldUpdateOperationsInput | string
  razon?: Prisma.StringFieldUpdateOperationsInput | string
  diffCargaInicio?: Prisma.StringFieldUpdateOperationsInput | string
  duracionParo?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ParosMolSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  segundoProcesoMolId?: boolean
  inicio?: boolean
  fin?: boolean
  razon?: boolean
  diffCargaInicio?: boolean
  duracionParo?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  segundoProcesoMol?: boolean | Prisma.SegundoProcesoMolDefaultArgs<ExtArgs>
}, ExtArgs["result"]["parosMol"]>



export type ParosMolSelectScalar = {
  id?: boolean
  segundoProcesoMolId?: boolean
  inicio?: boolean
  fin?: boolean
  razon?: boolean
  diffCargaInicio?: boolean
  duracionParo?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ParosMolOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "segundoProcesoMolId" | "inicio" | "fin" | "razon" | "diffCargaInicio" | "duracionParo" | "createdAt" | "updatedAt", ExtArgs["result"]["parosMol"]>
export type ParosMolInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  segundoProcesoMol?: boolean | Prisma.SegundoProcesoMolDefaultArgs<ExtArgs>
}

export type $ParosMolPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ParosMol"
  objects: {
    segundoProcesoMol: Prisma.$SegundoProcesoMolPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    segundoProcesoMolId: number
    inicio: string
    fin: string
    razon: string
    diffCargaInicio: string
    duracionParo: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["parosMol"]>
  composites: {}
}

export type ParosMolGetPayload<S extends boolean | null | undefined | ParosMolDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ParosMolPayload, S>

export type ParosMolCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ParosMolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ParosMolCountAggregateInputType | true
  }

export interface ParosMolDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ParosMol'], meta: { name: 'ParosMol' } }
  /**
   * Find zero or one ParosMol that matches the filter.
   * @param {ParosMolFindUniqueArgs} args - Arguments to find a ParosMol
   * @example
   * // Get one ParosMol
   * const parosMol = await prisma.parosMol.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ParosMolFindUniqueArgs>(args: Prisma.SelectSubset<T, ParosMolFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ParosMol that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ParosMolFindUniqueOrThrowArgs} args - Arguments to find a ParosMol
   * @example
   * // Get one ParosMol
   * const parosMol = await prisma.parosMol.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ParosMolFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ParosMolFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ParosMol that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolFindFirstArgs} args - Arguments to find a ParosMol
   * @example
   * // Get one ParosMol
   * const parosMol = await prisma.parosMol.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ParosMolFindFirstArgs>(args?: Prisma.SelectSubset<T, ParosMolFindFirstArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ParosMol that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolFindFirstOrThrowArgs} args - Arguments to find a ParosMol
   * @example
   * // Get one ParosMol
   * const parosMol = await prisma.parosMol.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ParosMolFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ParosMolFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ParosMols that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ParosMols
   * const parosMols = await prisma.parosMol.findMany()
   * 
   * // Get first 10 ParosMols
   * const parosMols = await prisma.parosMol.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const parosMolWithIdOnly = await prisma.parosMol.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ParosMolFindManyArgs>(args?: Prisma.SelectSubset<T, ParosMolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ParosMol.
   * @param {ParosMolCreateArgs} args - Arguments to create a ParosMol.
   * @example
   * // Create one ParosMol
   * const ParosMol = await prisma.parosMol.create({
   *   data: {
   *     // ... data to create a ParosMol
   *   }
   * })
   * 
   */
  create<T extends ParosMolCreateArgs>(args: Prisma.SelectSubset<T, ParosMolCreateArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ParosMols.
   * @param {ParosMolCreateManyArgs} args - Arguments to create many ParosMols.
   * @example
   * // Create many ParosMols
   * const parosMol = await prisma.parosMol.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ParosMolCreateManyArgs>(args?: Prisma.SelectSubset<T, ParosMolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a ParosMol.
   * @param {ParosMolDeleteArgs} args - Arguments to delete one ParosMol.
   * @example
   * // Delete one ParosMol
   * const ParosMol = await prisma.parosMol.delete({
   *   where: {
   *     // ... filter to delete one ParosMol
   *   }
   * })
   * 
   */
  delete<T extends ParosMolDeleteArgs>(args: Prisma.SelectSubset<T, ParosMolDeleteArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ParosMol.
   * @param {ParosMolUpdateArgs} args - Arguments to update one ParosMol.
   * @example
   * // Update one ParosMol
   * const parosMol = await prisma.parosMol.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ParosMolUpdateArgs>(args: Prisma.SelectSubset<T, ParosMolUpdateArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ParosMols.
   * @param {ParosMolDeleteManyArgs} args - Arguments to filter ParosMols to delete.
   * @example
   * // Delete a few ParosMols
   * const { count } = await prisma.parosMol.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ParosMolDeleteManyArgs>(args?: Prisma.SelectSubset<T, ParosMolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ParosMols.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ParosMols
   * const parosMol = await prisma.parosMol.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ParosMolUpdateManyArgs>(args: Prisma.SelectSubset<T, ParosMolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one ParosMol.
   * @param {ParosMolUpsertArgs} args - Arguments to update or create a ParosMol.
   * @example
   * // Update or create a ParosMol
   * const parosMol = await prisma.parosMol.upsert({
   *   create: {
   *     // ... data to create a ParosMol
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ParosMol we want to update
   *   }
   * })
   */
  upsert<T extends ParosMolUpsertArgs>(args: Prisma.SelectSubset<T, ParosMolUpsertArgs<ExtArgs>>): Prisma.Prisma__ParosMolClient<runtime.Types.Result.GetResult<Prisma.$ParosMolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ParosMols.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolCountArgs} args - Arguments to filter ParosMols to count.
   * @example
   * // Count the number of ParosMols
   * const count = await prisma.parosMol.count({
   *   where: {
   *     // ... the filter for the ParosMols we want to count
   *   }
   * })
  **/
  count<T extends ParosMolCountArgs>(
    args?: Prisma.Subset<T, ParosMolCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ParosMolCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ParosMol.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ParosMolAggregateArgs>(args: Prisma.Subset<T, ParosMolAggregateArgs>): Prisma.PrismaPromise<GetParosMolAggregateType<T>>

  /**
   * Group by ParosMol.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ParosMolGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ParosMolGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ParosMolGroupByArgs['orderBy'] }
      : { orderBy?: ParosMolGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ParosMolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParosMolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ParosMol model
 */
readonly fields: ParosMolFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ParosMol.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ParosMolClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  segundoProcesoMol<T extends Prisma.SegundoProcesoMolDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.SegundoProcesoMolDefaultArgs<ExtArgs>>): Prisma.Prisma__SegundoProcesoMolClient<runtime.Types.Result.GetResult<Prisma.$SegundoProcesoMolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ParosMol model
 */
export interface ParosMolFieldRefs {
  readonly id: Prisma.FieldRef<"ParosMol", 'Int'>
  readonly segundoProcesoMolId: Prisma.FieldRef<"ParosMol", 'Int'>
  readonly inicio: Prisma.FieldRef<"ParosMol", 'String'>
  readonly fin: Prisma.FieldRef<"ParosMol", 'String'>
  readonly razon: Prisma.FieldRef<"ParosMol", 'String'>
  readonly diffCargaInicio: Prisma.FieldRef<"ParosMol", 'String'>
  readonly duracionParo: Prisma.FieldRef<"ParosMol", 'String'>
  readonly createdAt: Prisma.FieldRef<"ParosMol", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ParosMol", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ParosMol findUnique
 */
export type ParosMolFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * Filter, which ParosMol to fetch.
   */
  where: Prisma.ParosMolWhereUniqueInput
}

/**
 * ParosMol findUniqueOrThrow
 */
export type ParosMolFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * Filter, which ParosMol to fetch.
   */
  where: Prisma.ParosMolWhereUniqueInput
}

/**
 * ParosMol findFirst
 */
export type ParosMolFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * Filter, which ParosMol to fetch.
   */
  where?: Prisma.ParosMolWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosMols to fetch.
   */
  orderBy?: Prisma.ParosMolOrderByWithRelationInput | Prisma.ParosMolOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ParosMols.
   */
  cursor?: Prisma.ParosMolWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosMols from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosMols.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ParosMols.
   */
  distinct?: Prisma.ParosMolScalarFieldEnum | Prisma.ParosMolScalarFieldEnum[]
}

/**
 * ParosMol findFirstOrThrow
 */
export type ParosMolFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * Filter, which ParosMol to fetch.
   */
  where?: Prisma.ParosMolWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosMols to fetch.
   */
  orderBy?: Prisma.ParosMolOrderByWithRelationInput | Prisma.ParosMolOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ParosMols.
   */
  cursor?: Prisma.ParosMolWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosMols from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosMols.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ParosMols.
   */
  distinct?: Prisma.ParosMolScalarFieldEnum | Prisma.ParosMolScalarFieldEnum[]
}

/**
 * ParosMol findMany
 */
export type ParosMolFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * Filter, which ParosMols to fetch.
   */
  where?: Prisma.ParosMolWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ParosMols to fetch.
   */
  orderBy?: Prisma.ParosMolOrderByWithRelationInput | Prisma.ParosMolOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ParosMols.
   */
  cursor?: Prisma.ParosMolWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ParosMols from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ParosMols.
   */
  skip?: number
  distinct?: Prisma.ParosMolScalarFieldEnum | Prisma.ParosMolScalarFieldEnum[]
}

/**
 * ParosMol create
 */
export type ParosMolCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * The data needed to create a ParosMol.
   */
  data: Prisma.XOR<Prisma.ParosMolCreateInput, Prisma.ParosMolUncheckedCreateInput>
}

/**
 * ParosMol createMany
 */
export type ParosMolCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ParosMols.
   */
  data: Prisma.ParosMolCreateManyInput | Prisma.ParosMolCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ParosMol update
 */
export type ParosMolUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * The data needed to update a ParosMol.
   */
  data: Prisma.XOR<Prisma.ParosMolUpdateInput, Prisma.ParosMolUncheckedUpdateInput>
  /**
   * Choose, which ParosMol to update.
   */
  where: Prisma.ParosMolWhereUniqueInput
}

/**
 * ParosMol updateMany
 */
export type ParosMolUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ParosMols.
   */
  data: Prisma.XOR<Prisma.ParosMolUpdateManyMutationInput, Prisma.ParosMolUncheckedUpdateManyInput>
  /**
   * Filter which ParosMols to update
   */
  where?: Prisma.ParosMolWhereInput
  /**
   * Limit how many ParosMols to update.
   */
  limit?: number
}

/**
 * ParosMol upsert
 */
export type ParosMolUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * The filter to search for the ParosMol to update in case it exists.
   */
  where: Prisma.ParosMolWhereUniqueInput
  /**
   * In case the ParosMol found by the `where` argument doesn't exist, create a new ParosMol with this data.
   */
  create: Prisma.XOR<Prisma.ParosMolCreateInput, Prisma.ParosMolUncheckedCreateInput>
  /**
   * In case the ParosMol was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ParosMolUpdateInput, Prisma.ParosMolUncheckedUpdateInput>
}

/**
 * ParosMol delete
 */
export type ParosMolDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
  /**
   * Filter which ParosMol to delete.
   */
  where: Prisma.ParosMolWhereUniqueInput
}

/**
 * ParosMol deleteMany
 */
export type ParosMolDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ParosMols to delete
   */
  where?: Prisma.ParosMolWhereInput
  /**
   * Limit how many ParosMols to delete.
   */
  limit?: number
}

/**
 * ParosMol without action
 */
export type ParosMolDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ParosMol
   */
  select?: Prisma.ParosMolSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ParosMol
   */
  omit?: Prisma.ParosMolOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ParosMolInclude<ExtArgs> | null
}
