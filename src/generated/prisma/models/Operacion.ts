
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Operacion` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Operacion
 * 
 */
export type OperacionModel = runtime.Types.Result.DefaultSelection<Prisma.$OperacionPayload>

export type AggregateOperacion = {
  _count: OperacionCountAggregateOutputType | null
  _avg: OperacionAvgAggregateOutputType | null
  _sum: OperacionSumAggregateOutputType | null
  _min: OperacionMinAggregateOutputType | null
  _max: OperacionMaxAggregateOutputType | null
}

export type OperacionAvgAggregateOutputType = {
  id: number | null
  bitacoraId: number | null
}

export type OperacionSumAggregateOutputType = {
  id: number | null
  bitacoraId: number | null
}

export type OperacionMinAggregateOutputType = {
  id: number | null
  bodega: string | null
  inicio: string | null
  final: string | null
  minutos: string | null
  actividad: string | null
  bitacoraId: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OperacionMaxAggregateOutputType = {
  id: number | null
  bodega: string | null
  inicio: string | null
  final: string | null
  minutos: string | null
  actividad: string | null
  bitacoraId: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type OperacionCountAggregateOutputType = {
  id: number
  bodega: number
  inicio: number
  final: number
  minutos: number
  actividad: number
  bitacoraId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type OperacionAvgAggregateInputType = {
  id?: true
  bitacoraId?: true
}

export type OperacionSumAggregateInputType = {
  id?: true
  bitacoraId?: true
}

export type OperacionMinAggregateInputType = {
  id?: true
  bodega?: true
  inicio?: true
  final?: true
  minutos?: true
  actividad?: true
  bitacoraId?: true
  createdAt?: true
  updatedAt?: true
}

export type OperacionMaxAggregateInputType = {
  id?: true
  bodega?: true
  inicio?: true
  final?: true
  minutos?: true
  actividad?: true
  bitacoraId?: true
  createdAt?: true
  updatedAt?: true
}

export type OperacionCountAggregateInputType = {
  id?: true
  bodega?: true
  inicio?: true
  final?: true
  minutos?: true
  actividad?: true
  bitacoraId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type OperacionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Operacion to aggregate.
   */
  where?: Prisma.OperacionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operacions to fetch.
   */
  orderBy?: Prisma.OperacionOrderByWithRelationInput | Prisma.OperacionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OperacionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operacions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operacions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Operacions
  **/
  _count?: true | OperacionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: OperacionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: OperacionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OperacionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OperacionMaxAggregateInputType
}

export type GetOperacionAggregateType<T extends OperacionAggregateArgs> = {
      [P in keyof T & keyof AggregateOperacion]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOperacion[P]>
    : Prisma.GetScalarType<T[P], AggregateOperacion[P]>
}




export type OperacionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OperacionWhereInput
  orderBy?: Prisma.OperacionOrderByWithAggregationInput | Prisma.OperacionOrderByWithAggregationInput[]
  by: Prisma.OperacionScalarFieldEnum[] | Prisma.OperacionScalarFieldEnum
  having?: Prisma.OperacionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OperacionCountAggregateInputType | true
  _avg?: OperacionAvgAggregateInputType
  _sum?: OperacionSumAggregateInputType
  _min?: OperacionMinAggregateInputType
  _max?: OperacionMaxAggregateInputType
}

export type OperacionGroupByOutputType = {
  id: number
  bodega: string | null
  inicio: string | null
  final: string | null
  minutos: string | null
  actividad: string | null
  bitacoraId: number
  createdAt: Date
  updatedAt: Date
  _count: OperacionCountAggregateOutputType | null
  _avg: OperacionAvgAggregateOutputType | null
  _sum: OperacionSumAggregateOutputType | null
  _min: OperacionMinAggregateOutputType | null
  _max: OperacionMaxAggregateOutputType | null
}

type GetOperacionGroupByPayload<T extends OperacionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OperacionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OperacionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OperacionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OperacionGroupByOutputType[P]>
      }
    >
  > 



export type OperacionWhereInput = {
  AND?: Prisma.OperacionWhereInput | Prisma.OperacionWhereInput[]
  OR?: Prisma.OperacionWhereInput[]
  NOT?: Prisma.OperacionWhereInput | Prisma.OperacionWhereInput[]
  id?: Prisma.IntFilter<"Operacion"> | number
  bodega?: Prisma.StringNullableFilter<"Operacion"> | string | null
  inicio?: Prisma.StringNullableFilter<"Operacion"> | string | null
  final?: Prisma.StringNullableFilter<"Operacion"> | string | null
  minutos?: Prisma.StringNullableFilter<"Operacion"> | string | null
  actividad?: Prisma.StringNullableFilter<"Operacion"> | string | null
  bitacoraId?: Prisma.IntFilter<"Operacion"> | number
  createdAt?: Prisma.DateTimeFilter<"Operacion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operacion"> | Date | string
  bitacora?: Prisma.XOR<Prisma.BitacoraScalarRelationFilter, Prisma.BitacoraWhereInput>
}

export type OperacionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  bodega?: Prisma.SortOrderInput | Prisma.SortOrder
  inicio?: Prisma.SortOrderInput | Prisma.SortOrder
  final?: Prisma.SortOrderInput | Prisma.SortOrder
  minutos?: Prisma.SortOrderInput | Prisma.SortOrder
  actividad?: Prisma.SortOrderInput | Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  bitacora?: Prisma.BitacoraOrderByWithRelationInput
  _relevance?: Prisma.OperacionOrderByRelevanceInput
}

export type OperacionWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.OperacionWhereInput | Prisma.OperacionWhereInput[]
  OR?: Prisma.OperacionWhereInput[]
  NOT?: Prisma.OperacionWhereInput | Prisma.OperacionWhereInput[]
  bodega?: Prisma.StringNullableFilter<"Operacion"> | string | null
  inicio?: Prisma.StringNullableFilter<"Operacion"> | string | null
  final?: Prisma.StringNullableFilter<"Operacion"> | string | null
  minutos?: Prisma.StringNullableFilter<"Operacion"> | string | null
  actividad?: Prisma.StringNullableFilter<"Operacion"> | string | null
  bitacoraId?: Prisma.IntFilter<"Operacion"> | number
  createdAt?: Prisma.DateTimeFilter<"Operacion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operacion"> | Date | string
  bitacora?: Prisma.XOR<Prisma.BitacoraScalarRelationFilter, Prisma.BitacoraWhereInput>
}, "id">

export type OperacionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  bodega?: Prisma.SortOrderInput | Prisma.SortOrder
  inicio?: Prisma.SortOrderInput | Prisma.SortOrder
  final?: Prisma.SortOrderInput | Prisma.SortOrder
  minutos?: Prisma.SortOrderInput | Prisma.SortOrder
  actividad?: Prisma.SortOrderInput | Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.OperacionCountOrderByAggregateInput
  _avg?: Prisma.OperacionAvgOrderByAggregateInput
  _max?: Prisma.OperacionMaxOrderByAggregateInput
  _min?: Prisma.OperacionMinOrderByAggregateInput
  _sum?: Prisma.OperacionSumOrderByAggregateInput
}

export type OperacionScalarWhereWithAggregatesInput = {
  AND?: Prisma.OperacionScalarWhereWithAggregatesInput | Prisma.OperacionScalarWhereWithAggregatesInput[]
  OR?: Prisma.OperacionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OperacionScalarWhereWithAggregatesInput | Prisma.OperacionScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Operacion"> | number
  bodega?: Prisma.StringNullableWithAggregatesFilter<"Operacion"> | string | null
  inicio?: Prisma.StringNullableWithAggregatesFilter<"Operacion"> | string | null
  final?: Prisma.StringNullableWithAggregatesFilter<"Operacion"> | string | null
  minutos?: Prisma.StringNullableWithAggregatesFilter<"Operacion"> | string | null
  actividad?: Prisma.StringNullableWithAggregatesFilter<"Operacion"> | string | null
  bitacoraId?: Prisma.IntWithAggregatesFilter<"Operacion"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Operacion"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Operacion"> | Date | string
}

export type OperacionCreateInput = {
  bodega?: string | null
  inicio?: string | null
  final?: string | null
  minutos?: string | null
  actividad?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  bitacora: Prisma.BitacoraCreateNestedOneWithoutOperacionesInput
}

export type OperacionUncheckedCreateInput = {
  id?: number
  bodega?: string | null
  inicio?: string | null
  final?: string | null
  minutos?: string | null
  actividad?: string | null
  bitacoraId: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OperacionUpdateInput = {
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  bitacora?: Prisma.BitacoraUpdateOneRequiredWithoutOperacionesNestedInput
}

export type OperacionUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bitacoraId?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperacionCreateManyInput = {
  id?: number
  bodega?: string | null
  inicio?: string | null
  final?: string | null
  minutos?: string | null
  actividad?: string | null
  bitacoraId: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OperacionUpdateManyMutationInput = {
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperacionUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bitacoraId?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperacionListRelationFilter = {
  every?: Prisma.OperacionWhereInput
  some?: Prisma.OperacionWhereInput
  none?: Prisma.OperacionWhereInput
}

export type OperacionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type OperacionOrderByRelevanceInput = {
  fields: Prisma.OperacionOrderByRelevanceFieldEnum | Prisma.OperacionOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type OperacionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  bodega?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  final?: Prisma.SortOrder
  minutos?: Prisma.SortOrder
  actividad?: Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OperacionAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
}

export type OperacionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  bodega?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  final?: Prisma.SortOrder
  minutos?: Prisma.SortOrder
  actividad?: Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OperacionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  bodega?: Prisma.SortOrder
  inicio?: Prisma.SortOrder
  final?: Prisma.SortOrder
  minutos?: Prisma.SortOrder
  actividad?: Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type OperacionSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  bitacoraId?: Prisma.SortOrder
}

export type OperacionCreateNestedManyWithoutBitacoraInput = {
  create?: Prisma.XOR<Prisma.OperacionCreateWithoutBitacoraInput, Prisma.OperacionUncheckedCreateWithoutBitacoraInput> | Prisma.OperacionCreateWithoutBitacoraInput[] | Prisma.OperacionUncheckedCreateWithoutBitacoraInput[]
  connectOrCreate?: Prisma.OperacionCreateOrConnectWithoutBitacoraInput | Prisma.OperacionCreateOrConnectWithoutBitacoraInput[]
  createMany?: Prisma.OperacionCreateManyBitacoraInputEnvelope
  connect?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
}

export type OperacionUncheckedCreateNestedManyWithoutBitacoraInput = {
  create?: Prisma.XOR<Prisma.OperacionCreateWithoutBitacoraInput, Prisma.OperacionUncheckedCreateWithoutBitacoraInput> | Prisma.OperacionCreateWithoutBitacoraInput[] | Prisma.OperacionUncheckedCreateWithoutBitacoraInput[]
  connectOrCreate?: Prisma.OperacionCreateOrConnectWithoutBitacoraInput | Prisma.OperacionCreateOrConnectWithoutBitacoraInput[]
  createMany?: Prisma.OperacionCreateManyBitacoraInputEnvelope
  connect?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
}

export type OperacionUpdateManyWithoutBitacoraNestedInput = {
  create?: Prisma.XOR<Prisma.OperacionCreateWithoutBitacoraInput, Prisma.OperacionUncheckedCreateWithoutBitacoraInput> | Prisma.OperacionCreateWithoutBitacoraInput[] | Prisma.OperacionUncheckedCreateWithoutBitacoraInput[]
  connectOrCreate?: Prisma.OperacionCreateOrConnectWithoutBitacoraInput | Prisma.OperacionCreateOrConnectWithoutBitacoraInput[]
  upsert?: Prisma.OperacionUpsertWithWhereUniqueWithoutBitacoraInput | Prisma.OperacionUpsertWithWhereUniqueWithoutBitacoraInput[]
  createMany?: Prisma.OperacionCreateManyBitacoraInputEnvelope
  set?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  disconnect?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  delete?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  connect?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  update?: Prisma.OperacionUpdateWithWhereUniqueWithoutBitacoraInput | Prisma.OperacionUpdateWithWhereUniqueWithoutBitacoraInput[]
  updateMany?: Prisma.OperacionUpdateManyWithWhereWithoutBitacoraInput | Prisma.OperacionUpdateManyWithWhereWithoutBitacoraInput[]
  deleteMany?: Prisma.OperacionScalarWhereInput | Prisma.OperacionScalarWhereInput[]
}

export type OperacionUncheckedUpdateManyWithoutBitacoraNestedInput = {
  create?: Prisma.XOR<Prisma.OperacionCreateWithoutBitacoraInput, Prisma.OperacionUncheckedCreateWithoutBitacoraInput> | Prisma.OperacionCreateWithoutBitacoraInput[] | Prisma.OperacionUncheckedCreateWithoutBitacoraInput[]
  connectOrCreate?: Prisma.OperacionCreateOrConnectWithoutBitacoraInput | Prisma.OperacionCreateOrConnectWithoutBitacoraInput[]
  upsert?: Prisma.OperacionUpsertWithWhereUniqueWithoutBitacoraInput | Prisma.OperacionUpsertWithWhereUniqueWithoutBitacoraInput[]
  createMany?: Prisma.OperacionCreateManyBitacoraInputEnvelope
  set?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  disconnect?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  delete?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  connect?: Prisma.OperacionWhereUniqueInput | Prisma.OperacionWhereUniqueInput[]
  update?: Prisma.OperacionUpdateWithWhereUniqueWithoutBitacoraInput | Prisma.OperacionUpdateWithWhereUniqueWithoutBitacoraInput[]
  updateMany?: Prisma.OperacionUpdateManyWithWhereWithoutBitacoraInput | Prisma.OperacionUpdateManyWithWhereWithoutBitacoraInput[]
  deleteMany?: Prisma.OperacionScalarWhereInput | Prisma.OperacionScalarWhereInput[]
}

export type OperacionCreateWithoutBitacoraInput = {
  bodega?: string | null
  inicio?: string | null
  final?: string | null
  minutos?: string | null
  actividad?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OperacionUncheckedCreateWithoutBitacoraInput = {
  id?: number
  bodega?: string | null
  inicio?: string | null
  final?: string | null
  minutos?: string | null
  actividad?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OperacionCreateOrConnectWithoutBitacoraInput = {
  where: Prisma.OperacionWhereUniqueInput
  create: Prisma.XOR<Prisma.OperacionCreateWithoutBitacoraInput, Prisma.OperacionUncheckedCreateWithoutBitacoraInput>
}

export type OperacionCreateManyBitacoraInputEnvelope = {
  data: Prisma.OperacionCreateManyBitacoraInput | Prisma.OperacionCreateManyBitacoraInput[]
  skipDuplicates?: boolean
}

export type OperacionUpsertWithWhereUniqueWithoutBitacoraInput = {
  where: Prisma.OperacionWhereUniqueInput
  update: Prisma.XOR<Prisma.OperacionUpdateWithoutBitacoraInput, Prisma.OperacionUncheckedUpdateWithoutBitacoraInput>
  create: Prisma.XOR<Prisma.OperacionCreateWithoutBitacoraInput, Prisma.OperacionUncheckedCreateWithoutBitacoraInput>
}

export type OperacionUpdateWithWhereUniqueWithoutBitacoraInput = {
  where: Prisma.OperacionWhereUniqueInput
  data: Prisma.XOR<Prisma.OperacionUpdateWithoutBitacoraInput, Prisma.OperacionUncheckedUpdateWithoutBitacoraInput>
}

export type OperacionUpdateManyWithWhereWithoutBitacoraInput = {
  where: Prisma.OperacionScalarWhereInput
  data: Prisma.XOR<Prisma.OperacionUpdateManyMutationInput, Prisma.OperacionUncheckedUpdateManyWithoutBitacoraInput>
}

export type OperacionScalarWhereInput = {
  AND?: Prisma.OperacionScalarWhereInput | Prisma.OperacionScalarWhereInput[]
  OR?: Prisma.OperacionScalarWhereInput[]
  NOT?: Prisma.OperacionScalarWhereInput | Prisma.OperacionScalarWhereInput[]
  id?: Prisma.IntFilter<"Operacion"> | number
  bodega?: Prisma.StringNullableFilter<"Operacion"> | string | null
  inicio?: Prisma.StringNullableFilter<"Operacion"> | string | null
  final?: Prisma.StringNullableFilter<"Operacion"> | string | null
  minutos?: Prisma.StringNullableFilter<"Operacion"> | string | null
  actividad?: Prisma.StringNullableFilter<"Operacion"> | string | null
  bitacoraId?: Prisma.IntFilter<"Operacion"> | number
  createdAt?: Prisma.DateTimeFilter<"Operacion"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Operacion"> | Date | string
}

export type OperacionCreateManyBitacoraInput = {
  id?: number
  bodega?: string | null
  inicio?: string | null
  final?: string | null
  minutos?: string | null
  actividad?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type OperacionUpdateWithoutBitacoraInput = {
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperacionUncheckedUpdateWithoutBitacoraInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type OperacionUncheckedUpdateManyWithoutBitacoraInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  bodega?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inicio?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  final?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  minutos?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  actividad?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type OperacionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  bodega?: boolean
  inicio?: boolean
  final?: boolean
  minutos?: boolean
  actividad?: boolean
  bitacoraId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  bitacora?: boolean | Prisma.BitacoraDefaultArgs<ExtArgs>
}, ExtArgs["result"]["operacion"]>



export type OperacionSelectScalar = {
  id?: boolean
  bodega?: boolean
  inicio?: boolean
  final?: boolean
  minutos?: boolean
  actividad?: boolean
  bitacoraId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type OperacionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "bodega" | "inicio" | "final" | "minutos" | "actividad" | "bitacoraId" | "createdAt" | "updatedAt", ExtArgs["result"]["operacion"]>
export type OperacionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  bitacora?: boolean | Prisma.BitacoraDefaultArgs<ExtArgs>
}

export type $OperacionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Operacion"
  objects: {
    bitacora: Prisma.$BitacoraPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    bodega: string | null
    inicio: string | null
    final: string | null
    minutos: string | null
    actividad: string | null
    bitacoraId: number
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["operacion"]>
  composites: {}
}

export type OperacionGetPayload<S extends boolean | null | undefined | OperacionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OperacionPayload, S>

export type OperacionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OperacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OperacionCountAggregateInputType | true
  }

export interface OperacionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Operacion'], meta: { name: 'Operacion' } }
  /**
   * Find zero or one Operacion that matches the filter.
   * @param {OperacionFindUniqueArgs} args - Arguments to find a Operacion
   * @example
   * // Get one Operacion
   * const operacion = await prisma.operacion.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OperacionFindUniqueArgs>(args: Prisma.SelectSubset<T, OperacionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Operacion that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OperacionFindUniqueOrThrowArgs} args - Arguments to find a Operacion
   * @example
   * // Get one Operacion
   * const operacion = await prisma.operacion.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OperacionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OperacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Operacion that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionFindFirstArgs} args - Arguments to find a Operacion
   * @example
   * // Get one Operacion
   * const operacion = await prisma.operacion.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OperacionFindFirstArgs>(args?: Prisma.SelectSubset<T, OperacionFindFirstArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Operacion that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionFindFirstOrThrowArgs} args - Arguments to find a Operacion
   * @example
   * // Get one Operacion
   * const operacion = await prisma.operacion.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OperacionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OperacionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Operacions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Operacions
   * const operacions = await prisma.operacion.findMany()
   * 
   * // Get first 10 Operacions
   * const operacions = await prisma.operacion.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const operacionWithIdOnly = await prisma.operacion.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OperacionFindManyArgs>(args?: Prisma.SelectSubset<T, OperacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Operacion.
   * @param {OperacionCreateArgs} args - Arguments to create a Operacion.
   * @example
   * // Create one Operacion
   * const Operacion = await prisma.operacion.create({
   *   data: {
   *     // ... data to create a Operacion
   *   }
   * })
   * 
   */
  create<T extends OperacionCreateArgs>(args: Prisma.SelectSubset<T, OperacionCreateArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Operacions.
   * @param {OperacionCreateManyArgs} args - Arguments to create many Operacions.
   * @example
   * // Create many Operacions
   * const operacion = await prisma.operacion.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OperacionCreateManyArgs>(args?: Prisma.SelectSubset<T, OperacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Operacion.
   * @param {OperacionDeleteArgs} args - Arguments to delete one Operacion.
   * @example
   * // Delete one Operacion
   * const Operacion = await prisma.operacion.delete({
   *   where: {
   *     // ... filter to delete one Operacion
   *   }
   * })
   * 
   */
  delete<T extends OperacionDeleteArgs>(args: Prisma.SelectSubset<T, OperacionDeleteArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Operacion.
   * @param {OperacionUpdateArgs} args - Arguments to update one Operacion.
   * @example
   * // Update one Operacion
   * const operacion = await prisma.operacion.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OperacionUpdateArgs>(args: Prisma.SelectSubset<T, OperacionUpdateArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Operacions.
   * @param {OperacionDeleteManyArgs} args - Arguments to filter Operacions to delete.
   * @example
   * // Delete a few Operacions
   * const { count } = await prisma.operacion.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OperacionDeleteManyArgs>(args?: Prisma.SelectSubset<T, OperacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Operacions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Operacions
   * const operacion = await prisma.operacion.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OperacionUpdateManyArgs>(args: Prisma.SelectSubset<T, OperacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Operacion.
   * @param {OperacionUpsertArgs} args - Arguments to update or create a Operacion.
   * @example
   * // Update or create a Operacion
   * const operacion = await prisma.operacion.upsert({
   *   create: {
   *     // ... data to create a Operacion
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Operacion we want to update
   *   }
   * })
   */
  upsert<T extends OperacionUpsertArgs>(args: Prisma.SelectSubset<T, OperacionUpsertArgs<ExtArgs>>): Prisma.Prisma__OperacionClient<runtime.Types.Result.GetResult<Prisma.$OperacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Operacions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionCountArgs} args - Arguments to filter Operacions to count.
   * @example
   * // Count the number of Operacions
   * const count = await prisma.operacion.count({
   *   where: {
   *     // ... the filter for the Operacions we want to count
   *   }
   * })
  **/
  count<T extends OperacionCountArgs>(
    args?: Prisma.Subset<T, OperacionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OperacionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Operacion.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OperacionAggregateArgs>(args: Prisma.Subset<T, OperacionAggregateArgs>): Prisma.PrismaPromise<GetOperacionAggregateType<T>>

  /**
   * Group by Operacion.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OperacionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OperacionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OperacionGroupByArgs['orderBy'] }
      : { orderBy?: OperacionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OperacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOperacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Operacion model
 */
readonly fields: OperacionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Operacion.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OperacionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  bitacora<T extends Prisma.BitacoraDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.BitacoraDefaultArgs<ExtArgs>>): Prisma.Prisma__BitacoraClient<runtime.Types.Result.GetResult<Prisma.$BitacoraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Operacion model
 */
export interface OperacionFieldRefs {
  readonly id: Prisma.FieldRef<"Operacion", 'Int'>
  readonly bodega: Prisma.FieldRef<"Operacion", 'String'>
  readonly inicio: Prisma.FieldRef<"Operacion", 'String'>
  readonly final: Prisma.FieldRef<"Operacion", 'String'>
  readonly minutos: Prisma.FieldRef<"Operacion", 'String'>
  readonly actividad: Prisma.FieldRef<"Operacion", 'String'>
  readonly bitacoraId: Prisma.FieldRef<"Operacion", 'Int'>
  readonly createdAt: Prisma.FieldRef<"Operacion", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Operacion", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Operacion findUnique
 */
export type OperacionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * Filter, which Operacion to fetch.
   */
  where: Prisma.OperacionWhereUniqueInput
}

/**
 * Operacion findUniqueOrThrow
 */
export type OperacionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * Filter, which Operacion to fetch.
   */
  where: Prisma.OperacionWhereUniqueInput
}

/**
 * Operacion findFirst
 */
export type OperacionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * Filter, which Operacion to fetch.
   */
  where?: Prisma.OperacionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operacions to fetch.
   */
  orderBy?: Prisma.OperacionOrderByWithRelationInput | Prisma.OperacionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Operacions.
   */
  cursor?: Prisma.OperacionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operacions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operacions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Operacions.
   */
  distinct?: Prisma.OperacionScalarFieldEnum | Prisma.OperacionScalarFieldEnum[]
}

/**
 * Operacion findFirstOrThrow
 */
export type OperacionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * Filter, which Operacion to fetch.
   */
  where?: Prisma.OperacionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operacions to fetch.
   */
  orderBy?: Prisma.OperacionOrderByWithRelationInput | Prisma.OperacionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Operacions.
   */
  cursor?: Prisma.OperacionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operacions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operacions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Operacions.
   */
  distinct?: Prisma.OperacionScalarFieldEnum | Prisma.OperacionScalarFieldEnum[]
}

/**
 * Operacion findMany
 */
export type OperacionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * Filter, which Operacions to fetch.
   */
  where?: Prisma.OperacionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Operacions to fetch.
   */
  orderBy?: Prisma.OperacionOrderByWithRelationInput | Prisma.OperacionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Operacions.
   */
  cursor?: Prisma.OperacionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Operacions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Operacions.
   */
  skip?: number
  distinct?: Prisma.OperacionScalarFieldEnum | Prisma.OperacionScalarFieldEnum[]
}

/**
 * Operacion create
 */
export type OperacionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * The data needed to create a Operacion.
   */
  data: Prisma.XOR<Prisma.OperacionCreateInput, Prisma.OperacionUncheckedCreateInput>
}

/**
 * Operacion createMany
 */
export type OperacionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Operacions.
   */
  data: Prisma.OperacionCreateManyInput | Prisma.OperacionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Operacion update
 */
export type OperacionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * The data needed to update a Operacion.
   */
  data: Prisma.XOR<Prisma.OperacionUpdateInput, Prisma.OperacionUncheckedUpdateInput>
  /**
   * Choose, which Operacion to update.
   */
  where: Prisma.OperacionWhereUniqueInput
}

/**
 * Operacion updateMany
 */
export type OperacionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Operacions.
   */
  data: Prisma.XOR<Prisma.OperacionUpdateManyMutationInput, Prisma.OperacionUncheckedUpdateManyInput>
  /**
   * Filter which Operacions to update
   */
  where?: Prisma.OperacionWhereInput
  /**
   * Limit how many Operacions to update.
   */
  limit?: number
}

/**
 * Operacion upsert
 */
export type OperacionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * The filter to search for the Operacion to update in case it exists.
   */
  where: Prisma.OperacionWhereUniqueInput
  /**
   * In case the Operacion found by the `where` argument doesn't exist, create a new Operacion with this data.
   */
  create: Prisma.XOR<Prisma.OperacionCreateInput, Prisma.OperacionUncheckedCreateInput>
  /**
   * In case the Operacion was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OperacionUpdateInput, Prisma.OperacionUncheckedUpdateInput>
}

/**
 * Operacion delete
 */
export type OperacionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
  /**
   * Filter which Operacion to delete.
   */
  where: Prisma.OperacionWhereUniqueInput
}

/**
 * Operacion deleteMany
 */
export type OperacionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Operacions to delete
   */
  where?: Prisma.OperacionWhereInput
  /**
   * Limit how many Operacions to delete.
   */
  limit?: number
}

/**
 * Operacion without action
 */
export type OperacionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Operacion
   */
  select?: Prisma.OperacionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Operacion
   */
  omit?: Prisma.OperacionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OperacionInclude<ExtArgs> | null
}
