
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Equipo` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Equipo
 * 
 */
export type EquipoModel = runtime.Types.Result.DefaultSelection<Prisma.$EquipoPayload>

export type AggregateEquipo = {
  _count: EquipoCountAggregateOutputType | null
  _avg: EquipoAvgAggregateOutputType | null
  _sum: EquipoSumAggregateOutputType | null
  _min: EquipoMinAggregateOutputType | null
  _max: EquipoMaxAggregateOutputType | null
}

export type EquipoAvgAggregateOutputType = {
  id: number | null
  userId: number | null
}

export type EquipoSumAggregateOutputType = {
  id: number | null
  userId: number | null
}

export type EquipoMinAggregateOutputType = {
  id: number | null
  userId: number | null
  userName: string | null
  equipo: string | null
  horometro: string | null
  operador: string | null
  fecha: string | null
  hora: string | null
  horaFin: string | null
  tiempoTotal: string | null
  horaDe: string | null
  horaA: string | null
  recomendaciones: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EquipoMaxAggregateOutputType = {
  id: number | null
  userId: number | null
  userName: string | null
  equipo: string | null
  horometro: string | null
  operador: string | null
  fecha: string | null
  hora: string | null
  horaFin: string | null
  tiempoTotal: string | null
  horaDe: string | null
  horaA: string | null
  recomendaciones: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EquipoCountAggregateOutputType = {
  id: number
  userId: number
  userName: number
  equipo: number
  horometro: number
  operador: number
  fecha: number
  hora: number
  horaFin: number
  tiempoTotal: number
  horaDe: number
  horaA: number
  recomendaciones: number
  inspecciones: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type EquipoAvgAggregateInputType = {
  id?: true
  userId?: true
}

export type EquipoSumAggregateInputType = {
  id?: true
  userId?: true
}

export type EquipoMinAggregateInputType = {
  id?: true
  userId?: true
  userName?: true
  equipo?: true
  horometro?: true
  operador?: true
  fecha?: true
  hora?: true
  horaFin?: true
  tiempoTotal?: true
  horaDe?: true
  horaA?: true
  recomendaciones?: true
  createdAt?: true
  updatedAt?: true
}

export type EquipoMaxAggregateInputType = {
  id?: true
  userId?: true
  userName?: true
  equipo?: true
  horometro?: true
  operador?: true
  fecha?: true
  hora?: true
  horaFin?: true
  tiempoTotal?: true
  horaDe?: true
  horaA?: true
  recomendaciones?: true
  createdAt?: true
  updatedAt?: true
}

export type EquipoCountAggregateInputType = {
  id?: true
  userId?: true
  userName?: true
  equipo?: true
  horometro?: true
  operador?: true
  fecha?: true
  hora?: true
  horaFin?: true
  tiempoTotal?: true
  horaDe?: true
  horaA?: true
  recomendaciones?: true
  inspecciones?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type EquipoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Equipo to aggregate.
   */
  where?: Prisma.EquipoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipos to fetch.
   */
  orderBy?: Prisma.EquipoOrderByWithRelationInput | Prisma.EquipoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.EquipoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Equipos
  **/
  _count?: true | EquipoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: EquipoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: EquipoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: EquipoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: EquipoMaxAggregateInputType
}

export type GetEquipoAggregateType<T extends EquipoAggregateArgs> = {
      [P in keyof T & keyof AggregateEquipo]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEquipo[P]>
    : Prisma.GetScalarType<T[P], AggregateEquipo[P]>
}




export type EquipoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EquipoWhereInput
  orderBy?: Prisma.EquipoOrderByWithAggregationInput | Prisma.EquipoOrderByWithAggregationInput[]
  by: Prisma.EquipoScalarFieldEnum[] | Prisma.EquipoScalarFieldEnum
  having?: Prisma.EquipoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EquipoCountAggregateInputType | true
  _avg?: EquipoAvgAggregateInputType
  _sum?: EquipoSumAggregateInputType
  _min?: EquipoMinAggregateInputType
  _max?: EquipoMaxAggregateInputType
}

export type EquipoGroupByOutputType = {
  id: number
  userId: number | null
  userName: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones: string | null
  inspecciones: runtime.JsonValue | null
  createdAt: Date
  updatedAt: Date
  _count: EquipoCountAggregateOutputType | null
  _avg: EquipoAvgAggregateOutputType | null
  _sum: EquipoSumAggregateOutputType | null
  _min: EquipoMinAggregateOutputType | null
  _max: EquipoMaxAggregateOutputType | null
}

type GetEquipoGroupByPayload<T extends EquipoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EquipoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof EquipoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EquipoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EquipoGroupByOutputType[P]>
      }
    >
  > 



export type EquipoWhereInput = {
  AND?: Prisma.EquipoWhereInput | Prisma.EquipoWhereInput[]
  OR?: Prisma.EquipoWhereInput[]
  NOT?: Prisma.EquipoWhereInput | Prisma.EquipoWhereInput[]
  id?: Prisma.IntFilter<"Equipo"> | number
  userId?: Prisma.IntNullableFilter<"Equipo"> | number | null
  userName?: Prisma.StringNullableFilter<"Equipo"> | string | null
  equipo?: Prisma.StringFilter<"Equipo"> | string
  horometro?: Prisma.StringFilter<"Equipo"> | string
  operador?: Prisma.StringFilter<"Equipo"> | string
  fecha?: Prisma.StringFilter<"Equipo"> | string
  hora?: Prisma.StringFilter<"Equipo"> | string
  horaFin?: Prisma.StringFilter<"Equipo"> | string
  tiempoTotal?: Prisma.StringFilter<"Equipo"> | string
  horaDe?: Prisma.StringFilter<"Equipo"> | string
  horaA?: Prisma.StringFilter<"Equipo"> | string
  recomendaciones?: Prisma.StringNullableFilter<"Equipo"> | string | null
  inspecciones?: Prisma.JsonNullableFilter<"Equipo">
  createdAt?: Prisma.DateTimeFilter<"Equipo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Equipo"> | Date | string
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}

export type EquipoOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  userName?: Prisma.SortOrderInput | Prisma.SortOrder
  equipo?: Prisma.SortOrder
  horometro?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  fecha?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  horaFin?: Prisma.SortOrder
  tiempoTotal?: Prisma.SortOrder
  horaDe?: Prisma.SortOrder
  horaA?: Prisma.SortOrder
  recomendaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  inspecciones?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  _relevance?: Prisma.EquipoOrderByRelevanceInput
}

export type EquipoWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.EquipoWhereInput | Prisma.EquipoWhereInput[]
  OR?: Prisma.EquipoWhereInput[]
  NOT?: Prisma.EquipoWhereInput | Prisma.EquipoWhereInput[]
  userId?: Prisma.IntNullableFilter<"Equipo"> | number | null
  userName?: Prisma.StringNullableFilter<"Equipo"> | string | null
  equipo?: Prisma.StringFilter<"Equipo"> | string
  horometro?: Prisma.StringFilter<"Equipo"> | string
  operador?: Prisma.StringFilter<"Equipo"> | string
  fecha?: Prisma.StringFilter<"Equipo"> | string
  hora?: Prisma.StringFilter<"Equipo"> | string
  horaFin?: Prisma.StringFilter<"Equipo"> | string
  tiempoTotal?: Prisma.StringFilter<"Equipo"> | string
  horaDe?: Prisma.StringFilter<"Equipo"> | string
  horaA?: Prisma.StringFilter<"Equipo"> | string
  recomendaciones?: Prisma.StringNullableFilter<"Equipo"> | string | null
  inspecciones?: Prisma.JsonNullableFilter<"Equipo">
  createdAt?: Prisma.DateTimeFilter<"Equipo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Equipo"> | Date | string
  user?: Prisma.XOR<Prisma.UserNullableScalarRelationFilter, Prisma.UserWhereInput> | null
}, "id">

export type EquipoOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrderInput | Prisma.SortOrder
  userName?: Prisma.SortOrderInput | Prisma.SortOrder
  equipo?: Prisma.SortOrder
  horometro?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  fecha?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  horaFin?: Prisma.SortOrder
  tiempoTotal?: Prisma.SortOrder
  horaDe?: Prisma.SortOrder
  horaA?: Prisma.SortOrder
  recomendaciones?: Prisma.SortOrderInput | Prisma.SortOrder
  inspecciones?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.EquipoCountOrderByAggregateInput
  _avg?: Prisma.EquipoAvgOrderByAggregateInput
  _max?: Prisma.EquipoMaxOrderByAggregateInput
  _min?: Prisma.EquipoMinOrderByAggregateInput
  _sum?: Prisma.EquipoSumOrderByAggregateInput
}

export type EquipoScalarWhereWithAggregatesInput = {
  AND?: Prisma.EquipoScalarWhereWithAggregatesInput | Prisma.EquipoScalarWhereWithAggregatesInput[]
  OR?: Prisma.EquipoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.EquipoScalarWhereWithAggregatesInput | Prisma.EquipoScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Equipo"> | number
  userId?: Prisma.IntNullableWithAggregatesFilter<"Equipo"> | number | null
  userName?: Prisma.StringNullableWithAggregatesFilter<"Equipo"> | string | null
  equipo?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  horometro?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  operador?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  fecha?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  hora?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  horaFin?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  tiempoTotal?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  horaDe?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  horaA?: Prisma.StringWithAggregatesFilter<"Equipo"> | string
  recomendaciones?: Prisma.StringNullableWithAggregatesFilter<"Equipo"> | string | null
  inspecciones?: Prisma.JsonNullableWithAggregatesFilter<"Equipo">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Equipo"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Equipo"> | Date | string
}

export type EquipoCreateInput = {
  userName?: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones?: string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
  user?: Prisma.UserCreateNestedOneWithoutEquiposInput
}

export type EquipoUncheckedCreateInput = {
  id?: number
  userId?: number | null
  userName?: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones?: string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EquipoUpdateInput = {
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneWithoutEquiposNestedInput
}

export type EquipoUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipoCreateManyInput = {
  id?: number
  userId?: number | null
  userName?: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones?: string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EquipoUpdateManyMutationInput = {
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipoUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipoListRelationFilter = {
  every?: Prisma.EquipoWhereInput
  some?: Prisma.EquipoWhereInput
  none?: Prisma.EquipoWhereInput
}

export type EquipoOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EquipoOrderByRelevanceInput = {
  fields: Prisma.EquipoOrderByRelevanceFieldEnum | Prisma.EquipoOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type EquipoCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  equipo?: Prisma.SortOrder
  horometro?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  fecha?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  horaFin?: Prisma.SortOrder
  tiempoTotal?: Prisma.SortOrder
  horaDe?: Prisma.SortOrder
  horaA?: Prisma.SortOrder
  recomendaciones?: Prisma.SortOrder
  inspecciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EquipoAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type EquipoMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  equipo?: Prisma.SortOrder
  horometro?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  fecha?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  horaFin?: Prisma.SortOrder
  tiempoTotal?: Prisma.SortOrder
  horaDe?: Prisma.SortOrder
  horaA?: Prisma.SortOrder
  recomendaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EquipoMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  userName?: Prisma.SortOrder
  equipo?: Prisma.SortOrder
  horometro?: Prisma.SortOrder
  operador?: Prisma.SortOrder
  fecha?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  horaFin?: Prisma.SortOrder
  tiempoTotal?: Prisma.SortOrder
  horaDe?: Prisma.SortOrder
  horaA?: Prisma.SortOrder
  recomendaciones?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EquipoSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type EquipoCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.EquipoCreateWithoutUserInput, Prisma.EquipoUncheckedCreateWithoutUserInput> | Prisma.EquipoCreateWithoutUserInput[] | Prisma.EquipoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.EquipoCreateOrConnectWithoutUserInput | Prisma.EquipoCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.EquipoCreateManyUserInputEnvelope
  connect?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
}

export type EquipoUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.EquipoCreateWithoutUserInput, Prisma.EquipoUncheckedCreateWithoutUserInput> | Prisma.EquipoCreateWithoutUserInput[] | Prisma.EquipoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.EquipoCreateOrConnectWithoutUserInput | Prisma.EquipoCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.EquipoCreateManyUserInputEnvelope
  connect?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
}

export type EquipoUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.EquipoCreateWithoutUserInput, Prisma.EquipoUncheckedCreateWithoutUserInput> | Prisma.EquipoCreateWithoutUserInput[] | Prisma.EquipoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.EquipoCreateOrConnectWithoutUserInput | Prisma.EquipoCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.EquipoUpsertWithWhereUniqueWithoutUserInput | Prisma.EquipoUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.EquipoCreateManyUserInputEnvelope
  set?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  disconnect?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  delete?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  connect?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  update?: Prisma.EquipoUpdateWithWhereUniqueWithoutUserInput | Prisma.EquipoUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.EquipoUpdateManyWithWhereWithoutUserInput | Prisma.EquipoUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.EquipoScalarWhereInput | Prisma.EquipoScalarWhereInput[]
}

export type EquipoUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.EquipoCreateWithoutUserInput, Prisma.EquipoUncheckedCreateWithoutUserInput> | Prisma.EquipoCreateWithoutUserInput[] | Prisma.EquipoUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.EquipoCreateOrConnectWithoutUserInput | Prisma.EquipoCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.EquipoUpsertWithWhereUniqueWithoutUserInput | Prisma.EquipoUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.EquipoCreateManyUserInputEnvelope
  set?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  disconnect?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  delete?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  connect?: Prisma.EquipoWhereUniqueInput | Prisma.EquipoWhereUniqueInput[]
  update?: Prisma.EquipoUpdateWithWhereUniqueWithoutUserInput | Prisma.EquipoUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.EquipoUpdateManyWithWhereWithoutUserInput | Prisma.EquipoUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.EquipoScalarWhereInput | Prisma.EquipoScalarWhereInput[]
}

export type EquipoCreateWithoutUserInput = {
  userName?: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones?: string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EquipoUncheckedCreateWithoutUserInput = {
  id?: number
  userName?: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones?: string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EquipoCreateOrConnectWithoutUserInput = {
  where: Prisma.EquipoWhereUniqueInput
  create: Prisma.XOR<Prisma.EquipoCreateWithoutUserInput, Prisma.EquipoUncheckedCreateWithoutUserInput>
}

export type EquipoCreateManyUserInputEnvelope = {
  data: Prisma.EquipoCreateManyUserInput | Prisma.EquipoCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type EquipoUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.EquipoWhereUniqueInput
  update: Prisma.XOR<Prisma.EquipoUpdateWithoutUserInput, Prisma.EquipoUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.EquipoCreateWithoutUserInput, Prisma.EquipoUncheckedCreateWithoutUserInput>
}

export type EquipoUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.EquipoWhereUniqueInput
  data: Prisma.XOR<Prisma.EquipoUpdateWithoutUserInput, Prisma.EquipoUncheckedUpdateWithoutUserInput>
}

export type EquipoUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.EquipoScalarWhereInput
  data: Prisma.XOR<Prisma.EquipoUpdateManyMutationInput, Prisma.EquipoUncheckedUpdateManyWithoutUserInput>
}

export type EquipoScalarWhereInput = {
  AND?: Prisma.EquipoScalarWhereInput | Prisma.EquipoScalarWhereInput[]
  OR?: Prisma.EquipoScalarWhereInput[]
  NOT?: Prisma.EquipoScalarWhereInput | Prisma.EquipoScalarWhereInput[]
  id?: Prisma.IntFilter<"Equipo"> | number
  userId?: Prisma.IntNullableFilter<"Equipo"> | number | null
  userName?: Prisma.StringNullableFilter<"Equipo"> | string | null
  equipo?: Prisma.StringFilter<"Equipo"> | string
  horometro?: Prisma.StringFilter<"Equipo"> | string
  operador?: Prisma.StringFilter<"Equipo"> | string
  fecha?: Prisma.StringFilter<"Equipo"> | string
  hora?: Prisma.StringFilter<"Equipo"> | string
  horaFin?: Prisma.StringFilter<"Equipo"> | string
  tiempoTotal?: Prisma.StringFilter<"Equipo"> | string
  horaDe?: Prisma.StringFilter<"Equipo"> | string
  horaA?: Prisma.StringFilter<"Equipo"> | string
  recomendaciones?: Prisma.StringNullableFilter<"Equipo"> | string | null
  inspecciones?: Prisma.JsonNullableFilter<"Equipo">
  createdAt?: Prisma.DateTimeFilter<"Equipo"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Equipo"> | Date | string
}

export type EquipoCreateManyUserInput = {
  id?: number
  userName?: string | null
  equipo: string
  horometro: string
  operador: string
  fecha: string
  hora: string
  horaFin: string
  tiempoTotal: string
  horaDe: string
  horaA: string
  recomendaciones?: string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EquipoUpdateWithoutUserInput = {
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipoUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EquipoUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  userName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  equipo?: Prisma.StringFieldUpdateOperationsInput | string
  horometro?: Prisma.StringFieldUpdateOperationsInput | string
  operador?: Prisma.StringFieldUpdateOperationsInput | string
  fecha?: Prisma.StringFieldUpdateOperationsInput | string
  hora?: Prisma.StringFieldUpdateOperationsInput | string
  horaFin?: Prisma.StringFieldUpdateOperationsInput | string
  tiempoTotal?: Prisma.StringFieldUpdateOperationsInput | string
  horaDe?: Prisma.StringFieldUpdateOperationsInput | string
  horaA?: Prisma.StringFieldUpdateOperationsInput | string
  recomendaciones?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  inspecciones?: Prisma.NullableJsonNullValueInput | runtime.InputJsonValue
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type EquipoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  userName?: boolean
  equipo?: boolean
  horometro?: boolean
  operador?: boolean
  fecha?: boolean
  hora?: boolean
  horaFin?: boolean
  tiempoTotal?: boolean
  horaDe?: boolean
  horaA?: boolean
  recomendaciones?: boolean
  inspecciones?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.Equipo$userArgs<ExtArgs>
}, ExtArgs["result"]["equipo"]>



export type EquipoSelectScalar = {
  id?: boolean
  userId?: boolean
  userName?: boolean
  equipo?: boolean
  horometro?: boolean
  operador?: boolean
  fecha?: boolean
  hora?: boolean
  horaFin?: boolean
  tiempoTotal?: boolean
  horaDe?: boolean
  horaA?: boolean
  recomendaciones?: boolean
  inspecciones?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type EquipoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "userId" | "userName" | "equipo" | "horometro" | "operador" | "fecha" | "hora" | "horaFin" | "tiempoTotal" | "horaDe" | "horaA" | "recomendaciones" | "inspecciones" | "createdAt" | "updatedAt", ExtArgs["result"]["equipo"]>
export type EquipoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.Equipo$userArgs<ExtArgs>
}

export type $EquipoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Equipo"
  objects: {
    user: Prisma.$UserPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    userId: number | null
    userName: string | null
    equipo: string
    horometro: string
    operador: string
    fecha: string
    hora: string
    horaFin: string
    tiempoTotal: string
    horaDe: string
    horaA: string
    recomendaciones: string | null
    inspecciones: runtime.JsonValue | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["equipo"]>
  composites: {}
}

export type EquipoGetPayload<S extends boolean | null | undefined | EquipoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$EquipoPayload, S>

export type EquipoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<EquipoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: EquipoCountAggregateInputType | true
  }

export interface EquipoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Equipo'], meta: { name: 'Equipo' } }
  /**
   * Find zero or one Equipo that matches the filter.
   * @param {EquipoFindUniqueArgs} args - Arguments to find a Equipo
   * @example
   * // Get one Equipo
   * const equipo = await prisma.equipo.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EquipoFindUniqueArgs>(args: Prisma.SelectSubset<T, EquipoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Equipo that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EquipoFindUniqueOrThrowArgs} args - Arguments to find a Equipo
   * @example
   * // Get one Equipo
   * const equipo = await prisma.equipo.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EquipoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, EquipoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Equipo that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoFindFirstArgs} args - Arguments to find a Equipo
   * @example
   * // Get one Equipo
   * const equipo = await prisma.equipo.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EquipoFindFirstArgs>(args?: Prisma.SelectSubset<T, EquipoFindFirstArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Equipo that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoFindFirstOrThrowArgs} args - Arguments to find a Equipo
   * @example
   * // Get one Equipo
   * const equipo = await prisma.equipo.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EquipoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, EquipoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Equipos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Equipos
   * const equipos = await prisma.equipo.findMany()
   * 
   * // Get first 10 Equipos
   * const equipos = await prisma.equipo.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const equipoWithIdOnly = await prisma.equipo.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends EquipoFindManyArgs>(args?: Prisma.SelectSubset<T, EquipoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Equipo.
   * @param {EquipoCreateArgs} args - Arguments to create a Equipo.
   * @example
   * // Create one Equipo
   * const Equipo = await prisma.equipo.create({
   *   data: {
   *     // ... data to create a Equipo
   *   }
   * })
   * 
   */
  create<T extends EquipoCreateArgs>(args: Prisma.SelectSubset<T, EquipoCreateArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Equipos.
   * @param {EquipoCreateManyArgs} args - Arguments to create many Equipos.
   * @example
   * // Create many Equipos
   * const equipo = await prisma.equipo.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends EquipoCreateManyArgs>(args?: Prisma.SelectSubset<T, EquipoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Equipo.
   * @param {EquipoDeleteArgs} args - Arguments to delete one Equipo.
   * @example
   * // Delete one Equipo
   * const Equipo = await prisma.equipo.delete({
   *   where: {
   *     // ... filter to delete one Equipo
   *   }
   * })
   * 
   */
  delete<T extends EquipoDeleteArgs>(args: Prisma.SelectSubset<T, EquipoDeleteArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Equipo.
   * @param {EquipoUpdateArgs} args - Arguments to update one Equipo.
   * @example
   * // Update one Equipo
   * const equipo = await prisma.equipo.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends EquipoUpdateArgs>(args: Prisma.SelectSubset<T, EquipoUpdateArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Equipos.
   * @param {EquipoDeleteManyArgs} args - Arguments to filter Equipos to delete.
   * @example
   * // Delete a few Equipos
   * const { count } = await prisma.equipo.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends EquipoDeleteManyArgs>(args?: Prisma.SelectSubset<T, EquipoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Equipos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Equipos
   * const equipo = await prisma.equipo.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends EquipoUpdateManyArgs>(args: Prisma.SelectSubset<T, EquipoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Equipo.
   * @param {EquipoUpsertArgs} args - Arguments to update or create a Equipo.
   * @example
   * // Update or create a Equipo
   * const equipo = await prisma.equipo.upsert({
   *   create: {
   *     // ... data to create a Equipo
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Equipo we want to update
   *   }
   * })
   */
  upsert<T extends EquipoUpsertArgs>(args: Prisma.SelectSubset<T, EquipoUpsertArgs<ExtArgs>>): Prisma.Prisma__EquipoClient<runtime.Types.Result.GetResult<Prisma.$EquipoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Equipos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoCountArgs} args - Arguments to filter Equipos to count.
   * @example
   * // Count the number of Equipos
   * const count = await prisma.equipo.count({
   *   where: {
   *     // ... the filter for the Equipos we want to count
   *   }
   * })
  **/
  count<T extends EquipoCountArgs>(
    args?: Prisma.Subset<T, EquipoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EquipoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Equipo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends EquipoAggregateArgs>(args: Prisma.Subset<T, EquipoAggregateArgs>): Prisma.PrismaPromise<GetEquipoAggregateType<T>>

  /**
   * Group by Equipo.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EquipoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends EquipoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EquipoGroupByArgs['orderBy'] }
      : { orderBy?: EquipoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, EquipoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Equipo model
 */
readonly fields: EquipoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Equipo.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EquipoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.Equipo$userArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Equipo$userArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Equipo model
 */
export interface EquipoFieldRefs {
  readonly id: Prisma.FieldRef<"Equipo", 'Int'>
  readonly userId: Prisma.FieldRef<"Equipo", 'Int'>
  readonly userName: Prisma.FieldRef<"Equipo", 'String'>
  readonly equipo: Prisma.FieldRef<"Equipo", 'String'>
  readonly horometro: Prisma.FieldRef<"Equipo", 'String'>
  readonly operador: Prisma.FieldRef<"Equipo", 'String'>
  readonly fecha: Prisma.FieldRef<"Equipo", 'String'>
  readonly hora: Prisma.FieldRef<"Equipo", 'String'>
  readonly horaFin: Prisma.FieldRef<"Equipo", 'String'>
  readonly tiempoTotal: Prisma.FieldRef<"Equipo", 'String'>
  readonly horaDe: Prisma.FieldRef<"Equipo", 'String'>
  readonly horaA: Prisma.FieldRef<"Equipo", 'String'>
  readonly recomendaciones: Prisma.FieldRef<"Equipo", 'String'>
  readonly inspecciones: Prisma.FieldRef<"Equipo", 'Json'>
  readonly createdAt: Prisma.FieldRef<"Equipo", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Equipo", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Equipo findUnique
 */
export type EquipoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * Filter, which Equipo to fetch.
   */
  where: Prisma.EquipoWhereUniqueInput
}

/**
 * Equipo findUniqueOrThrow
 */
export type EquipoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * Filter, which Equipo to fetch.
   */
  where: Prisma.EquipoWhereUniqueInput
}

/**
 * Equipo findFirst
 */
export type EquipoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * Filter, which Equipo to fetch.
   */
  where?: Prisma.EquipoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipos to fetch.
   */
  orderBy?: Prisma.EquipoOrderByWithRelationInput | Prisma.EquipoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Equipos.
   */
  cursor?: Prisma.EquipoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Equipos.
   */
  distinct?: Prisma.EquipoScalarFieldEnum | Prisma.EquipoScalarFieldEnum[]
}

/**
 * Equipo findFirstOrThrow
 */
export type EquipoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * Filter, which Equipo to fetch.
   */
  where?: Prisma.EquipoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipos to fetch.
   */
  orderBy?: Prisma.EquipoOrderByWithRelationInput | Prisma.EquipoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Equipos.
   */
  cursor?: Prisma.EquipoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Equipos.
   */
  distinct?: Prisma.EquipoScalarFieldEnum | Prisma.EquipoScalarFieldEnum[]
}

/**
 * Equipo findMany
 */
export type EquipoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * Filter, which Equipos to fetch.
   */
  where?: Prisma.EquipoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Equipos to fetch.
   */
  orderBy?: Prisma.EquipoOrderByWithRelationInput | Prisma.EquipoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Equipos.
   */
  cursor?: Prisma.EquipoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Equipos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Equipos.
   */
  skip?: number
  distinct?: Prisma.EquipoScalarFieldEnum | Prisma.EquipoScalarFieldEnum[]
}

/**
 * Equipo create
 */
export type EquipoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * The data needed to create a Equipo.
   */
  data: Prisma.XOR<Prisma.EquipoCreateInput, Prisma.EquipoUncheckedCreateInput>
}

/**
 * Equipo createMany
 */
export type EquipoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Equipos.
   */
  data: Prisma.EquipoCreateManyInput | Prisma.EquipoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Equipo update
 */
export type EquipoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * The data needed to update a Equipo.
   */
  data: Prisma.XOR<Prisma.EquipoUpdateInput, Prisma.EquipoUncheckedUpdateInput>
  /**
   * Choose, which Equipo to update.
   */
  where: Prisma.EquipoWhereUniqueInput
}

/**
 * Equipo updateMany
 */
export type EquipoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Equipos.
   */
  data: Prisma.XOR<Prisma.EquipoUpdateManyMutationInput, Prisma.EquipoUncheckedUpdateManyInput>
  /**
   * Filter which Equipos to update
   */
  where?: Prisma.EquipoWhereInput
  /**
   * Limit how many Equipos to update.
   */
  limit?: number
}

/**
 * Equipo upsert
 */
export type EquipoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * The filter to search for the Equipo to update in case it exists.
   */
  where: Prisma.EquipoWhereUniqueInput
  /**
   * In case the Equipo found by the `where` argument doesn't exist, create a new Equipo with this data.
   */
  create: Prisma.XOR<Prisma.EquipoCreateInput, Prisma.EquipoUncheckedCreateInput>
  /**
   * In case the Equipo was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EquipoUpdateInput, Prisma.EquipoUncheckedUpdateInput>
}

/**
 * Equipo delete
 */
export type EquipoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
  /**
   * Filter which Equipo to delete.
   */
  where: Prisma.EquipoWhereUniqueInput
}

/**
 * Equipo deleteMany
 */
export type EquipoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Equipos to delete
   */
  where?: Prisma.EquipoWhereInput
  /**
   * Limit how many Equipos to delete.
   */
  limit?: number
}

/**
 * Equipo.user
 */
export type Equipo$userArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
}

/**
 * Equipo without action
 */
export type EquipoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Equipo
   */
  select?: Prisma.EquipoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Equipo
   */
  omit?: Prisma.EquipoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EquipoInclude<ExtArgs> | null
}
